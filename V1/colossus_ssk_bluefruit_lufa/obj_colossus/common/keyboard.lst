   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_setup,"ax",@progbits
  12               		.weak	matrix_setup
  14               	matrix_setup:
  15               	.LFB5:
  16               		.file 1 "../../../../tmk_core/common/keyboard.c"
   1:../../../../tmk_core/common/keyboard.c **** /*
   2:../../../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/common/keyboard.c **** 
   4:../../../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../../../tmk_core/common/keyboard.c **** 
   9:../../../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../../../tmk_core/common/keyboard.c **** 
  14:../../../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../../../tmk_core/common/keyboard.c **** */
  17:../../../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  34:../../../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  35:../../../../tmk_core/common/keyboard.c **** #endif
  36:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  37:../../../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  38:../../../../tmk_core/common/keyboard.c **** #endif
  39:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  40:../../../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  41:../../../../tmk_core/common/keyboard.c **** #endif
  42:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  43:../../../../tmk_core/common/keyboard.c **** #include "adb.h"
  44:../../../../tmk_core/common/keyboard.c **** #endif
  45:../../../../tmk_core/common/keyboard.c **** 
  46:../../../../tmk_core/common/keyboard.c **** 
  47:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  48:../../../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  49:../../../../tmk_core/common/keyboard.c **** {
  50:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  51:../../../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  52:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  53:../../../../tmk_core/common/keyboard.c ****         return false;
  54:../../../../tmk_core/common/keyboard.c **** 
  55:../../../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  56:../../../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  57:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  58:../../../../tmk_core/common/keyboard.c ****             return true;
  59:../../../../tmk_core/common/keyboard.c ****     }
  60:../../../../tmk_core/common/keyboard.c ****     return false;
  61:../../../../tmk_core/common/keyboard.c **** }
  62:../../../../tmk_core/common/keyboard.c **** #endif
  63:../../../../tmk_core/common/keyboard.c **** 
  64:../../../../tmk_core/common/keyboard.c **** 
  65:../../../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  17               		.loc 1 65 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23 0000 0895      		ret
  24               		.cfi_endproc
  25               	.LFE5:
  27               		.section	.text.keyboard_setup,"ax",@progbits
  28               	.global	keyboard_setup
  30               	keyboard_setup:
  31               	.LFB6:
  66:../../../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../../../tmk_core/common/keyboard.c **** {
  32               		.loc 1 67 0
  33               		.cfi_startproc
  34               	/* prologue: function */
  35               	/* frame size = 0 */
  36               	/* stack size = 0 */
  37               	.L__stack_usage = 0
  68:../../../../tmk_core/common/keyboard.c ****     matrix_setup();
  38               		.loc 1 68 0
  39 0000 0C94 0000 		jmp matrix_setup
  40               	.LVL0:
  41               		.cfi_endproc
  42               	.LFE6:
  44               		.section	.text.keyboard_init,"ax",@progbits
  45               	.global	keyboard_init
  47               	keyboard_init:
  48               	.LFB7:
  69:../../../../tmk_core/common/keyboard.c **** }
  70:../../../../tmk_core/common/keyboard.c **** 
  71:../../../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../../../tmk_core/common/keyboard.c **** {
  49               		.loc 1 72 0
  50               		.cfi_startproc
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
  73:../../../../tmk_core/common/keyboard.c ****     timer_init();
  55               		.loc 1 73 0
  56 0000 0E94 0000 		call timer_init
  57               	.LVL1:
  74:../../../../tmk_core/common/keyboard.c ****     matrix_init();
  58               		.loc 1 74 0
  59 0004 0E94 0000 		call matrix_init
  60               	.LVL2:
  75:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../../../tmk_core/common/keyboard.c **** #endif
  78:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../../../tmk_core/common/keyboard.c **** #endif
  81:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../../../tmk_core/common/keyboard.c **** #endif
  84:../../../../tmk_core/common/keyboard.c **** 
  85:../../../../tmk_core/common/keyboard.c **** 
  86:../../../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../../../tmk_core/common/keyboard.c ****     bootmagic();
  61               		.loc 1 87 0
  62 0008 0C94 0000 		jmp bootmagic
  63               	.LVL3:
  64               		.cfi_endproc
  65               	.LFE7:
  67               		.section	.text.keyboard_set_leds,"ax",@progbits
  68               	.global	keyboard_set_leds
  70               	keyboard_set_leds:
  71               	.LFB9:
  88:../../../../tmk_core/common/keyboard.c **** #endif
  89:../../../../tmk_core/common/keyboard.c **** 
  90:../../../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../../../tmk_core/common/keyboard.c **** #endif
  93:../../../../tmk_core/common/keyboard.c **** }
  94:../../../../tmk_core/common/keyboard.c **** 
  95:../../../../tmk_core/common/keyboard.c **** /*
  96:../../../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../../../tmk_core/common/keyboard.c ****  */
  99:../../../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../../../tmk_core/common/keyboard.c **** {
 101:../../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../../../tmk_core/common/keyboard.c **** #endif
 105:../../../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../../../tmk_core/common/keyboard.c **** 
 109:../../../../tmk_core/common/keyboard.c ****     matrix_scan();
 110:../../../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 111:../../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../../../tmk_core/common/keyboard.c ****                  */
 120:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../../../tmk_core/common/keyboard.c ****                 }
 123:../../../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../../../tmk_core/common/keyboard.c ****                 continue;
 125:../../../../tmk_core/common/keyboard.c ****             }
 126:../../../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../../../tmk_core/common/keyboard.c **** #endif
 128:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 132:../../../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../../../tmk_core/common/keyboard.c ****                     });
 136:../../../../tmk_core/common/keyboard.c ****                     // record a processed key
 137:../../../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 138:../../../../tmk_core/common/keyboard.c ****                     // process a key per task call
 139:../../../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 140:../../../../tmk_core/common/keyboard.c ****                 }
 141:../../../../tmk_core/common/keyboard.c ****             }
 142:../../../../tmk_core/common/keyboard.c ****         }
 143:../../../../tmk_core/common/keyboard.c ****     }
 144:../../../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 145:../../../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 146:../../../../tmk_core/common/keyboard.c **** 
 147:../../../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 148:../../../../tmk_core/common/keyboard.c **** 
 149:../../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 150:../../../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 151:../../../../tmk_core/common/keyboard.c ****     mousekey_task();
 152:../../../../tmk_core/common/keyboard.c **** #endif
 153:../../../../tmk_core/common/keyboard.c **** 
 154:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 155:../../../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 156:../../../../tmk_core/common/keyboard.c **** #endif
 157:../../../../tmk_core/common/keyboard.c **** 
 158:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 159:../../../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 160:../../../../tmk_core/common/keyboard.c **** #endif
 161:../../../../tmk_core/common/keyboard.c **** 
 162:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 163:../../../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 164:../../../../tmk_core/common/keyboard.c **** #endif
 165:../../../../tmk_core/common/keyboard.c **** 
 166:../../../../tmk_core/common/keyboard.c ****     // update LED
 167:../../../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 168:../../../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 169:../../../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 170:../../../../tmk_core/common/keyboard.c ****     }
 171:../../../../tmk_core/common/keyboard.c **** }
 172:../../../../tmk_core/common/keyboard.c **** 
 173:../../../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 174:../../../../tmk_core/common/keyboard.c **** {
  72               		.loc 1 174 0
  73               		.cfi_startproc
  74               	.LVL4:
  75 0000 CF93      		push r28
  76               	.LCFI0:
  77               		.cfi_def_cfa_offset 3
  78               		.cfi_offset 28, -2
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 1 */
  82               	.L__stack_usage = 1
  83 0002 C82F      		mov r28,r24
 175:../../../../tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
  84               		.loc 1 175 0
  85 0004 8091 0000 		lds r24,debug_config
  86               	.LVL5:
  87 0008 82FF      		sbrs r24,2
  88 000a 00C0      		rjmp .L6
  89               		.loc 1 175 0 is_stmt 0 discriminator 1
  90 000c 80FF      		sbrs r24,0
  91 000e 00C0      		rjmp .L7
  92 0010 80E0      		ldi r24,lo8(__c.2262)
  93 0012 90E0      		ldi r25,hi8(__c.2262)
  94 0014 0E94 0000 		call xputs
  95               	.LVL6:
  96               	.L7:
  97               		.loc 1 175 0 discriminator 2
  98 0018 8091 0000 		lds r24,debug_config
  99 001c 80FF      		sbrs r24,0
 100 001e 00C0      		rjmp .L8
 101               		.loc 1 175 0 discriminator 1
 102 0020 1F92      		push __zero_reg__
 103               	.LCFI1:
 104               		.cfi_def_cfa_offset 4
 105 0022 CF93      		push r28
 106               	.LCFI2:
 107               		.cfi_def_cfa_offset 5
 108 0024 20E0      		ldi r18,lo8(__c.2264)
 109 0026 30E0      		ldi r19,hi8(__c.2264)
 110 0028 3F93      		push r19
 111               	.LCFI3:
 112               		.cfi_def_cfa_offset 6
 113 002a 2F93      		push r18
 114               	.LCFI4:
 115               		.cfi_def_cfa_offset 7
 116 002c 0E94 0000 		call __xprintf
 117               	.LVL7:
 118 0030 0F90      		pop __tmp_reg__
 119 0032 0F90      		pop __tmp_reg__
 120 0034 0F90      		pop __tmp_reg__
 121 0036 0F90      		pop __tmp_reg__
 122               	.LCFI5:
 123               		.cfi_def_cfa_offset 3
 124               	.L8:
 125               		.loc 1 175 0 discriminator 2
 126 0038 8091 0000 		lds r24,debug_config
 127 003c 80FF      		sbrs r24,0
 128 003e 00C0      		rjmp .L6
 129               		.loc 1 175 0 discriminator 1
 130 0040 80E0      		ldi r24,lo8(__c.2266)
 131 0042 90E0      		ldi r25,hi8(__c.2266)
 132 0044 0E94 0000 		call xputs
 133               	.LVL8:
 134               	.L6:
 176:../../../../tmk_core/common/keyboard.c ****     led_set(leds);
 135               		.loc 1 176 0 is_stmt 1
 136 0048 8C2F      		mov r24,r28
 137               	/* epilogue start */
 177:../../../../tmk_core/common/keyboard.c **** }
 138               		.loc 1 177 0
 139 004a CF91      		pop r28
 140               	.LVL9:
 176:../../../../tmk_core/common/keyboard.c ****     led_set(leds);
 141               		.loc 1 176 0
 142 004c 0C94 0000 		jmp led_set
 143               	.LVL10:
 144               		.cfi_endproc
 145               	.LFE9:
 147               		.section	.text.keyboard_task,"ax",@progbits
 148               	.global	keyboard_task
 150               	keyboard_task:
 151               	.LFB8:
 100:../../../../tmk_core/common/keyboard.c **** {
 152               		.loc 1 100 0
 153               		.cfi_startproc
 154 0000 2F92      		push r2
 155               	.LCFI6:
 156               		.cfi_def_cfa_offset 3
 157               		.cfi_offset 2, -2
 158 0002 3F92      		push r3
 159               	.LCFI7:
 160               		.cfi_def_cfa_offset 4
 161               		.cfi_offset 3, -3
 162 0004 4F92      		push r4
 163               	.LCFI8:
 164               		.cfi_def_cfa_offset 5
 165               		.cfi_offset 4, -4
 166 0006 5F92      		push r5
 167               	.LCFI9:
 168               		.cfi_def_cfa_offset 6
 169               		.cfi_offset 5, -5
 170 0008 6F92      		push r6
 171               	.LCFI10:
 172               		.cfi_def_cfa_offset 7
 173               		.cfi_offset 6, -6
 174 000a 7F92      		push r7
 175               	.LCFI11:
 176               		.cfi_def_cfa_offset 8
 177               		.cfi_offset 7, -7
 178 000c 8F92      		push r8
 179               	.LCFI12:
 180               		.cfi_def_cfa_offset 9
 181               		.cfi_offset 8, -8
 182 000e 9F92      		push r9
 183               	.LCFI13:
 184               		.cfi_def_cfa_offset 10
 185               		.cfi_offset 9, -9
 186 0010 AF92      		push r10
 187               	.LCFI14:
 188               		.cfi_def_cfa_offset 11
 189               		.cfi_offset 10, -10
 190 0012 BF92      		push r11
 191               	.LCFI15:
 192               		.cfi_def_cfa_offset 12
 193               		.cfi_offset 11, -11
 194 0014 CF92      		push r12
 195               	.LCFI16:
 196               		.cfi_def_cfa_offset 13
 197               		.cfi_offset 12, -12
 198 0016 DF92      		push r13
 199               	.LCFI17:
 200               		.cfi_def_cfa_offset 14
 201               		.cfi_offset 13, -13
 202 0018 EF92      		push r14
 203               	.LCFI18:
 204               		.cfi_def_cfa_offset 15
 205               		.cfi_offset 14, -14
 206 001a FF92      		push r15
 207               	.LCFI19:
 208               		.cfi_def_cfa_offset 16
 209               		.cfi_offset 15, -15
 210 001c 0F93      		push r16
 211               	.LCFI20:
 212               		.cfi_def_cfa_offset 17
 213               		.cfi_offset 16, -16
 214 001e 1F93      		push r17
 215               	.LCFI21:
 216               		.cfi_def_cfa_offset 18
 217               		.cfi_offset 17, -17
 218 0020 CF93      		push r28
 219               	.LCFI22:
 220               		.cfi_def_cfa_offset 19
 221               		.cfi_offset 28, -18
 222 0022 DF93      		push r29
 223               	.LCFI23:
 224               		.cfi_def_cfa_offset 20
 225               		.cfi_offset 29, -19
 226 0024 CDB7      		in r28,__SP_L__
 227 0026 DEB7      		in r29,__SP_H__
 228               	.LCFI24:
 229               		.cfi_def_cfa_register 28
 230 0028 2A97      		sbiw r28,10
 231               	.LCFI25:
 232               		.cfi_def_cfa_offset 30
 233 002a 0FB6      		in __tmp_reg__,__SREG__
 234 002c F894      		cli
 235 002e DEBF      		out __SP_H__,r29
 236 0030 0FBE      		out __SREG__,__tmp_reg__
 237 0032 CDBF      		out __SP_L__,r28
 238               	/* prologue: function */
 239               	/* frame size = 10 */
 240               	/* stack size = 28 */
 241               	.L__stack_usage = 28
 242               	.LVL11:
 109:../../../../tmk_core/common/keyboard.c ****     matrix_scan();
 243               		.loc 1 109 0
 244 0034 0E94 0000 		call matrix_scan
 245               	.LVL12:
 246 0038 90E0      		ldi r25,lo8(matrix_prev.2240)
 247 003a 492E      		mov r4,r25
 248 003c 90E0      		ldi r25,hi8(matrix_prev.2240)
 249 003e 592E      		mov r5,r25
 250 0040 20E0      		ldi r18,lo8(matrix_ghost.2241)
 251 0042 A22E      		mov r10,r18
 252 0044 20E0      		ldi r18,hi8(matrix_ghost.2241)
 253 0046 B22E      		mov r11,r18
 254 0048 E12C      		mov r14,__zero_reg__
 255 004a F12C      		mov r15,__zero_reg__
 256               	.LBB7:
 257               	.LBB8:
 130:../../../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 258               		.loc 1 130 0
 259 004c 2224      		clr r2
 260 004e 2394      		inc r2
 261 0050 312C      		mov r3,__zero_reg__
 262               	.LVL13:
 263               	.L33:
 264 0052 0E2D      		mov r16,r14
 265               	.LBE8:
 111:../../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 266               		.loc 1 111 0
 267 0054 8E2D      		mov r24,r14
 268 0056 0E94 0000 		call matrix_get_row
 269               	.LVL14:
 270 005a 6C01      		movw r12,r24
 271               	.LVL15:
 112:../../../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 272               		.loc 1 112 0
 273 005c F201      		movw r30,r4
 274 005e 8190      		ld r8,Z+
 275 0060 9190      		ld r9,Z+
 276 0062 2F01      		movw r4,r30
 277 0064 8826      		eor r8,r24
 278 0066 9926      		eor r9,r25
 279               	.LVL16:
 113:../../../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 280               		.loc 1 113 0
 281 0068 8114      		cp r8,__zero_reg__
 282 006a 9104      		cpc r9,__zero_reg__
 283 006c 01F4      		brne .+2
 284 006e 00C0      		rjmp .L21
 285               	.LVL17:
 286               	.LBB9:
 287               	.LBB10:
  50:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
 288               		.loc 1 50 0
 289 0070 8E2D      		mov r24,r14
 290 0072 0E94 0000 		call matrix_get_row
 291               	.LVL18:
 292 0076 3C01      		movw r6,r24
 293               	.LVL19:
  52:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
 294               		.loc 1 52 0
 295 0078 0197      		sbiw r24,1
 296 007a 8621      		and r24,r6
 297 007c 9721      		and r25,r7
 298 007e 892B      		or r24,r25
 299 0080 01F4      		brne .+2
 300 0082 00C0      		rjmp .L22
 301 0084 10E0      		ldi r17,0
 302               	.L24:
 303               	.LBB11:
  57:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
 304               		.loc 1 57 0
 305 0086 1013      		cpse r17,r16
 306 0088 00C0      		rjmp .L23
 307               	.L26:
  56:../../../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 308               		.loc 1 56 0
 309 008a 1F5F      		subi r17,lo8(-(1))
 310               	.LVL20:
 311 008c 1830      		cpi r17,lo8(8)
 312 008e 01F4      		brne .L24
 313 0090 00C0      		rjmp .L22
 314               	.LVL21:
 315               	.L23:
  57:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
 316               		.loc 1 57 0
 317 0092 812F      		mov r24,r17
 318 0094 0E94 0000 		call matrix_get_row
 319               	.LVL22:
 320 0098 8621      		and r24,r6
 321 009a 9721      		and r25,r7
 322 009c 892B      		or r24,r25
 323 009e 01F0      		breq .L26
 324 00a0 00C0      		rjmp .L25
 325               	.L37:
 326               	.LBE11:
 327               	.LBE10:
 328               	.LBE9:
 120:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 329               		.loc 1 120 0 discriminator 1
 330 00a2 F501      		movw r30,r10
 331 00a4 8081      		ld r24,Z
 332 00a6 9181      		ldd r25,Z+1
 333 00a8 8C15      		cp r24,r12
 334 00aa 9D05      		cpc r25,r13
 335 00ac 01F0      		breq .L27
 121:../../../../tmk_core/common/keyboard.c ****                     matrix_print();
 336               		.loc 1 121 0
 337 00ae 0E94 0000 		call matrix_print
 338               	.LVL23:
 339               	.L27:
 123:../../../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 340               		.loc 1 123 0
 341 00b2 F501      		movw r30,r10
 342 00b4 D182      		std Z+1,r13
 343 00b6 C082      		st Z,r12
 124:../../../../tmk_core/common/keyboard.c ****                 continue;
 344               		.loc 1 124 0
 345 00b8 00C0      		rjmp .L21
 346               	.L35:
 128:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 347               		.loc 1 128 0 discriminator 1
 348 00ba 0E94 0000 		call matrix_print
 349               	.LVL24:
 350               	.L36:
 351               	.LBB13:
 352               	.LBB12:
  52:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
 353               		.loc 1 52 0
 354 00be 80E0      		ldi r24,0
 355 00c0 90E0      		ldi r25,0
 356               	.LVL25:
 357               	.L31:
 358               	.LBE12:
 359               	.LBE13:
 360               	.LBB14:
 130:../../../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 361               		.loc 1 130 0
 362 00c2 3101      		movw r6,r2
 363 00c4 082E      		mov r0,r24
 364 00c6 00C0      		rjmp 2f
 365               		1:
 366 00c8 660C      		lsl r6
 367 00ca 771C      		rol r7
 368               		2:
 369 00cc 0A94      		dec r0
 370 00ce 02F4      		brpl 1b
 371 00d0 9301      		movw r18,r6
 372 00d2 2821      		and r18,r8
 373 00d4 3921      		and r19,r9
 374 00d6 232B      		or r18,r19
 375 00d8 01F0      		breq .L28
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 376               		.loc 1 131 0
 377 00da 8E83      		std Y+6,r24
 378 00dc 0F83      		std Y+7,r16
 133:../../../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 379               		.loc 1 133 0
 380 00de C620      		and r12,r6
 381 00e0 D720      		and r13,r7
 382               	.LVL26:
 383 00e2 81E0      		ldi r24,lo8(1)
 384 00e4 CD28      		or r12,r13
 385 00e6 01F4      		brne .L29
 386 00e8 80E0      		ldi r24,0
 387               	.L29:
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 388               		.loc 1 131 0
 389 00ea 8887      		std Y+8,r24
 134:../../../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 390               		.loc 1 134 0
 391 00ec 0E94 0000 		call timer_read
 392               	.LVL27:
 393 00f0 8160      		ori r24,1
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 394               		.loc 1 131 0
 395 00f2 782F      		mov r23,r24
 396 00f4 9A87      		std Y+10,r25
 397 00f6 8987      		std Y+9,r24
 398 00f8 4E81      		ldd r20,Y+6
 399 00fa 5F81      		ldd r21,Y+7
 400 00fc 6885      		ldd r22,Y+8
 401 00fe 8A85      		ldd r24,Y+10
 402 0100 0E94 0000 		call action_exec
 403               	.LVL28:
 137:../../../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 404               		.loc 1 137 0
 405 0104 F701      		movw r30,r14
 406 0106 EE0F      		lsl r30
 407 0108 FF1F      		rol r31
 408 010a E050      		subi r30,lo8(-(matrix_prev.2240))
 409 010c F040      		sbci r31,hi8(-(matrix_prev.2240))
 410 010e 8081      		ld r24,Z
 411 0110 9181      		ldd r25,Z+1
 412 0112 8625      		eor r24,r6
 413 0114 9725      		eor r25,r7
 414 0116 9183      		std Z+1,r25
 415 0118 8083      		st Z,r24
 139:../../../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 416               		.loc 1 139 0
 417 011a 00C0      		rjmp .L30
 418               	.LVL29:
 419               	.L28:
 420 011c 0196      		adiw r24,1
 129:../../../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 421               		.loc 1 129 0
 422 011e 8031      		cpi r24,16
 423 0120 9105      		cpc r25,__zero_reg__
 424 0122 01F4      		brne .L31
 425               	.LVL30:
 426               	.L21:
 427 0124 FFEF      		ldi r31,-1
 428 0126 EF1A      		sub r14,r31
 429 0128 FF0A      		sbc r15,r31
 430 012a 82E0      		ldi r24,2
 431 012c A80E      		add r10,r24
 432 012e B11C      		adc r11,__zero_reg__
 433               	.LBE14:
 110:../../../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 434               		.loc 1 110 0
 435 0130 E8E0      		ldi r30,8
 436 0132 EE16      		cp r14,r30
 437 0134 F104      		cpc r15,__zero_reg__
 438 0136 01F0      		breq .+2
 439 0138 00C0      		rjmp .L33
 440               	.LBE7:
 145:../../../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 441               		.loc 1 145 0
 442 013a 8FEF      		ldi r24,lo8(-1)
 443 013c 8983      		std Y+1,r24
 444 013e 8A83      		std Y+2,r24
 445 0140 1B82      		std Y+3,__zero_reg__
 446 0142 0E94 0000 		call timer_read
 447               	.LVL31:
 448 0146 8160      		ori r24,1
 449 0148 782F      		mov r23,r24
 450 014a 9D83      		std Y+5,r25
 451 014c 8C83      		std Y+4,r24
 452 014e 4981      		ldd r20,Y+1
 453 0150 5A81      		ldd r21,Y+2
 454 0152 6B81      		ldd r22,Y+3
 455 0154 8D81      		ldd r24,Y+5
 456 0156 0E94 0000 		call action_exec
 457               	.LVL32:
 458               	.L30:
 151:../../../../tmk_core/common/keyboard.c ****     mousekey_task();
 459               		.loc 1 151 0
 460 015a 0E94 0000 		call mousekey_task
 461               	.LVL33:
 167:../../../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 462               		.loc 1 167 0
 463 015e 1091 0000 		lds r17,led_status.2242
 464 0162 0E94 0000 		call host_keyboard_leds
 465               	.LVL34:
 466 0166 1817      		cp r17,r24
 467 0168 01F0      		breq .L19
 168:../../../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 468               		.loc 1 168 0
 469 016a 0E94 0000 		call host_keyboard_leds
 470               	.LVL35:
 471 016e 8093 0000 		sts led_status.2242,r24
 472               	/* epilogue start */
 171:../../../../tmk_core/common/keyboard.c **** }
 473               		.loc 1 171 0
 474 0172 2A96      		adiw r28,10
 475 0174 0FB6      		in __tmp_reg__,__SREG__
 476 0176 F894      		cli
 477 0178 DEBF      		out __SP_H__,r29
 478 017a 0FBE      		out __SREG__,__tmp_reg__
 479 017c CDBF      		out __SP_L__,r28
 480 017e DF91      		pop r29
 481 0180 CF91      		pop r28
 482 0182 1F91      		pop r17
 483 0184 0F91      		pop r16
 484 0186 FF90      		pop r15
 485 0188 EF90      		pop r14
 486 018a DF90      		pop r13
 487 018c CF90      		pop r12
 488 018e BF90      		pop r11
 489 0190 AF90      		pop r10
 490 0192 9F90      		pop r9
 491 0194 8F90      		pop r8
 492               	.LVL36:
 493 0196 7F90      		pop r7
 494 0198 6F90      		pop r6
 495 019a 5F90      		pop r5
 496 019c 4F90      		pop r4
 497 019e 3F90      		pop r3
 498 01a0 2F90      		pop r2
 169:../../../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 499               		.loc 1 169 0
 500 01a2 0C94 0000 		jmp keyboard_set_leds
 501               	.LVL37:
 502               	.L22:
 503               	.LBB15:
 126:../../../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 504               		.loc 1 126 0
 505 01a6 F501      		movw r30,r10
 506 01a8 D182      		std Z+1,r13
 507 01aa C082      		st Z,r12
 128:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 508               		.loc 1 128 0
 509 01ac 8091 0000 		lds r24,debug_config
 510 01b0 81FF      		sbrs r24,1
 511 01b2 00C0      		rjmp .L36
 512 01b4 00C0      		rjmp .L35
 513               	.L25:
 120:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 514               		.loc 1 120 0
 515 01b6 8091 0000 		lds r24,debug_config
 516 01ba 81FD      		sbrc r24,1
 517 01bc 00C0      		rjmp .L37
 518 01be 00C0      		rjmp .L27
 519               	.LVL38:
 520               	.L19:
 521               	/* epilogue start */
 522               	.LBE15:
 171:../../../../tmk_core/common/keyboard.c **** }
 523               		.loc 1 171 0
 524 01c0 2A96      		adiw r28,10
 525 01c2 0FB6      		in __tmp_reg__,__SREG__
 526 01c4 F894      		cli
 527 01c6 DEBF      		out __SP_H__,r29
 528 01c8 0FBE      		out __SREG__,__tmp_reg__
 529 01ca CDBF      		out __SP_L__,r28
 530 01cc DF91      		pop r29
 531 01ce CF91      		pop r28
 532 01d0 1F91      		pop r17
 533 01d2 0F91      		pop r16
 534 01d4 FF90      		pop r15
 535 01d6 EF90      		pop r14
 536 01d8 DF90      		pop r13
 537 01da CF90      		pop r12
 538 01dc BF90      		pop r11
 539 01de AF90      		pop r10
 540 01e0 9F90      		pop r9
 541 01e2 8F90      		pop r8
 542               	.LVL39:
 543 01e4 7F90      		pop r7
 544 01e6 6F90      		pop r6
 545 01e8 5F90      		pop r5
 546 01ea 4F90      		pop r4
 547 01ec 3F90      		pop r3
 548 01ee 2F90      		pop r2
 549 01f0 0895      		ret
 550               		.cfi_endproc
 551               	.LFE8:
 553               		.section	.bss.matrix_prev.2240,"aw",@nobits
 556               	matrix_prev.2240:
 557 0000 0000 0000 		.zero	16
 557      0000 0000 
 557      0000 0000 
 557      0000 0000 
 558               		.section	.bss.matrix_ghost.2241,"aw",@nobits
 561               	matrix_ghost.2241:
 562 0000 0000 0000 		.zero	16
 562      0000 0000 
 562      0000 0000 
 562      0000 0000 
 563               		.section	.bss.led_status.2242,"aw",@nobits
 566               	led_status.2242:
 567 0000 00        		.zero	1
 568               		.section	.progmem.data.__c.2262,"a",@progbits
 571               	__c.2262:
 572 0000 6B65 7962 		.string	"keyboard_set_led: "
 572      6F61 7264 
 572      5F73 6574 
 572      5F6C 6564 
 572      3A20 00
 573               		.section	.progmem.data.__c.2264,"a",@progbits
 576               	__c.2264:
 577 0000 2530 3258 		.string	"%02X"
 577      00
 578               		.section	.progmem.data.__c.2266,"a",@progbits
 581               	__c.2266:
 582 0000 0A00      		.string	"\n"
 583               		.text
 584               	.Letext0:
 585               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 586               		.file 3 "../../../../tmk_core/common/keyboard.h"
 587               		.file 4 "../../../../tmk_core/common/matrix.h"
 588               		.file 5 "../../../../tmk_core/common/debug.h"
 589               		.file 6 "../../../../tmk_core/common/timer.h"
 590               		.file 7 "../../../../tmk_core/common/bootmagic.h"
 591               		.file 8 "../../../../tmk_core/common/avr/xprintf.h"
 592               		.file 9 "../../../../tmk_core/common/led.h"
 593               		.file 10 "../../../../tmk_core/common/action.h"
 594               		.file 11 "../../../../tmk_core/common/mousekey.h"
 595               		.file 12 "../../../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/cc1KLMS9.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc1KLMS9.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc1KLMS9.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc1KLMS9.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc1KLMS9.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc1KLMS9.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc1KLMS9.s:14     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cc1KLMS9.s:30     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/cc1KLMS9.s:47     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/cc1KLMS9.s:70     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
     /tmp/cc1KLMS9.s:571    .progmem.data.__c.2262:0000000000000000 __c.2262
     /tmp/cc1KLMS9.s:576    .progmem.data.__c.2264:0000000000000000 __c.2264
     /tmp/cc1KLMS9.s:581    .progmem.data.__c.2266:0000000000000000 __c.2266
     /tmp/cc1KLMS9.s:150    .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/cc1KLMS9.s:556    .bss.matrix_prev.2240:0000000000000000 matrix_prev.2240
     /tmp/cc1KLMS9.s:561    .bss.matrix_ghost.2241:0000000000000000 matrix_ghost.2241
     /tmp/cc1KLMS9.s:566    .bss.led_status.2242:0000000000000000 led_status.2242

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
