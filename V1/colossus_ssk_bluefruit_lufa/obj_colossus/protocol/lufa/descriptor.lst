   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  12               	.global	CALLBACK_USB_GetDescriptor
  14               	CALLBACK_USB_GetDescriptor:
  15               	.LFB100:
  16               		.file 1 "../../../../tmk_core/protocol/lufa/descriptor.c"
   1:../../../../tmk_core/protocol/lufa/descriptor.c **** /* 
   2:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:../../../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../../../tmk_core/protocol/lufa/descriptor.c ****  */
   7:../../../../tmk_core/protocol/lufa/descriptor.c **** 
   8:../../../../tmk_core/protocol/lufa/descriptor.c **** /*
   9:../../../../tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:../../../../tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  12:../../../../tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../../../tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:../../../../tmk_core/protocol/lufa/descriptor.c **** */
  15:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  16:../../../../tmk_core/protocol/lufa/descriptor.c **** /*
  17:../../../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  20:../../../../tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../../../tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:../../../../tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:../../../../tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:../../../../tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../../../tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:../../../../tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:../../../../tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  29:../../../../tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:../../../../tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:../../../../tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:../../../../tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:../../../../tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../../../tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:../../../../tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:../../../../tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:../../../../tmk_core/protocol/lufa/descriptor.c **** */
  38:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  39:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  43:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  44:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:../../../../tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  49:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  61:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  65:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  75:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  77:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  78:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
  80:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:../../../../tmk_core/protocol/lufa/descriptor.c **** };
  85:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  86:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  89:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  95:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 107:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 116:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 123:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 131:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 134:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 135:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 136:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 139:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 144:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* System Power Down */
 146:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 152:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 165:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 166:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 167:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 170:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 176:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 182:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 187:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 188:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 189:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 192:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 204:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 214:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 224:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 225:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 226:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 231:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 233:../../../../tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:../../../../tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 238:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 240:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:../../../../tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 245:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:../../../../tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 249:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 251:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 252:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 257:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Config =
 258:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 259:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 261:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 264:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 267:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 269:../../../../tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(100)
 270:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 271:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 272:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 273:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 274:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 275:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 277:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 279:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 282:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 284:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 288:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 290:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 291:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 293:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 295:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 301:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 302:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 304:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 306:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 311:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 312:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 313:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 314:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 315:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 318:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 320:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 323:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 325:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 329:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 331:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 332:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 334:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 336:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 342:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 343:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 345:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 347:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 352:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 353:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 354:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 355:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Extra
 356:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 357:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 360:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 362:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 365:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 367:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 371:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 373:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 374:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 376:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 378:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 384:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 385:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 387:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 389:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 394:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 395:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 396:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 397:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Console
 398:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 399:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 402:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 404:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 407:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 409:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 413:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 415:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 416:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 417:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 418:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 420:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 426:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 427:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 429:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 431:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 436:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 437:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 439:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 441:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 446:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 447:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 448:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 449:../../../../tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 450:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 451:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 454:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 456:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 459:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 461:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 465:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 467:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 468:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 470:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 472:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 478:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 479:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 481:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 483:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 488:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 489:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 490:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 491:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 492:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 493:../../../../tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 494:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 495:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 496:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 497:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 498:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 499:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 500:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 501:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 502:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 503:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 504:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 505:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 506:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 507:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 508:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 509:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 510:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 511:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 512:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 513:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 514:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 515:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 516:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 517:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 518:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 519:../../../../tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 520:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 521:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 522:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 523:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 524:../../../../tmk_core/protocol/lufa/descriptor.c ****  */
 525:../../../../tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 526:../../../../tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 527:../../../../tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 528:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  17               		.loc 1 528 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
 529:../../../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
 530:../../../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 531:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 532:../../../../tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 533:../../../../tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 534:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 535:../../../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
 536:../../../../tmk_core/protocol/lufa/descriptor.c ****     {
 537:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 538:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 539:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 540:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 541:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 542:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 543:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 544:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 545:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 546:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
 547:../../../../tmk_core/protocol/lufa/descriptor.c ****             {
 548:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 549:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 550:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 551:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 552:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 553:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 554:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 555:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 556:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 557:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 558:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 559:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 560:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 561:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 562:../../../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 563:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 564:../../../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 565:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 566:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 567:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 568:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 569:../../../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 570:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 571:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 572:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 573:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 574:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 575:../../../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 576:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 577:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 578:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 579:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 580:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 581:../../../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 582:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 583:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 584:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 585:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 586:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 587:../../../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 588:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 589:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 590:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 591:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 592:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 593:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 594:../../../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 595:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 596:../../../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 597:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 598:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 599:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 600:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 601:../../../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 602:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 603:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 604:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 605:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 606:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 607:../../../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 608:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 609:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 610:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 611:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 612:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 613:../../../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 614:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 615:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 616:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 617:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 618:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 619:../../../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 620:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 621:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 622:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 623:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 624:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 625:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 626:../../../../tmk_core/protocol/lufa/descriptor.c ****     }
 627:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 628:../../../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 629:../../../../tmk_core/protocol/lufa/descriptor.c ****     return Size;
 630:../../../../tmk_core/protocol/lufa/descriptor.c **** }
  24               		.loc 1 630 0
  25 0000 292F      		mov r18,r25
  26 0002 3327      		clr r19
 535:../../../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  27               		.loc 1 535 0
  28 0004 2330      		cpi r18,3
  29 0006 3105      		cpc r19,__zero_reg__
  30 0008 01F0      		breq .L5
  31 000a 04F4      		brge .L8
  32 000c 2130      		cpi r18,1
  33 000e 3105      		cpc r19,__zero_reg__
  34 0010 01F4      		brne .+2
  35 0012 00C0      		rjmp .L12
  36 0014 2230      		cpi r18,2
  37 0016 3105      		cpc r19,__zero_reg__
  38 0018 01F0      		breq .+2
  39 001a 00C0      		rjmp .L15
  40 001c 00C0      		rjmp .L4
  41               	.L8:
  42 001e 2132      		cpi r18,33
  43 0020 3105      		cpc r19,__zero_reg__
  44 0022 01F0      		breq .L6
  45 0024 2232      		cpi r18,34
  46 0026 3105      		cpc r19,__zero_reg__
  47 0028 01F0      		breq .L7
  48 002a 00C0      		rjmp .L15
  49               	.L4:
  50               	.LVL1:
 543:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  51               		.loc 1 543 0
  52 002c E4E7      		ldi r30,lo8(116)
  53 002e F0E0      		ldi r31,0
 542:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  54               		.loc 1 542 0
  55 0030 80E0      		ldi r24,lo8(ConfigurationDescriptor)
  56 0032 90E0      		ldi r25,hi8(ConfigurationDescriptor)
  57               	.LVL2:
 544:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
  58               		.loc 1 544 0
  59 0034 00C0      		rjmp .L3
  60               	.LVL3:
  61               	.L5:
  62               		.loc 1 630 0
  63 0036 9927      		clr r25
  64               	.LVL4:
 546:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  65               		.loc 1 546 0
  66 0038 8130      		cpi r24,1
  67 003a 9105      		cpc r25,__zero_reg__
  68 003c 01F0      		breq .L10
  69 003e 8230      		cpi r24,2
  70 0040 9105      		cpc r25,__zero_reg__
  71 0042 01F0      		breq .L11
  72 0044 892B      		or r24,r25
  73 0046 01F0      		breq .+2
  74 0048 00C0      		rjmp .L15
  75               	.LVL5:
  76               	.LBB2:
 550:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  77               		.loc 1 550 0
  78 004a E0E0      		ldi r30,lo8(LanguageString)
  79 004c F0E0      		ldi r31,hi8(LanguageString)
  80               	/* #APP */
  81               	 ;  550 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
  82 004e E491      		lpm r30, Z
  83               		
  84               	 ;  0 "" 2
  85               	.LVL6:
  86               	/* #NOAPP */
  87               	.LBE2:
  88 0050 F0E0      		ldi r31,0
  89               	.LVL7:
 549:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
  90               		.loc 1 549 0
  91 0052 80E0      		ldi r24,lo8(LanguageString)
  92 0054 90E0      		ldi r25,hi8(LanguageString)
 551:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
  93               		.loc 1 551 0
  94 0056 00C0      		rjmp .L3
  95               	.LVL8:
  96               	.L10:
  97               	.LBB3:
 554:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  98               		.loc 1 554 0
  99 0058 E0E0      		ldi r30,lo8(ManufacturerString)
 100 005a F0E0      		ldi r31,hi8(ManufacturerString)
 101               	/* #APP */
 102               	 ;  554 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
 103 005c E491      		lpm r30, Z
 104               		
 105               	 ;  0 "" 2
 106               	.LVL9:
 107               	/* #NOAPP */
 108               	.LBE3:
 109 005e F0E0      		ldi r31,0
 110               	.LVL10:
 553:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 111               		.loc 1 553 0
 112 0060 80E0      		ldi r24,lo8(ManufacturerString)
 113 0062 90E0      		ldi r25,hi8(ManufacturerString)
 555:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 114               		.loc 1 555 0
 115 0064 00C0      		rjmp .L3
 116               	.LVL11:
 117               	.L11:
 118               	.LBB4:
 558:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 119               		.loc 1 558 0
 120 0066 E0E0      		ldi r30,lo8(ProductString)
 121 0068 F0E0      		ldi r31,hi8(ProductString)
 122               	/* #APP */
 123               	 ;  558 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
 124 006a E491      		lpm r30, Z
 125               		
 126               	 ;  0 "" 2
 127               	.LVL12:
 128               	/* #NOAPP */
 129               	.LBE4:
 130 006c F0E0      		ldi r31,0
 131               	.LVL13:
 557:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 132               		.loc 1 557 0
 133 006e 80E0      		ldi r24,lo8(ProductString)
 134 0070 90E0      		ldi r25,hi8(ProductString)
 559:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 135               		.loc 1 559 0
 136 0072 00C0      		rjmp .L3
 137               	.LVL14:
 138               	.L6:
 139 0074 6430      		cpi r22,lo8(4)
 140 0076 00F4      		brsh .L15
 141 0078 E62F      		mov r30,r22
 142 007a F0E0      		ldi r31,0
 143 007c EE0F      		lsl r30
 144 007e FF1F      		rol r31
 145 0080 E050      		subi r30,lo8(-(CSWTCH.2))
 146 0082 F040      		sbci r31,hi8(-(CSWTCH.2))
 147 0084 8081      		ld r24,Z
 148 0086 9181      		ldd r25,Z+1
 149               	.LVL15:
 150 0088 E9E0      		ldi r30,lo8(9)
 151 008a F0E0      		ldi r31,0
 152 008c 00C0      		rjmp .L3
 153               	.LVL16:
 154               	.L7:
 155 008e 6430      		cpi r22,lo8(4)
 156 0090 00F4      		brsh .L15
 157 0092 E62F      		mov r30,r22
 158 0094 F0E0      		ldi r31,0
 159 0096 DF01      		movw r26,r30
 160 0098 AA0F      		lsl r26
 161 009a BB1F      		rol r27
 162               	.LVL17:
 163 009c A050      		subi r26,lo8(-(CSWTCH.4))
 164 009e B040      		sbci r27,hi8(-(CSWTCH.4))
 165 00a0 8D91      		ld r24,X+
 166 00a2 9C91      		ld r25,X
 167               		.loc 1 630 0
 168 00a4 E050      		subi r30,lo8(-(CSWTCH.5))
 169 00a6 F040      		sbci r31,hi8(-(CSWTCH.5))
 170 00a8 E081      		ld r30,Z
 171 00aa F0E0      		ldi r31,0
 172 00ac 00C0      		rjmp .L3
 173               	.LVL18:
 174               	.L12:
 539:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 175               		.loc 1 539 0
 176 00ae E2E1      		ldi r30,lo8(18)
 177 00b0 F0E0      		ldi r31,0
 538:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 178               		.loc 1 538 0
 179 00b2 80E0      		ldi r24,lo8(DeviceDescriptor)
 180 00b4 90E0      		ldi r25,hi8(DeviceDescriptor)
 181               	.LVL19:
 182 00b6 00C0      		rjmp .L3
 183               	.L15:
 184 00b8 E0E0      		ldi r30,0
 185 00ba F0E0      		ldi r31,0
 186 00bc 80E0      		ldi r24,0
 187 00be 90E0      		ldi r25,0
 188               	.LVL20:
 189               	.L3:
 628:../../../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 190               		.loc 1 628 0
 191 00c0 DA01      		movw r26,r20
 192 00c2 8D93      		st X+,r24
 193 00c4 9C93      		st X,r25
 194               		.loc 1 630 0
 195 00c6 CF01      		movw r24,r30
 196               	.LVL21:
 197 00c8 0895      		ret
 198               		.cfi_endproc
 199               	.LFE100:
 201               	.global	ProductString
 202               		.section	.progmem.data.ProductString,"a",@progbits
 205               	ProductString:
 206 0000 14        		.byte	20
 207 0001 03        		.byte	3
 208 0002 4D00      		.string	"M"
 209 0004 6F00      		.string	"o"
 210 0006 6400      		.string	"d"
 211 0008 6500      		.string	"e"
 212 000a 6C00      		.string	"l"
 213 000c 4D00      		.string	"M"
 214 000e 5300      		.string	"S"
 215 0010 5300      		.string	"S"
 216 0012 4B00      		.string	"K"
 217 0014 00        		.string	""
 218 0015 00        		.string	""
 219               	.global	ManufacturerString
 220               		.section	.progmem.data.ManufacturerString,"a",@progbits
 223               	ManufacturerString:
 224 0000 1A        		.byte	26
 225 0001 03        		.byte	3
 226 0002 5000      		.string	"P"
 227 0004 6800      		.string	"h"
 228 0006 6F00      		.string	"o"
 229 0008 7300      		.string	"s"
 230 000a 7000      		.string	"p"
 231 000c 6800      		.string	"h"
 232 000e 6F00      		.string	"o"
 233 0010 7200      		.string	"r"
 234 0012 4700      		.string	"G"
 235 0014 6C00      		.string	"l"
 236 0016 6F00      		.string	"o"
 237 0018 7700      		.string	"w"
 238 001a 00        		.string	""
 239 001b 00        		.string	""
 240               	.global	LanguageString
 241               		.section	.progmem.data.LanguageString,"a",@progbits
 244               	LanguageString:
 245 0000 04        		.byte	4
 246 0001 03        		.byte	3
 247 0002 0904      		.word	1033
 248               	.global	ConfigurationDescriptor
 249               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 252               	ConfigurationDescriptor:
 253 0000 09        		.byte	9
 254 0001 02        		.byte	2
 255 0002 7400      		.word	116
 256 0004 04        		.byte	4
 257 0005 01        		.byte	1
 258 0006 00        		.byte	0
 259 0007 A0        		.byte	-96
 260 0008 32        		.byte	50
 261 0009 09        		.byte	9
 262 000a 04        		.byte	4
 263 000b 00        		.byte	0
 264 000c 00        		.byte	0
 265 000d 01        		.byte	1
 266 000e 03        		.byte	3
 267 000f 01        		.byte	1
 268 0010 01        		.byte	1
 269 0011 00        		.byte	0
 270 0012 09        		.byte	9
 271 0013 21        		.byte	33
 272 0014 1101      		.word	273
 273 0016 00        		.byte	0
 274 0017 01        		.byte	1
 275 0018 22        		.byte	34
 276 0019 3F00      		.word	63
 277 001b 07        		.byte	7
 278 001c 05        		.byte	5
 279 001d 81        		.byte	-127
 280 001e 03        		.byte	3
 281 001f 0800      		.word	8
 282 0021 0A        		.byte	10
 283 0022 09        		.byte	9
 284 0023 04        		.byte	4
 285 0024 01        		.byte	1
 286 0025 00        		.byte	0
 287 0026 01        		.byte	1
 288 0027 03        		.byte	3
 289 0028 01        		.byte	1
 290 0029 02        		.byte	2
 291 002a 00        		.byte	0
 292 002b 09        		.byte	9
 293 002c 21        		.byte	33
 294 002d 1101      		.word	273
 295 002f 00        		.byte	0
 296 0030 01        		.byte	1
 297 0031 22        		.byte	34
 298 0032 4D00      		.word	77
 299 0034 07        		.byte	7
 300 0035 05        		.byte	5
 301 0036 82        		.byte	-126
 302 0037 03        		.byte	3
 303 0038 0800      		.word	8
 304 003a 0A        		.byte	10
 305 003b 09        		.byte	9
 306 003c 04        		.byte	4
 307 003d 02        		.byte	2
 308 003e 00        		.byte	0
 309 003f 01        		.byte	1
 310 0040 03        		.byte	3
 311 0041 00        		.byte	0
 312 0042 00        		.byte	0
 313 0043 00        		.byte	0
 314 0044 09        		.byte	9
 315 0045 21        		.byte	33
 316 0046 1101      		.word	273
 317 0048 00        		.byte	0
 318 0049 01        		.byte	1
 319 004a 22        		.byte	34
 320 004b 3600      		.word	54
 321 004d 07        		.byte	7
 322 004e 05        		.byte	5
 323 004f 83        		.byte	-125
 324 0050 03        		.byte	3
 325 0051 0800      		.word	8
 326 0053 0A        		.byte	10
 327 0054 09        		.byte	9
 328 0055 04        		.byte	4
 329 0056 03        		.byte	3
 330 0057 00        		.byte	0
 331 0058 02        		.byte	2
 332 0059 03        		.byte	3
 333 005a 00        		.byte	0
 334 005b 00        		.byte	0
 335 005c 00        		.byte	0
 336 005d 09        		.byte	9
 337 005e 21        		.byte	33
 338 005f 1101      		.word	273
 339 0061 00        		.byte	0
 340 0062 01        		.byte	1
 341 0063 22        		.byte	34
 342 0064 2000      		.word	32
 343 0066 07        		.byte	7
 344 0067 05        		.byte	5
 345 0068 84        		.byte	-124
 346 0069 03        		.byte	3
 347 006a 2000      		.word	32
 348 006c 01        		.byte	1
 349 006d 07        		.byte	7
 350 006e 05        		.byte	5
 351 006f 04        		.byte	4
 352 0070 03        		.byte	3
 353 0071 2000      		.word	32
 354 0073 01        		.byte	1
 355               	.global	DeviceDescriptor
 356               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 359               	DeviceDescriptor:
 360 0000 12        		.byte	18
 361 0001 01        		.byte	1
 362 0002 1001      		.word	272
 363 0004 00        		.byte	0
 364 0005 00        		.byte	0
 365 0006 00        		.byte	0
 366 0007 08        		.byte	8
 367 0008 EDFE      		.word	-275
 368 000a 6060      		.word	24672
 369 000c 0100      		.word	1
 370 000e 01        		.byte	1
 371 000f 02        		.byte	2
 372 0010 00        		.byte	0
 373 0011 01        		.byte	1
 374               	.global	ConsoleReport
 375               		.section	.progmem.data.ConsoleReport,"a",@progbits
 378               	ConsoleReport:
 379 0000 06        		.byte	6
 380 0001 31        		.byte	49
 381 0002 FF        		.byte	-1
 382 0003 09        		.byte	9
 383 0004 74        		.byte	116
 384 0005 A1        		.byte	-95
 385 0006 01        		.byte	1
 386 0007 09        		.byte	9
 387 0008 75        		.byte	117
 388 0009 15        		.byte	21
 389 000a 00        		.byte	0
 390 000b 25        		.byte	37
 391 000c FF        		.byte	-1
 392 000d 95        		.byte	-107
 393 000e 20        		.byte	32
 394 000f 75        		.byte	117
 395 0010 08        		.byte	8
 396 0011 81        		.byte	-127
 397 0012 02        		.byte	2
 398 0013 09        		.byte	9
 399 0014 76        		.byte	118
 400 0015 15        		.byte	21
 401 0016 00        		.byte	0
 402 0017 25        		.byte	37
 403 0018 FF        		.byte	-1
 404 0019 95        		.byte	-107
 405 001a 20        		.byte	32
 406 001b 75        		.byte	117
 407 001c 08        		.byte	8
 408 001d 91        		.byte	-111
 409 001e 02        		.byte	2
 410 001f C0        		.byte	-64
 411               	.global	ExtrakeyReport
 412               		.section	.progmem.data.ExtrakeyReport,"a",@progbits
 415               	ExtrakeyReport:
 416 0000 05        		.byte	5
 417 0001 01        		.byte	1
 418 0002 09        		.byte	9
 419 0003 80        		.byte	-128
 420 0004 A1        		.byte	-95
 421 0005 01        		.byte	1
 422 0006 85        		.byte	-123
 423 0007 02        		.byte	2
 424 0008 16        		.byte	22
 425 0009 01        		.byte	1
 426 000a 00        		.byte	0
 427 000b 26        		.byte	38
 428 000c B7        		.byte	-73
 429 000d 00        		.byte	0
 430 000e 1A        		.byte	26
 431 000f 01        		.byte	1
 432 0010 00        		.byte	0
 433 0011 2A        		.byte	42
 434 0012 B7        		.byte	-73
 435 0013 00        		.byte	0
 436 0014 75        		.byte	117
 437 0015 10        		.byte	16
 438 0016 95        		.byte	-107
 439 0017 01        		.byte	1
 440 0018 81        		.byte	-127
 441 0019 00        		.byte	0
 442 001a C0        		.byte	-64
 443 001b 05        		.byte	5
 444 001c 0C        		.byte	12
 445 001d 09        		.byte	9
 446 001e 01        		.byte	1
 447 001f A1        		.byte	-95
 448 0020 01        		.byte	1
 449 0021 85        		.byte	-123
 450 0022 03        		.byte	3
 451 0023 16        		.byte	22
 452 0024 01        		.byte	1
 453 0025 00        		.byte	0
 454 0026 26        		.byte	38
 455 0027 9C        		.byte	-100
 456 0028 02        		.byte	2
 457 0029 1A        		.byte	26
 458 002a 01        		.byte	1
 459 002b 00        		.byte	0
 460 002c 2A        		.byte	42
 461 002d 9C        		.byte	-100
 462 002e 02        		.byte	2
 463 002f 75        		.byte	117
 464 0030 10        		.byte	16
 465 0031 95        		.byte	-107
 466 0032 01        		.byte	1
 467 0033 81        		.byte	-127
 468 0034 00        		.byte	0
 469 0035 C0        		.byte	-64
 470               	.global	MouseReport
 471               		.section	.progmem.data.MouseReport,"a",@progbits
 474               	MouseReport:
 475 0000 05        		.byte	5
 476 0001 01        		.byte	1
 477 0002 09        		.byte	9
 478 0003 02        		.byte	2
 479 0004 A1        		.byte	-95
 480 0005 01        		.byte	1
 481 0006 09        		.byte	9
 482 0007 01        		.byte	1
 483 0008 A1        		.byte	-95
 484 0009 00        		.byte	0
 485 000a 05        		.byte	5
 486 000b 09        		.byte	9
 487 000c 19        		.byte	25
 488 000d 01        		.byte	1
 489 000e 29        		.byte	41
 490 000f 05        		.byte	5
 491 0010 15        		.byte	21
 492 0011 00        		.byte	0
 493 0012 25        		.byte	37
 494 0013 01        		.byte	1
 495 0014 95        		.byte	-107
 496 0015 05        		.byte	5
 497 0016 75        		.byte	117
 498 0017 01        		.byte	1
 499 0018 81        		.byte	-127
 500 0019 02        		.byte	2
 501 001a 95        		.byte	-107
 502 001b 01        		.byte	1
 503 001c 75        		.byte	117
 504 001d 03        		.byte	3
 505 001e 81        		.byte	-127
 506 001f 01        		.byte	1
 507 0020 05        		.byte	5
 508 0021 01        		.byte	1
 509 0022 09        		.byte	9
 510 0023 30        		.byte	48
 511 0024 09        		.byte	9
 512 0025 31        		.byte	49
 513 0026 15        		.byte	21
 514 0027 81        		.byte	-127
 515 0028 25        		.byte	37
 516 0029 7F        		.byte	127
 517 002a 95        		.byte	-107
 518 002b 02        		.byte	2
 519 002c 75        		.byte	117
 520 002d 08        		.byte	8
 521 002e 81        		.byte	-127
 522 002f 06        		.byte	6
 523 0030 09        		.byte	9
 524 0031 38        		.byte	56
 525 0032 15        		.byte	21
 526 0033 81        		.byte	-127
 527 0034 25        		.byte	37
 528 0035 7F        		.byte	127
 529 0036 95        		.byte	-107
 530 0037 01        		.byte	1
 531 0038 75        		.byte	117
 532 0039 08        		.byte	8
 533 003a 81        		.byte	-127
 534 003b 06        		.byte	6
 535 003c 05        		.byte	5
 536 003d 0C        		.byte	12
 537 003e 0A        		.byte	10
 538 003f 38        		.byte	56
 539 0040 02        		.byte	2
 540 0041 15        		.byte	21
 541 0042 81        		.byte	-127
 542 0043 25        		.byte	37
 543 0044 7F        		.byte	127
 544 0045 95        		.byte	-107
 545 0046 01        		.byte	1
 546 0047 75        		.byte	117
 547 0048 08        		.byte	8
 548 0049 81        		.byte	-127
 549 004a 06        		.byte	6
 550 004b C0        		.byte	-64
 551 004c C0        		.byte	-64
 552               	.global	KeyboardReport
 553               		.section	.progmem.data.KeyboardReport,"a",@progbits
 556               	KeyboardReport:
 557 0000 05        		.byte	5
 558 0001 01        		.byte	1
 559 0002 09        		.byte	9
 560 0003 06        		.byte	6
 561 0004 A1        		.byte	-95
 562 0005 01        		.byte	1
 563 0006 05        		.byte	5
 564 0007 07        		.byte	7
 565 0008 19        		.byte	25
 566 0009 E0        		.byte	-32
 567 000a 29        		.byte	41
 568 000b E7        		.byte	-25
 569 000c 15        		.byte	21
 570 000d 00        		.byte	0
 571 000e 25        		.byte	37
 572 000f 01        		.byte	1
 573 0010 95        		.byte	-107
 574 0011 08        		.byte	8
 575 0012 75        		.byte	117
 576 0013 01        		.byte	1
 577 0014 81        		.byte	-127
 578 0015 02        		.byte	2
 579 0016 95        		.byte	-107
 580 0017 01        		.byte	1
 581 0018 75        		.byte	117
 582 0019 08        		.byte	8
 583 001a 81        		.byte	-127
 584 001b 01        		.byte	1
 585 001c 05        		.byte	5
 586 001d 08        		.byte	8
 587 001e 19        		.byte	25
 588 001f 01        		.byte	1
 589 0020 29        		.byte	41
 590 0021 05        		.byte	5
 591 0022 95        		.byte	-107
 592 0023 05        		.byte	5
 593 0024 75        		.byte	117
 594 0025 01        		.byte	1
 595 0026 91        		.byte	-111
 596 0027 02        		.byte	2
 597 0028 95        		.byte	-107
 598 0029 01        		.byte	1
 599 002a 75        		.byte	117
 600 002b 03        		.byte	3
 601 002c 91        		.byte	-111
 602 002d 01        		.byte	1
 603 002e 05        		.byte	5
 604 002f 07        		.byte	7
 605 0030 19        		.byte	25
 606 0031 00        		.byte	0
 607 0032 29        		.byte	41
 608 0033 FF        		.byte	-1
 609 0034 15        		.byte	21
 610 0035 00        		.byte	0
 611 0036 25        		.byte	37
 612 0037 FF        		.byte	-1
 613 0038 95        		.byte	-107
 614 0039 06        		.byte	6
 615 003a 75        		.byte	117
 616 003b 08        		.byte	8
 617 003c 81        		.byte	-127
 618 003d 00        		.byte	0
 619 003e C0        		.byte	-64
 620               		.section	.rodata.CSWTCH.2,"a",@progbits
 623               	CSWTCH.2:
 624 0000 0000      		.word	ConfigurationDescriptor+18
 625 0002 0000      		.word	ConfigurationDescriptor+43
 626 0004 0000      		.word	ConfigurationDescriptor+68
 627 0006 0000      		.word	ConfigurationDescriptor+93
 628               		.section	.rodata.CSWTCH.4,"a",@progbits
 631               	CSWTCH.4:
 632 0000 0000      		.word	KeyboardReport
 633 0002 0000      		.word	MouseReport
 634 0004 0000      		.word	ExtrakeyReport
 635 0006 0000      		.word	ConsoleReport
 636               		.section	.rodata.CSWTCH.5,"a",@progbits
 639               	CSWTCH.5:
 640 0000 3F        		.byte	63
 641 0001 4D        		.byte	77
 642 0002 36        		.byte	54
 643 0003 20        		.byte	32
 644               		.text
 645               	.Letext0:
 646               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 647               		.file 3 "/usr/lib64/gcc/avr/4.7.1/include/stddef.h"
 648               		.file 4 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.
 649               		.file 5 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDCl
 650               		.file 6 "../../../../tmk_core/protocol/lufa/descriptor.h"
 651               		.file 7 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 descriptor.c
     /tmp/ccYiADVX.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYiADVX.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYiADVX.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYiADVX.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccYiADVX.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYiADVX.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYiADVX.s:14     .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor
     /tmp/ccYiADVX.s:252    .progmem.data.ConfigurationDescriptor:0000000000000000 ConfigurationDescriptor
     /tmp/ccYiADVX.s:244    .progmem.data.LanguageString:0000000000000000 LanguageString
     /tmp/ccYiADVX.s:223    .progmem.data.ManufacturerString:0000000000000000 ManufacturerString
     /tmp/ccYiADVX.s:205    .progmem.data.ProductString:0000000000000000 ProductString
     /tmp/ccYiADVX.s:623    .rodata.CSWTCH.2:0000000000000000 CSWTCH.2
     /tmp/ccYiADVX.s:631    .rodata.CSWTCH.4:0000000000000000 CSWTCH.4
     /tmp/ccYiADVX.s:639    .rodata.CSWTCH.5:0000000000000000 CSWTCH.5
     /tmp/ccYiADVX.s:359    .progmem.data.DeviceDescriptor:0000000000000000 DeviceDescriptor
     /tmp/ccYiADVX.s:378    .progmem.data.ConsoleReport:0000000000000000 ConsoleReport
     /tmp/ccYiADVX.s:415    .progmem.data.ExtrakeyReport:0000000000000000 ExtrakeyReport
     /tmp/ccYiADVX.s:474    .progmem.data.MouseReport:0000000000000000 MouseReport
     /tmp/ccYiADVX.s:556    .progmem.data.KeyboardReport:0000000000000000 KeyboardReport

UNDEFINED SYMBOLS
__do_copy_data
