   1               		.file	"keymap.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.action_for_key,"ax",@progbits
  12               	.global	action_for_key
  14               	action_for_key:
  15               	.LFB10:
  16               		.file 1 "../../../../tmk_core/common/keymap.c"
   1:../../../../tmk_core/common/keymap.c **** /*
   2:../../../../tmk_core/common/keymap.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/common/keymap.c **** 
   4:../../../../tmk_core/common/keymap.c **** This program is free software: you can redistribute it and/or modify
   5:../../../../tmk_core/common/keymap.c **** it under the terms of the GNU General Public License as published by
   6:../../../../tmk_core/common/keymap.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../../../tmk_core/common/keymap.c **** (at your option) any later version.
   8:../../../../tmk_core/common/keymap.c **** 
   9:../../../../tmk_core/common/keymap.c **** This program is distributed in the hope that it will be useful,
  10:../../../../tmk_core/common/keymap.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../../../tmk_core/common/keymap.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../../../tmk_core/common/keymap.c **** GNU General Public License for more details.
  13:../../../../tmk_core/common/keymap.c **** 
  14:../../../../tmk_core/common/keymap.c **** You should have received a copy of the GNU General Public License
  15:../../../../tmk_core/common/keymap.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../../../tmk_core/common/keymap.c **** */
  17:../../../../tmk_core/common/keymap.c **** #include "keymap.h"
  18:../../../../tmk_core/common/keymap.c **** #include "report.h"
  19:../../../../tmk_core/common/keymap.c **** #include "keycode.h"
  20:../../../../tmk_core/common/keymap.c **** #include "action_layer.h"
  21:../../../../tmk_core/common/keymap.c **** #include "action.h"
  22:../../../../tmk_core/common/keymap.c **** #include "action_macro.h"
  23:../../../../tmk_core/common/keymap.c **** #include "wait.h"
  24:../../../../tmk_core/common/keymap.c **** #include "debug.h"
  25:../../../../tmk_core/common/keymap.c **** #include "bootloader.h"
  26:../../../../tmk_core/common/keymap.c **** 
  27:../../../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  28:../../../../tmk_core/common/keymap.c **** extern keymap_config_t keymap_config;
  29:../../../../tmk_core/common/keymap.c **** #endif
  30:../../../../tmk_core/common/keymap.c **** 
  31:../../../../tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode);
  32:../../../../tmk_core/common/keymap.c **** 
  33:../../../../tmk_core/common/keymap.c **** 
  34:../../../../tmk_core/common/keymap.c **** /* converts key to action */
  35:../../../../tmk_core/common/keymap.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  36:../../../../tmk_core/common/keymap.c **** {
  17               		.loc 1 36 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  37:../../../../tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
  24               		.loc 1 37 0
  25 0000 0E94 0000 		call keymap_key_to_keycode
  26               	.LVL1:
  38:../../../../tmk_core/common/keymap.c ****     switch (keycode) {
  27               		.loc 1 38 0
  28 0004 982F      		mov r25,r24
  29 0006 905C      		subi r25,lo8(-(64))
  30 0008 9032      		cpi r25,lo8(32)
  31 000a 00F4      		brsh .L2
  39:../../../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
  40:../../../../tmk_core/common/keymap.c ****             return keymap_fn_to_action(keycode);
  32               		.loc 1 40 0
  33 000c 0E94 0000 		call keymap_fn_to_action
  34               	.LVL2:
  35 0010 0895      		ret
  36               	.LVL3:
  37               	.L2:
  38               	.LBB8:
  39               	.LBB9:
  41:../../../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  42:../../../../tmk_core/common/keymap.c ****         case KC_CAPSLOCK:
  43:../../../../tmk_core/common/keymap.c ****         case KC_LOCKING_CAPS:
  44:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock || keymap_config.capslock_to_control) {
  45:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
  46:../../../../tmk_core/common/keymap.c ****             }
  47:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
  48:../../../../tmk_core/common/keymap.c ****         case KC_LCTL:
  49:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock) {
  50:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
  51:../../../../tmk_core/common/keymap.c ****             }
  52:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LCTL);
  53:../../../../tmk_core/common/keymap.c ****         case KC_LALT:
  54:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  55:../../../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  56:../../../../tmk_core/common/keymap.c ****                     return keycode_to_action(ACTION_NO);
  57:../../../../tmk_core/common/keymap.c ****                 }
  58:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LGUI);
  59:../../../../tmk_core/common/keymap.c ****             }
  60:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LALT);
  61:../../../../tmk_core/common/keymap.c ****         case KC_LGUI:
  62:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  63:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
  64:../../../../tmk_core/common/keymap.c ****             }
  65:../../../../tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  66:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(ACTION_NO);
  67:../../../../tmk_core/common/keymap.c ****             }
  68:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LGUI);
  69:../../../../tmk_core/common/keymap.c ****         case KC_RALT:
  70:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  71:../../../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  72:../../../../tmk_core/common/keymap.c ****                     return keycode_to_action(ACTION_NO);
  73:../../../../tmk_core/common/keymap.c ****                 }
  74:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RGUI);
  75:../../../../tmk_core/common/keymap.c ****             }
  76:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_RALT);
  77:../../../../tmk_core/common/keymap.c ****         case KC_RGUI:
  78:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  79:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
  80:../../../../tmk_core/common/keymap.c ****             }
  81:../../../../tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  82:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(ACTION_NO);
  83:../../../../tmk_core/common/keymap.c ****             }
  84:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_RGUI);
  85:../../../../tmk_core/common/keymap.c ****         case KC_GRAVE:
  86:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  87:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
  88:../../../../tmk_core/common/keymap.c ****             }
  89:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_GRAVE);
  90:../../../../tmk_core/common/keymap.c ****         case KC_ESC:
  91:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  92:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
  93:../../../../tmk_core/common/keymap.c ****             }
  94:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_ESC);
  95:../../../../tmk_core/common/keymap.c ****         case KC_BSLASH:
  96:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
  97:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
  98:../../../../tmk_core/common/keymap.c ****             }
  99:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSLASH);
 100:../../../../tmk_core/common/keymap.c ****         case KC_BSPACE:
 101:../../../../tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 102:../../../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 103:../../../../tmk_core/common/keymap.c ****             }
 104:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSPACE);
 105:../../../../tmk_core/common/keymap.c **** #endif
 106:../../../../tmk_core/common/keymap.c ****         default:
 107:../../../../tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
 108:../../../../tmk_core/common/keymap.c ****     }
 109:../../../../tmk_core/common/keymap.c **** }
 110:../../../../tmk_core/common/keymap.c **** 
 111:../../../../tmk_core/common/keymap.c **** 
 112:../../../../tmk_core/common/keymap.c **** /* Macro */
 113:../../../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 114:../../../../tmk_core/common/keymap.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 115:../../../../tmk_core/common/keymap.c **** {
 116:../../../../tmk_core/common/keymap.c ****     (void)record;
 117:../../../../tmk_core/common/keymap.c ****     (void)id;
 118:../../../../tmk_core/common/keymap.c ****     (void)opt;
 119:../../../../tmk_core/common/keymap.c ****     return MACRO_NONE;
 120:../../../../tmk_core/common/keymap.c **** }
 121:../../../../tmk_core/common/keymap.c **** 
 122:../../../../tmk_core/common/keymap.c **** /* Function */
 123:../../../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 124:../../../../tmk_core/common/keymap.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 125:../../../../tmk_core/common/keymap.c **** {
 126:../../../../tmk_core/common/keymap.c ****     (void)record;
 127:../../../../tmk_core/common/keymap.c ****     (void)id;
 128:../../../../tmk_core/common/keymap.c ****     (void)opt;
 129:../../../../tmk_core/common/keymap.c **** }
 130:../../../../tmk_core/common/keymap.c **** 
 131:../../../../tmk_core/common/keymap.c **** 
 132:../../../../tmk_core/common/keymap.c **** 
 133:../../../../tmk_core/common/keymap.c **** /* translates keycode to action */
 134:../../../../tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode)
 135:../../../../tmk_core/common/keymap.c **** {
 136:../../../../tmk_core/common/keymap.c ****     action_t action = {};
 137:../../../../tmk_core/common/keymap.c ****     switch (keycode) {
  40               		.loc 1 137 0
  41 0012 8D3B      		cpi r24,lo8(-67)
  42 0014 00F4      		brsh .L12
  43 0016 883A      		cpi r24,lo8(-88)
  44 0018 00F4      		brsh .L9
  45 001a 853A      		cpi r24,lo8(-91)
  46 001c 00F4      		brsh .L8
  47 001e 8430      		cpi r24,lo8(4)
  48 0020 00F4      		brsh .L7
  49 0022 8130      		cpi r24,lo8(1)
  50 0024 01F0      		breq .+2
  51 0026 00C0      		rjmp .L14
  52 0028 00C0      		rjmp .L6
  53               	.L12:
  54 002a 883E      		cpi r24,lo8(-24)
  55 002c 00F4      		brsh .L13
  56 002e 803E      		cpi r24,lo8(-32)
  57 0030 00F4      		brsh .L7
  58 0032 8F3B      		cpi r24,lo8(-65)
  59 0034 01F0      		breq .+2
  60 0036 00C0      		rjmp .L14
  61 0038 00C0      		rjmp .L10
  62               	.L13:
  63 003a 803F      		cpi r24,lo8(-16)
  64 003c 00F4      		brsh .+2
  65 003e 00C0      		rjmp .L14
  66 0040 00C0      		rjmp .L38
  67               	.L6:
 138:../../../../tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 139:../../../../tmk_core/common/keymap.c ****         case KC_LCTRL ... KC_RGUI:
 140:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_KEY(keycode);
 141:../../../../tmk_core/common/keymap.c ****             break;
 142:../../../../tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 143:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 144:../../../../tmk_core/common/keymap.c ****             break;
 145:../../../../tmk_core/common/keymap.c ****         case KC_AUDIO_MUTE ... KC_WWW_FAVORITES:
 146:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 147:../../../../tmk_core/common/keymap.c ****             break;
 148:../../../../tmk_core/common/keymap.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
 149:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_MOUSEKEY(keycode);
 150:../../../../tmk_core/common/keymap.c ****             break;
 151:../../../../tmk_core/common/keymap.c ****         case KC_TRNS:
 152:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_TRANSPARENT;
  68               		.loc 1 152 0
  69 0042 21E0      		ldi r18,lo8(1)
  70 0044 30E0      		ldi r19,0
  71 0046 00C0      		rjmp .L5
  72               	.L7:
 140:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_KEY(keycode);
  73               		.loc 1 140 0
  74 0048 282F      		mov r18,r24
  75 004a 30E0      		ldi r19,0
  76               	.LVL4:
  77 004c 00C0      		rjmp .L5
  78               	.LVL5:
  79               	.L8:
 143:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  80               		.loc 1 143 0
  81 004e 853A      		cpi r24,lo8(-91)
  82 0050 01F4      		brne .+2
  83 0052 00C0      		rjmp .L15
  84 0054 863A      		cpi r24,lo8(-90)
  85 0056 01F0      		breq .+2
  86 0058 00C0      		rjmp .L16
  87 005a 22E8      		ldi r18,lo8(-126)
  88 005c 30E4      		ldi r19,lo8(64)
  89 005e 00C0      		rjmp .L5
  90               	.L9:
 146:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  91               		.loc 1 146 0
  92 0060 883A      		cpi r24,lo8(-88)
  93 0062 01F4      		brne .+2
  94 0064 00C0      		rjmp .L17
  95 0066 893A      		cpi r24,lo8(-87)
  96 0068 01F4      		brne .+2
  97 006a 00C0      		rjmp .L18
  98 006c 8A3A      		cpi r24,lo8(-86)
  99 006e 01F4      		brne .+2
 100 0070 00C0      		rjmp .L19
 101 0072 8B3A      		cpi r24,lo8(-85)
 102 0074 01F4      		brne .+2
 103 0076 00C0      		rjmp .L20
 104 0078 8C3A      		cpi r24,lo8(-84)
 105 007a 01F4      		brne .+2
 106 007c 00C0      		rjmp .L21
 107 007e 8D3A      		cpi r24,lo8(-83)
 108 0080 01F4      		brne .+2
 109 0082 00C0      		rjmp .L22
 110 0084 8E3A      		cpi r24,lo8(-82)
 111 0086 01F4      		brne .+2
 112 0088 00C0      		rjmp .L23
 113 008a 8F3A      		cpi r24,lo8(-81)
 114 008c 01F4      		brne .+2
 115 008e 00C0      		rjmp .L24
 116 0090 813B      		cpi r24,lo8(-79)
 117 0092 01F4      		brne .+2
 118 0094 00C0      		rjmp .L25
 119 0096 803B      		cpi r24,lo8(-80)
 120 0098 01F4      		brne .+2
 121 009a 00C0      		rjmp .L26
 122 009c 823B      		cpi r24,lo8(-78)
 123 009e 01F4      		brne .+2
 124 00a0 00C0      		rjmp .L27
 125 00a2 833B      		cpi r24,lo8(-77)
 126 00a4 01F4      		brne .+2
 127 00a6 00C0      		rjmp .L28
 128 00a8 843B      		cpi r24,lo8(-76)
 129 00aa 01F4      		brne .+2
 130 00ac 00C0      		rjmp .L29
 131 00ae 853B      		cpi r24,lo8(-75)
 132 00b0 01F4      		brne .+2
 133 00b2 00C0      		rjmp .L30
 134 00b4 863B      		cpi r24,lo8(-74)
 135 00b6 01F4      		brne .+2
 136 00b8 00C0      		rjmp .L31
 137 00ba 873B      		cpi r24,lo8(-73)
 138 00bc 01F4      		brne .+2
 139 00be 00C0      		rjmp .L32
 140 00c0 883B      		cpi r24,lo8(-72)
 141 00c2 01F4      		brne .+2
 142 00c4 00C0      		rjmp .L33
 143 00c6 893B      		cpi r24,lo8(-71)
 144 00c8 01F4      		brne .+2
 145 00ca 00C0      		rjmp .L34
 146 00cc 8A3B      		cpi r24,lo8(-70)
 147 00ce 01F4      		brne .+2
 148 00d0 00C0      		rjmp .L35
 149 00d2 8B3B      		cpi r24,lo8(-69)
 150 00d4 01F4      		brne .+2
 151 00d6 00C0      		rjmp .L36
 152 00d8 8C3B      		cpi r24,lo8(-68)
 153 00da 01F0      		breq .+2
 154 00dc 00C0      		rjmp .L37
 155 00de 2AE2      		ldi r18,lo8(42)
 156 00e0 36E4      		ldi r19,lo8(70)
 157 00e2 00C0      		rjmp .L5
 158               	.L38:
 149:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_MOUSEKEY(keycode);
 159               		.loc 1 149 0
 160 00e4 282F      		mov r18,r24
 161 00e6 30E0      		ldi r19,0
 162 00e8 3065      		ori r19,80
 163               	.LVL6:
 164 00ea 00C0      		rjmp .L5
 165               	.LVL7:
 166               	.L10:
 153:../../../../tmk_core/common/keymap.c ****             break;
 154:../../../../tmk_core/common/keymap.c ****         case KC_BOOTLOADER:
 155:../../../../tmk_core/common/keymap.c ****             clear_keyboard();
 167               		.loc 1 155 0
 168 00ec 0E94 0000 		call clear_keyboard
 169               	.LVL8:
 170               	.LBB10:
 171               	.LBB11:
 172               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h"
   1:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
   6:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
   9:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  12:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  17:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  21:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  33:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  35:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  38:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  41:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  42:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  46:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \code
  49:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  54:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     used.
  58:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  59:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  68:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  77:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  81:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** */
  82:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  83:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  87:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  88:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  93:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  94:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  97:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  98:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
 103:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 104:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /**
 105:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 107:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 109:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 112:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 114:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 120:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 125:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 129:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 132:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 140:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****  */
 141:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** void
 142:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** {
 144:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 153:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 156:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 159:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 164:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 173               		.loc 2 164 0
 174 00f0 2FEF      		ldi r18,lo8(159999)
 175 00f2 80E7      		ldi r24,hi8(159999)
 176 00f4 92E0      		ldi r25,hlo8(159999)
 177 00f6 2150      		1: subi r18,1
 178 00f8 8040      		sbci r24,0
 179 00fa 9040      		sbci r25,0
 180 00fc 01F4      		brne 1b
 181 00fe 00C0      		rjmp .
 182 0100 0000      		nop
 183               	.LBE11:
 184               	.LBE10:
 156:../../../../tmk_core/common/keymap.c ****             wait_ms(50);
 157:../../../../tmk_core/common/keymap.c ****             bootloader_jump(); // not return
 185               		.loc 1 157 0
 186 0102 0E94 0000 		call bootloader_jump
 187               	.LVL9:
 188               	.L14:
 158:../../../../tmk_core/common/keymap.c ****             break;
 159:../../../../tmk_core/common/keymap.c ****         default:
 160:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_NO;
 189               		.loc 1 160 0
 190 0106 20E0      		ldi r18,0
 191 0108 30E0      		ldi r19,0
 192 010a 00C0      		rjmp .L5
 193               	.LVL10:
 194               	.L15:
 143:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 195               		.loc 1 143 0
 196 010c 21E8      		ldi r18,lo8(-127)
 197 010e 30E4      		ldi r19,lo8(64)
 198 0110 00C0      		rjmp .L5
 199               	.L16:
 200 0112 23E8      		ldi r18,lo8(-125)
 201 0114 30E4      		ldi r19,lo8(64)
 202 0116 00C0      		rjmp .L5
 203               	.L17:
 146:../../../../tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 204               		.loc 1 146 0
 205 0118 22EE      		ldi r18,lo8(-30)
 206 011a 34E4      		ldi r19,lo8(68)
 207 011c 00C0      		rjmp .L5
 208               	.L18:
 209 011e 29EE      		ldi r18,lo8(-23)
 210 0120 34E4      		ldi r19,lo8(68)
 211 0122 00C0      		rjmp .L5
 212               	.L19:
 213 0124 2AEE      		ldi r18,lo8(-22)
 214 0126 34E4      		ldi r19,lo8(68)
 215 0128 00C0      		rjmp .L5
 216               	.L20:
 217 012a 25EB      		ldi r18,lo8(-75)
 218 012c 34E4      		ldi r19,lo8(68)
 219 012e 00C0      		rjmp .L5
 220               	.L21:
 221 0130 26EB      		ldi r18,lo8(-74)
 222 0132 34E4      		ldi r19,lo8(68)
 223 0134 00C0      		rjmp .L5
 224               	.L22:
 225 0136 23EB      		ldi r18,lo8(-77)
 226 0138 34E4      		ldi r19,lo8(68)
 227 013a 00C0      		rjmp .L5
 228               	.L23:
 229 013c 24EB      		ldi r18,lo8(-76)
 230 013e 34E4      		ldi r19,lo8(68)
 231 0140 00C0      		rjmp .L5
 232               	.L24:
 233 0142 27EB      		ldi r18,lo8(-73)
 234 0144 34E4      		ldi r19,lo8(68)
 235 0146 00C0      		rjmp .L5
 236               	.L25:
 237 0148 2CEC      		ldi r18,lo8(-52)
 238 014a 34E4      		ldi r19,lo8(68)
 239 014c 00C0      		rjmp .L5
 240               	.L26:
 241 014e 2DEC      		ldi r18,lo8(-51)
 242 0150 34E4      		ldi r19,lo8(68)
 243 0152 00C0      		rjmp .L5
 244               	.L27:
 245 0154 23E8      		ldi r18,lo8(-125)
 246 0156 35E4      		ldi r19,lo8(69)
 247 0158 00C0      		rjmp .L5
 248               	.L28:
 249 015a 2AE8      		ldi r18,lo8(-118)
 250 015c 35E4      		ldi r19,lo8(69)
 251 015e 00C0      		rjmp .L5
 252               	.L29:
 253 0160 22E9      		ldi r18,lo8(-110)
 254 0162 35E4      		ldi r19,lo8(69)
 255 0164 00C0      		rjmp .L5
 256               	.L30:
 257 0166 24E9      		ldi r18,lo8(-108)
 258 0168 35E4      		ldi r19,lo8(69)
 259 016a 00C0      		rjmp .L5
 260               	.L31:
 261 016c 21E2      		ldi r18,lo8(33)
 262 016e 36E4      		ldi r19,lo8(70)
 263 0170 00C0      		rjmp .L5
 264               	.L32:
 265 0172 23E2      		ldi r18,lo8(35)
 266 0174 36E4      		ldi r19,lo8(70)
 267 0176 00C0      		rjmp .L5
 268               	.L33:
 269 0178 24E2      		ldi r18,lo8(36)
 270 017a 36E4      		ldi r19,lo8(70)
 271 017c 00C0      		rjmp .L5
 272               	.L34:
 273 017e 25E2      		ldi r18,lo8(37)
 274 0180 36E4      		ldi r19,lo8(70)
 275 0182 00C0      		rjmp .L5
 276               	.L35:
 277 0184 26E2      		ldi r18,lo8(38)
 278 0186 36E4      		ldi r19,lo8(70)
 279 0188 00C0      		rjmp .L5
 280               	.L36:
 281 018a 27E2      		ldi r18,lo8(39)
 282 018c 36E4      		ldi r19,lo8(70)
 283 018e 00C0      		rjmp .L5
 284               	.L37:
 285 0190 20E0      		ldi r18,0
 286 0192 34E4      		ldi r19,lo8(68)
 287               	.LVL11:
 288               	.L5:
 289 0194 C901      		movw r24,r18
 290               	.LBE9:
 291               	.LBE8:
 109:../../../../tmk_core/common/keymap.c **** }
 292               		.loc 1 109 0
 293 0196 0895      		ret
 294               		.cfi_endproc
 295               	.LFE10:
 297               		.section	.text.action_get_macro,"ax",@progbits
 298               		.weak	action_get_macro
 300               	action_get_macro:
 301               	.LFB11:
 115:../../../../tmk_core/common/keymap.c **** {
 302               		.loc 1 115 0
 303               		.cfi_startproc
 304               	.LVL12:
 305               	/* prologue: function */
 306               	/* frame size = 0 */
 307               	/* stack size = 0 */
 308               	.L__stack_usage = 0
 120:../../../../tmk_core/common/keymap.c **** }
 309               		.loc 1 120 0
 310 0000 80E0      		ldi r24,0
 311 0002 90E0      		ldi r25,0
 312               	.LVL13:
 313 0004 0895      		ret
 314               		.cfi_endproc
 315               	.LFE11:
 317               		.section	.text.action_function,"ax",@progbits
 318               		.weak	action_function
 320               	action_function:
 321               	.LFB12:
 125:../../../../tmk_core/common/keymap.c **** {
 322               		.loc 1 125 0
 323               		.cfi_startproc
 324               	.LVL14:
 325               	/* prologue: function */
 326               	/* frame size = 0 */
 327               	/* stack size = 0 */
 328               	.L__stack_usage = 0
 329 0000 0895      		ret
 330               		.cfi_endproc
 331               	.LFE12:
 333               		.text
 334               	.Letext0:
 335               		.file 3 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 336               		.file 4 "../../../../tmk_core/common/keyboard.h"
 337               		.file 5 "../../../../tmk_core/common/keycode.h"
 338               		.file 6 "../../../../tmk_core/common/action_code.h"
 339               		.file 7 "../../../../tmk_core/common/action_macro.h"
 340               		.file 8 "../../../../tmk_core/common/action.h"
 341               		.file 9 "../../../../tmk_core/common/bootloader.h"
 342               		.file 10 "../../../../tmk_core/common/keymap.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
     /tmp/ccozw7lJ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccozw7lJ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccozw7lJ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccozw7lJ.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccozw7lJ.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccozw7lJ.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccozw7lJ.s:14     .text.action_for_key:0000000000000000 action_for_key
     /tmp/ccozw7lJ.s:300    .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccozw7lJ.s:320    .text.action_function:0000000000000000 action_function

UNDEFINED SYMBOLS
keymap_key_to_keycode
keymap_fn_to_action
clear_keyboard
bootloader_jump
