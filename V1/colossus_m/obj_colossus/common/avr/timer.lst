   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.timer_init,"ax",@progbits
  12               	.global	timer_init
  14               	timer_init:
  15               	.LFB0:
  16               		.file 1 "../../../../tmk_core/common/avr/timer.c"
   1:../../../../tmk_core/common/avr/timer.c **** /*
   2:../../../../tmk_core/common/avr/timer.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/common/avr/timer.c **** 
   4:../../../../tmk_core/common/avr/timer.c **** This program is free software: you can redistribute it and/or modify
   5:../../../../tmk_core/common/avr/timer.c **** it under the terms of the GNU General Public License as published by
   6:../../../../tmk_core/common/avr/timer.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../../../tmk_core/common/avr/timer.c **** (at your option) any later version.
   8:../../../../tmk_core/common/avr/timer.c **** 
   9:../../../../tmk_core/common/avr/timer.c **** This program is distributed in the hope that it will be useful,
  10:../../../../tmk_core/common/avr/timer.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../../../tmk_core/common/avr/timer.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../../../tmk_core/common/avr/timer.c **** GNU General Public License for more details.
  13:../../../../tmk_core/common/avr/timer.c **** 
  14:../../../../tmk_core/common/avr/timer.c **** You should have received a copy of the GNU General Public License
  15:../../../../tmk_core/common/avr/timer.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../../../tmk_core/common/avr/timer.c **** */
  17:../../../../tmk_core/common/avr/timer.c **** 
  18:../../../../tmk_core/common/avr/timer.c **** #include <avr/io.h>
  19:../../../../tmk_core/common/avr/timer.c **** #include <avr/interrupt.h>
  20:../../../../tmk_core/common/avr/timer.c **** #include <stdint.h>
  21:../../../../tmk_core/common/avr/timer.c **** #include "timer_avr.h"
  22:../../../../tmk_core/common/avr/timer.c **** #include "timer.h"
  23:../../../../tmk_core/common/avr/timer.c **** 
  24:../../../../tmk_core/common/avr/timer.c **** 
  25:../../../../tmk_core/common/avr/timer.c **** // counter resolution 1ms
  26:../../../../tmk_core/common/avr/timer.c **** // NOTE: union { uint32_t timer32; struct { uint16_t dummy; uint16_t timer16; }}
  27:../../../../tmk_core/common/avr/timer.c **** volatile uint32_t timer_count = 0;
  28:../../../../tmk_core/common/avr/timer.c **** 
  29:../../../../tmk_core/common/avr/timer.c **** void timer_init(void)
  30:../../../../tmk_core/common/avr/timer.c **** {
  17               		.loc 1 30 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  31:../../../../tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  32:../../../../tmk_core/common/avr/timer.c ****     TCCR0A = 0x02;
  23               		.loc 1 32 0
  24 0000 82E0      		ldi r24,lo8(2)
  25 0002 84BD      		out 0x24,r24
  33:../../../../tmk_core/common/avr/timer.c **** 
  34:../../../../tmk_core/common/avr/timer.c **** #if TIMER_PRESCALER == 1
  35:../../../../tmk_core/common/avr/timer.c ****     TCCR0B = 0x01;
  36:../../../../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 8
  37:../../../../tmk_core/common/avr/timer.c ****     TCCR0B = 0x02;
  38:../../../../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 64
  39:../../../../tmk_core/common/avr/timer.c ****     TCCR0B = 0x03;
  26               		.loc 1 39 0
  27 0004 93E0      		ldi r25,lo8(3)
  28 0006 95BD      		out 0x25,r25
  40:../../../../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 256
  41:../../../../tmk_core/common/avr/timer.c ****     TCCR0B = 0x04;
  42:../../../../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 1024
  43:../../../../tmk_core/common/avr/timer.c ****     TCCR0B = 0x05;
  44:../../../../tmk_core/common/avr/timer.c **** #else
  45:../../../../tmk_core/common/avr/timer.c **** #   error "Timer prescaler value is NOT vaild."
  46:../../../../tmk_core/common/avr/timer.c **** #endif
  47:../../../../tmk_core/common/avr/timer.c **** 
  48:../../../../tmk_core/common/avr/timer.c ****     OCR0A = TIMER_RAW_TOP;
  29               		.loc 1 48 0
  30 0008 9AEF      		ldi r25,lo8(-6)
  31 000a 97BD      		out 0x27,r25
  49:../../../../tmk_core/common/avr/timer.c ****     TIMSK0 = (1<<OCIE0A);
  32               		.loc 1 49 0
  33 000c 8093 6E00 		sts 110,r24
  34 0010 0895      		ret
  35               		.cfi_endproc
  36               	.LFE0:
  38               		.section	.text.timer_clear,"ax",@progbits
  39               	.global	timer_clear
  41               	timer_clear:
  42               	.LFB1:
  50:../../../../tmk_core/common/avr/timer.c **** }
  51:../../../../tmk_core/common/avr/timer.c **** 
  52:../../../../tmk_core/common/avr/timer.c **** inline
  53:../../../../tmk_core/common/avr/timer.c **** void timer_clear(void)
  54:../../../../tmk_core/common/avr/timer.c **** {
  43               		.loc 1 54 0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  55:../../../../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
  49               		.loc 1 55 0
  50 0000 8FB7      		in r24,__SREG__
  51               	.LVL0:
  56:../../../../tmk_core/common/avr/timer.c ****     cli();
  52               		.loc 1 56 0
  53               	/* #APP */
  54               	 ;  56 "../../../../tmk_core/common/avr/timer.c" 1
  55 0002 F894      		cli
  56               	 ;  0 "" 2
  57:../../../../tmk_core/common/avr/timer.c ****     timer_count = 0;
  57               		.loc 1 57 0
  58               	/* #NOAPP */
  59 0004 1092 0000 		sts timer_count,__zero_reg__
  60 0008 1092 0000 		sts timer_count+1,__zero_reg__
  61 000c 1092 0000 		sts timer_count+2,__zero_reg__
  62 0010 1092 0000 		sts timer_count+3,__zero_reg__
  58:../../../../tmk_core/common/avr/timer.c ****     SREG = sreg;
  63               		.loc 1 58 0
  64 0014 8FBF      		out __SREG__,r24
  65 0016 0895      		ret
  66               		.cfi_endproc
  67               	.LFE1:
  69               		.section	.text.timer_read,"ax",@progbits
  70               	.global	timer_read
  72               	timer_read:
  73               	.LFB2:
  59:../../../../tmk_core/common/avr/timer.c **** }
  60:../../../../tmk_core/common/avr/timer.c **** 
  61:../../../../tmk_core/common/avr/timer.c **** inline
  62:../../../../tmk_core/common/avr/timer.c **** uint16_t timer_read(void)
  63:../../../../tmk_core/common/avr/timer.c **** {
  74               		.loc 1 63 0
  75               		.cfi_startproc
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 0 */
  79               	.L__stack_usage = 0
  64:../../../../tmk_core/common/avr/timer.c ****     uint32_t t;
  65:../../../../tmk_core/common/avr/timer.c **** 
  66:../../../../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
  80               		.loc 1 66 0
  81 0000 8FB7      		in r24,__SREG__
  82               	.LVL1:
  67:../../../../tmk_core/common/avr/timer.c ****     cli();
  83               		.loc 1 67 0
  84               	/* #APP */
  85               	 ;  67 "../../../../tmk_core/common/avr/timer.c" 1
  86 0002 F894      		cli
  87               	 ;  0 "" 2
  68:../../../../tmk_core/common/avr/timer.c ****     t = timer_count;
  88               		.loc 1 68 0
  89               	/* #NOAPP */
  90 0004 4091 0000 		lds r20,timer_count
  91 0008 5091 0000 		lds r21,timer_count+1
  92 000c 6091 0000 		lds r22,timer_count+2
  93 0010 7091 0000 		lds r23,timer_count+3
  69:../../../../tmk_core/common/avr/timer.c ****     SREG = sreg;
  94               		.loc 1 69 0
  95 0014 8FBF      		out __SREG__,r24
  70:../../../../tmk_core/common/avr/timer.c **** 
  71:../../../../tmk_core/common/avr/timer.c ****     return (t & 0xFFFF);
  72:../../../../tmk_core/common/avr/timer.c **** }
  96               		.loc 1 72 0
  97 0016 CA01      		movw r24,r20
  98               	.LVL2:
  99 0018 0895      		ret
 100               		.cfi_endproc
 101               	.LFE2:
 103               		.section	.text.timer_read32,"ax",@progbits
 104               	.global	timer_read32
 106               	timer_read32:
 107               	.LFB3:
  73:../../../../tmk_core/common/avr/timer.c **** 
  74:../../../../tmk_core/common/avr/timer.c **** inline
  75:../../../../tmk_core/common/avr/timer.c **** uint32_t timer_read32(void)
  76:../../../../tmk_core/common/avr/timer.c **** {
 108               		.loc 1 76 0
 109               		.cfi_startproc
 110 0000 0F93      		push r16
 111               	.LCFI0:
 112               		.cfi_def_cfa_offset 3
 113               		.cfi_offset 16, -2
 114 0002 1F93      		push r17
 115               	.LCFI1:
 116               		.cfi_def_cfa_offset 4
 117               		.cfi_offset 17, -3
 118               	/* prologue: function */
 119               	/* frame size = 0 */
 120               	/* stack size = 2 */
 121               	.L__stack_usage = 2
  77:../../../../tmk_core/common/avr/timer.c ****     uint32_t t;
  78:../../../../tmk_core/common/avr/timer.c **** 
  79:../../../../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
 122               		.loc 1 79 0
 123 0004 8FB7      		in r24,__SREG__
 124               	.LVL3:
  80:../../../../tmk_core/common/avr/timer.c ****     cli();
 125               		.loc 1 80 0
 126               	/* #APP */
 127               	 ;  80 "../../../../tmk_core/common/avr/timer.c" 1
 128 0006 F894      		cli
 129               	 ;  0 "" 2
  81:../../../../tmk_core/common/avr/timer.c ****     t = timer_count;
 130               		.loc 1 81 0
 131               	/* #NOAPP */
 132 0008 0091 0000 		lds r16,timer_count
 133 000c 1091 0000 		lds r17,timer_count+1
 134 0010 2091 0000 		lds r18,timer_count+2
 135 0014 3091 0000 		lds r19,timer_count+3
 136               	.LVL4:
  82:../../../../tmk_core/common/avr/timer.c ****     SREG = sreg;
 137               		.loc 1 82 0
 138 0018 8FBF      		out __SREG__,r24
  83:../../../../tmk_core/common/avr/timer.c **** 
  84:../../../../tmk_core/common/avr/timer.c ****     return t;
  85:../../../../tmk_core/common/avr/timer.c **** }
 139               		.loc 1 85 0
 140 001a B801      		movw r22,r16
 141 001c C901      		movw r24,r18
 142               	.LVL5:
 143               	/* epilogue start */
 144 001e 1F91      		pop r17
 145 0020 0F91      		pop r16
 146               	.LVL6:
 147 0022 0895      		ret
 148               		.cfi_endproc
 149               	.LFE3:
 151               		.section	.text.timer_elapsed,"ax",@progbits
 152               	.global	timer_elapsed
 154               	timer_elapsed:
 155               	.LFB4:
  86:../../../../tmk_core/common/avr/timer.c **** 
  87:../../../../tmk_core/common/avr/timer.c **** inline
  88:../../../../tmk_core/common/avr/timer.c **** uint16_t timer_elapsed(uint16_t last)
  89:../../../../tmk_core/common/avr/timer.c **** {
 156               		.loc 1 89 0
 157               		.cfi_startproc
 158               	.LVL7:
 159 0000 CF92      		push r12
 160               	.LCFI2:
 161               		.cfi_def_cfa_offset 3
 162               		.cfi_offset 12, -2
 163 0002 DF92      		push r13
 164               	.LCFI3:
 165               		.cfi_def_cfa_offset 4
 166               		.cfi_offset 13, -3
 167 0004 EF92      		push r14
 168               	.LCFI4:
 169               		.cfi_def_cfa_offset 5
 170               		.cfi_offset 14, -4
 171 0006 FF92      		push r15
 172               	.LCFI5:
 173               		.cfi_def_cfa_offset 6
 174               		.cfi_offset 15, -5
 175 0008 0F93      		push r16
 176               	.LCFI6:
 177               		.cfi_def_cfa_offset 7
 178               		.cfi_offset 16, -6
 179 000a 1F93      		push r17
 180               	.LCFI7:
 181               		.cfi_def_cfa_offset 8
 182               		.cfi_offset 17, -7
 183               	/* prologue: function */
 184               	/* frame size = 0 */
 185               	/* stack size = 6 */
 186               	.L__stack_usage = 6
  90:../../../../tmk_core/common/avr/timer.c ****     uint32_t t;
  91:../../../../tmk_core/common/avr/timer.c **** 
  92:../../../../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
 187               		.loc 1 92 0
 188 000c 2FB7      		in r18,__SREG__
 189               	.LVL8:
  93:../../../../tmk_core/common/avr/timer.c ****     cli();
 190               		.loc 1 93 0
 191               	/* #APP */
 192               	 ;  93 "../../../../tmk_core/common/avr/timer.c" 1
 193 000e F894      		cli
 194               	 ;  0 "" 2
  94:../../../../tmk_core/common/avr/timer.c ****     t = timer_count;
 195               		.loc 1 94 0
 196               	/* #NOAPP */
 197 0010 4091 0000 		lds r20,timer_count
 198 0014 5091 0000 		lds r21,timer_count+1
 199 0018 6091 0000 		lds r22,timer_count+2
 200 001c 7091 0000 		lds r23,timer_count+3
 201               	.LVL9:
  95:../../../../tmk_core/common/avr/timer.c ****     SREG = sreg;
 202               		.loc 1 95 0
 203 0020 2FBF      		out __SREG__,r18
  96:../../../../tmk_core/common/avr/timer.c **** 
  97:../../../../tmk_core/common/avr/timer.c ****     return TIMER_DIFF_16((t & 0xFFFF), last);
 204               		.loc 1 97 0
 205 0022 6A01      		movw r12,r20
 206 0024 7B01      		movw r14,r22
 207 0026 EE24      		clr r14
 208 0028 FF24      		clr r15
 209 002a 8C01      		movw r16,r24
 210 002c 20E0      		ldi r18,0
 211 002e 30E0      		ldi r19,0
 212               	.LVL10:
 213 0030 C016      		cp r12,r16
 214 0032 D106      		cpc r13,r17
 215 0034 E206      		cpc r14,r18
 216 0036 F306      		cpc r15,r19
 217 0038 00F0      		brlo .L6
 218               		.loc 1 97 0 is_stmt 0 discriminator 1
 219 003a 9A01      		movw r18,r20
 220 003c 281B      		sub r18,r24
 221 003e 390B      		sbc r19,r25
 222 0040 00C0      		rjmp .L7
 223               	.L6:
 224               		.loc 1 97 0 discriminator 2
 225 0042 9C01      		movw r18,r24
 226 0044 2095      		com r18
 227 0046 3095      		com r19
 228 0048 240F      		add r18,r20
 229 004a 351F      		adc r19,r21
 230               	.LVL11:
 231               	.L7:
  98:../../../../tmk_core/common/avr/timer.c **** }
 232               		.loc 1 98 0 is_stmt 1 discriminator 3
 233 004c C901      		movw r24,r18
 234               	/* epilogue start */
 235 004e 1F91      		pop r17
 236 0050 0F91      		pop r16
 237               	.LVL12:
 238 0052 FF90      		pop r15
 239 0054 EF90      		pop r14
 240 0056 DF90      		pop r13
 241 0058 CF90      		pop r12
 242 005a 0895      		ret
 243               		.cfi_endproc
 244               	.LFE4:
 246               		.section	.text.timer_elapsed32,"ax",@progbits
 247               	.global	timer_elapsed32
 249               	timer_elapsed32:
 250               	.LFB5:
  99:../../../../tmk_core/common/avr/timer.c **** 
 100:../../../../tmk_core/common/avr/timer.c **** inline
 101:../../../../tmk_core/common/avr/timer.c **** uint32_t timer_elapsed32(uint32_t last)
 102:../../../../tmk_core/common/avr/timer.c **** {
 251               		.loc 1 102 0
 252               		.cfi_startproc
 253               	.LVL13:
 254 0000 CF92      		push r12
 255               	.LCFI8:
 256               		.cfi_def_cfa_offset 3
 257               		.cfi_offset 12, -2
 258 0002 DF92      		push r13
 259               	.LCFI9:
 260               		.cfi_def_cfa_offset 4
 261               		.cfi_offset 13, -3
 262 0004 EF92      		push r14
 263               	.LCFI10:
 264               		.cfi_def_cfa_offset 5
 265               		.cfi_offset 14, -4
 266 0006 FF92      		push r15
 267               	.LCFI11:
 268               		.cfi_def_cfa_offset 6
 269               		.cfi_offset 15, -5
 270 0008 0F93      		push r16
 271               	.LCFI12:
 272               		.cfi_def_cfa_offset 7
 273               		.cfi_offset 16, -6
 274 000a 1F93      		push r17
 275               	.LCFI13:
 276               		.cfi_def_cfa_offset 8
 277               		.cfi_offset 17, -7
 278               	/* prologue: function */
 279               	/* frame size = 0 */
 280               	/* stack size = 6 */
 281               	.L__stack_usage = 6
 103:../../../../tmk_core/common/avr/timer.c ****     uint32_t t;
 104:../../../../tmk_core/common/avr/timer.c **** 
 105:../../../../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
 282               		.loc 1 105 0
 283 000c 4FB7      		in r20,__SREG__
 284               	.LVL14:
 106:../../../../tmk_core/common/avr/timer.c ****     cli();
 285               		.loc 1 106 0
 286               	/* #APP */
 287               	 ;  106 "../../../../tmk_core/common/avr/timer.c" 1
 288 000e F894      		cli
 289               	 ;  0 "" 2
 107:../../../../tmk_core/common/avr/timer.c ****     t = timer_count;
 290               		.loc 1 107 0
 291               	/* #NOAPP */
 292 0010 C090 0000 		lds r12,timer_count
 293 0014 D090 0000 		lds r13,timer_count+1
 294 0018 E090 0000 		lds r14,timer_count+2
 295 001c F090 0000 		lds r15,timer_count+3
 296               	.LVL15:
 108:../../../../tmk_core/common/avr/timer.c ****     SREG = sreg;
 297               		.loc 1 108 0
 298 0020 4FBF      		out __SREG__,r20
 109:../../../../tmk_core/common/avr/timer.c **** 
 110:../../../../tmk_core/common/avr/timer.c ****     return TIMER_DIFF_32(t, last);
 299               		.loc 1 110 0
 300 0022 C616      		cp r12,r22
 301 0024 D706      		cpc r13,r23
 302 0026 E806      		cpc r14,r24
 303 0028 F906      		cpc r15,r25
 304 002a 00F0      		brlo .L9
 305               		.loc 1 110 0 is_stmt 0 discriminator 1
 306 002c 9701      		movw r18,r14
 307 002e 8601      		movw r16,r12
 308 0030 061B      		sub r16,r22
 309 0032 170B      		sbc r17,r23
 310 0034 280B      		sbc r18,r24
 311 0036 390B      		sbc r19,r25
 312 0038 00C0      		rjmp .L10
 313               	.L9:
 314               		.loc 1 110 0 discriminator 2
 315 003a 8B01      		movw r16,r22
 316 003c 9C01      		movw r18,r24
 317 003e 0095      		com r16
 318 0040 1095      		com r17
 319 0042 2095      		com r18
 320 0044 3095      		com r19
 321 0046 0C0D      		add r16,r12
 322 0048 1D1D      		adc r17,r13
 323 004a 2E1D      		adc r18,r14
 324 004c 3F1D      		adc r19,r15
 325               	.L10:
 111:../../../../tmk_core/common/avr/timer.c **** }
 326               		.loc 1 111 0 is_stmt 1 discriminator 3
 327 004e B801      		movw r22,r16
 328               	.LVL16:
 329 0050 C901      		movw r24,r18
 330               	/* epilogue start */
 331 0052 1F91      		pop r17
 332 0054 0F91      		pop r16
 333 0056 FF90      		pop r15
 334 0058 EF90      		pop r14
 335 005a DF90      		pop r13
 336 005c CF90      		pop r12
 337               	.LVL17:
 338 005e 0895      		ret
 339               		.cfi_endproc
 340               	.LFE5:
 342               		.section	.text.__vector_21,"ax",@progbits
 343               	.global	__vector_21
 345               	__vector_21:
 346               	.LFB6:
 112:../../../../tmk_core/common/avr/timer.c **** 
 113:../../../../tmk_core/common/avr/timer.c **** // excecuted once per 1ms.(excess for just timer count?)
 114:../../../../tmk_core/common/avr/timer.c **** ISR(TIMER0_COMPA_vect)
 115:../../../../tmk_core/common/avr/timer.c **** {
 347               		.loc 1 115 0
 348               		.cfi_startproc
 349 0000 1F92      		push r1
 350               	.LCFI14:
 351               		.cfi_def_cfa_offset 3
 352               		.cfi_offset 1, -2
 353 0002 0F92      		push r0
 354               	.LCFI15:
 355               		.cfi_def_cfa_offset 4
 356               		.cfi_offset 0, -3
 357 0004 0FB6      		in r0,__SREG__
 358 0006 0F92      		push r0
 359 0008 1124      		clr __zero_reg__
 360 000a 8F93      		push r24
 361               	.LCFI16:
 362               		.cfi_def_cfa_offset 5
 363               		.cfi_offset 24, -4
 364 000c 9F93      		push r25
 365               	.LCFI17:
 366               		.cfi_def_cfa_offset 6
 367               		.cfi_offset 25, -5
 368 000e AF93      		push r26
 369               	.LCFI18:
 370               		.cfi_def_cfa_offset 7
 371               		.cfi_offset 26, -6
 372 0010 BF93      		push r27
 373               	.LCFI19:
 374               		.cfi_def_cfa_offset 8
 375               		.cfi_offset 27, -7
 376               	/* prologue: Signal */
 377               	/* frame size = 0 */
 378               	/* stack size = 7 */
 379               	.L__stack_usage = 7
 116:../../../../tmk_core/common/avr/timer.c ****     timer_count++;
 380               		.loc 1 116 0
 381 0012 8091 0000 		lds r24,timer_count
 382 0016 9091 0000 		lds r25,timer_count+1
 383 001a A091 0000 		lds r26,timer_count+2
 384 001e B091 0000 		lds r27,timer_count+3
 385 0022 0196      		adiw r24,1
 386 0024 A11D      		adc r26,__zero_reg__
 387 0026 B11D      		adc r27,__zero_reg__
 388 0028 8093 0000 		sts timer_count,r24
 389 002c 9093 0000 		sts timer_count+1,r25
 390 0030 A093 0000 		sts timer_count+2,r26
 391 0034 B093 0000 		sts timer_count+3,r27
 392               	/* epilogue start */
 117:../../../../tmk_core/common/avr/timer.c **** }
 393               		.loc 1 117 0
 394 0038 BF91      		pop r27
 395 003a AF91      		pop r26
 396 003c 9F91      		pop r25
 397 003e 8F91      		pop r24
 398 0040 0F90      		pop r0
 399 0042 0FBE      		out __SREG__,r0
 400 0044 0F90      		pop r0
 401 0046 1F90      		pop r1
 402 0048 1895      		reti
 403               		.cfi_endproc
 404               	.LFE6:
 406               	.global	timer_count
 407               		.section	.bss.timer_count,"aw",@nobits
 410               	timer_count:
 411 0000 0000 0000 		.zero	4
 412               		.text
 413               	.Letext0:
 414               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
     /tmp/ccXf16DO.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXf16DO.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXf16DO.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXf16DO.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccXf16DO.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXf16DO.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXf16DO.s:14     .text.timer_init:0000000000000000 timer_init
     /tmp/ccXf16DO.s:41     .text.timer_clear:0000000000000000 timer_clear
     /tmp/ccXf16DO.s:410    .bss.timer_count:0000000000000000 timer_count
     /tmp/ccXf16DO.s:72     .text.timer_read:0000000000000000 timer_read
     /tmp/ccXf16DO.s:106    .text.timer_read32:0000000000000000 timer_read32
     /tmp/ccXf16DO.s:154    .text.timer_elapsed:0000000000000000 timer_elapsed
     /tmp/ccXf16DO.s:249    .text.timer_elapsed32:0000000000000000 timer_elapsed32
     /tmp/ccXf16DO.s:345    .text.__vector_21:0000000000000000 __vector_21

UNDEFINED SYMBOLS
__do_clear_bss
