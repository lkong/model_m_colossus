   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_setup,"ax",@progbits
  12               		.weak	matrix_setup
  14               	matrix_setup:
  15               	.LFB5:
  16               		.file 1 "../../../../tmk_core/common/keyboard.c"
   1:../../../../tmk_core/common/keyboard.c **** /*
   2:../../../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/common/keyboard.c **** 
   4:../../../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../../../tmk_core/common/keyboard.c **** 
   9:../../../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../../../tmk_core/common/keyboard.c **** 
  14:../../../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../../../tmk_core/common/keyboard.c **** */
  17:../../../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  34:../../../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  35:../../../../tmk_core/common/keyboard.c **** #endif
  36:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  37:../../../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  38:../../../../tmk_core/common/keyboard.c **** #endif
  39:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  40:../../../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  41:../../../../tmk_core/common/keyboard.c **** #endif
  42:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  43:../../../../tmk_core/common/keyboard.c **** #include "adb.h"
  44:../../../../tmk_core/common/keyboard.c **** #endif
  45:../../../../tmk_core/common/keyboard.c **** 
  46:../../../../tmk_core/common/keyboard.c **** 
  47:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  48:../../../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  49:../../../../tmk_core/common/keyboard.c **** {
  50:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  51:../../../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  52:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  53:../../../../tmk_core/common/keyboard.c ****         return false;
  54:../../../../tmk_core/common/keyboard.c **** 
  55:../../../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  56:../../../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  57:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  58:../../../../tmk_core/common/keyboard.c ****             return true;
  59:../../../../tmk_core/common/keyboard.c ****     }
  60:../../../../tmk_core/common/keyboard.c ****     return false;
  61:../../../../tmk_core/common/keyboard.c **** }
  62:../../../../tmk_core/common/keyboard.c **** #endif
  63:../../../../tmk_core/common/keyboard.c **** 
  64:../../../../tmk_core/common/keyboard.c **** 
  65:../../../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  17               		.loc 1 65 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23 0000 0895      		ret
  24               		.cfi_endproc
  25               	.LFE5:
  27               		.section	.text.keyboard_setup,"ax",@progbits
  28               	.global	keyboard_setup
  30               	keyboard_setup:
  31               	.LFB6:
  66:../../../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../../../tmk_core/common/keyboard.c **** {
  32               		.loc 1 67 0
  33               		.cfi_startproc
  34               	/* prologue: function */
  35               	/* frame size = 0 */
  36               	/* stack size = 0 */
  37               	.L__stack_usage = 0
  68:../../../../tmk_core/common/keyboard.c ****     matrix_setup();
  38               		.loc 1 68 0
  39 0000 0C94 0000 		jmp matrix_setup
  40               	.LVL0:
  41               		.cfi_endproc
  42               	.LFE6:
  44               		.section	.text.keyboard_init,"ax",@progbits
  45               	.global	keyboard_init
  47               	keyboard_init:
  48               	.LFB7:
  69:../../../../tmk_core/common/keyboard.c **** }
  70:../../../../tmk_core/common/keyboard.c **** 
  71:../../../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../../../tmk_core/common/keyboard.c **** {
  49               		.loc 1 72 0
  50               		.cfi_startproc
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
  73:../../../../tmk_core/common/keyboard.c ****     timer_init();
  55               		.loc 1 73 0
  56 0000 0E94 0000 		call timer_init
  57               	.LVL1:
  74:../../../../tmk_core/common/keyboard.c ****     matrix_init();
  58               		.loc 1 74 0
  59 0004 0C94 0000 		jmp matrix_init
  60               	.LVL2:
  61               		.cfi_endproc
  62               	.LFE7:
  64               		.section	.text.keyboard_set_leds,"ax",@progbits
  65               	.global	keyboard_set_leds
  67               	keyboard_set_leds:
  68               	.LFB9:
  75:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../../../tmk_core/common/keyboard.c **** #endif
  78:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../../../tmk_core/common/keyboard.c **** #endif
  81:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../../../tmk_core/common/keyboard.c **** #endif
  84:../../../../tmk_core/common/keyboard.c **** 
  85:../../../../tmk_core/common/keyboard.c **** 
  86:../../../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../../../tmk_core/common/keyboard.c ****     bootmagic();
  88:../../../../tmk_core/common/keyboard.c **** #endif
  89:../../../../tmk_core/common/keyboard.c **** 
  90:../../../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../../../tmk_core/common/keyboard.c **** #endif
  93:../../../../tmk_core/common/keyboard.c **** }
  94:../../../../tmk_core/common/keyboard.c **** 
  95:../../../../tmk_core/common/keyboard.c **** /*
  96:../../../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../../../tmk_core/common/keyboard.c ****  */
  99:../../../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../../../tmk_core/common/keyboard.c **** {
 101:../../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../../../tmk_core/common/keyboard.c **** #endif
 105:../../../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../../../tmk_core/common/keyboard.c **** 
 109:../../../../tmk_core/common/keyboard.c ****     matrix_scan();
 110:../../../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 111:../../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../../../tmk_core/common/keyboard.c ****                  */
 120:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../../../tmk_core/common/keyboard.c ****                 }
 123:../../../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../../../tmk_core/common/keyboard.c ****                 continue;
 125:../../../../tmk_core/common/keyboard.c ****             }
 126:../../../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../../../tmk_core/common/keyboard.c **** #endif
 128:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 132:../../../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../../../tmk_core/common/keyboard.c ****                     });
 136:../../../../tmk_core/common/keyboard.c ****                     // record a processed key
 137:../../../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 138:../../../../tmk_core/common/keyboard.c ****                     // process a key per task call
 139:../../../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 140:../../../../tmk_core/common/keyboard.c ****                 }
 141:../../../../tmk_core/common/keyboard.c ****             }
 142:../../../../tmk_core/common/keyboard.c ****         }
 143:../../../../tmk_core/common/keyboard.c ****     }
 144:../../../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 145:../../../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 146:../../../../tmk_core/common/keyboard.c **** 
 147:../../../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 148:../../../../tmk_core/common/keyboard.c **** 
 149:../../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 150:../../../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 151:../../../../tmk_core/common/keyboard.c ****     mousekey_task();
 152:../../../../tmk_core/common/keyboard.c **** #endif
 153:../../../../tmk_core/common/keyboard.c **** 
 154:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 155:../../../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 156:../../../../tmk_core/common/keyboard.c **** #endif
 157:../../../../tmk_core/common/keyboard.c **** 
 158:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 159:../../../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 160:../../../../tmk_core/common/keyboard.c **** #endif
 161:../../../../tmk_core/common/keyboard.c **** 
 162:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 163:../../../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 164:../../../../tmk_core/common/keyboard.c **** #endif
 165:../../../../tmk_core/common/keyboard.c **** 
 166:../../../../tmk_core/common/keyboard.c ****     // update LED
 167:../../../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 168:../../../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 169:../../../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 170:../../../../tmk_core/common/keyboard.c ****     }
 171:../../../../tmk_core/common/keyboard.c **** }
 172:../../../../tmk_core/common/keyboard.c **** 
 173:../../../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 174:../../../../tmk_core/common/keyboard.c **** {
  69               		.loc 1 174 0
  70               		.cfi_startproc
  71               	.LVL3:
  72 0000 CF93      		push r28
  73               	.LCFI0:
  74               		.cfi_def_cfa_offset 3
  75               		.cfi_offset 28, -2
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 1 */
  79               	.L__stack_usage = 1
  80 0002 C82F      		mov r28,r24
 175:../../../../tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
  81               		.loc 1 175 0
  82 0004 8091 0000 		lds r24,debug_config
  83               	.LVL4:
  84 0008 82FF      		sbrs r24,2
  85 000a 00C0      		rjmp .L6
  86               		.loc 1 175 0 is_stmt 0 discriminator 1
  87 000c 80FF      		sbrs r24,0
  88 000e 00C0      		rjmp .L7
  89 0010 80E0      		ldi r24,lo8(__c.2230)
  90 0012 90E0      		ldi r25,hi8(__c.2230)
  91 0014 0E94 0000 		call xputs
  92               	.LVL5:
  93               	.L7:
  94               		.loc 1 175 0 discriminator 2
  95 0018 8091 0000 		lds r24,debug_config
  96 001c 80FF      		sbrs r24,0
  97 001e 00C0      		rjmp .L8
  98               		.loc 1 175 0 discriminator 1
  99 0020 1F92      		push __zero_reg__
 100               	.LCFI1:
 101               		.cfi_def_cfa_offset 4
 102 0022 CF93      		push r28
 103               	.LCFI2:
 104               		.cfi_def_cfa_offset 5
 105 0024 20E0      		ldi r18,lo8(__c.2232)
 106 0026 30E0      		ldi r19,hi8(__c.2232)
 107 0028 3F93      		push r19
 108               	.LCFI3:
 109               		.cfi_def_cfa_offset 6
 110 002a 2F93      		push r18
 111               	.LCFI4:
 112               		.cfi_def_cfa_offset 7
 113 002c 0E94 0000 		call __xprintf
 114               	.LVL6:
 115 0030 0F90      		pop __tmp_reg__
 116 0032 0F90      		pop __tmp_reg__
 117 0034 0F90      		pop __tmp_reg__
 118 0036 0F90      		pop __tmp_reg__
 119               	.LCFI5:
 120               		.cfi_def_cfa_offset 3
 121               	.L8:
 122               		.loc 1 175 0 discriminator 2
 123 0038 8091 0000 		lds r24,debug_config
 124 003c 80FF      		sbrs r24,0
 125 003e 00C0      		rjmp .L6
 126               		.loc 1 175 0 discriminator 1
 127 0040 80E0      		ldi r24,lo8(__c.2234)
 128 0042 90E0      		ldi r25,hi8(__c.2234)
 129 0044 0E94 0000 		call xputs
 130               	.LVL7:
 131               	.L6:
 176:../../../../tmk_core/common/keyboard.c ****     led_set(leds);
 132               		.loc 1 176 0 is_stmt 1
 133 0048 8C2F      		mov r24,r28
 134               	/* epilogue start */
 177:../../../../tmk_core/common/keyboard.c **** }
 135               		.loc 1 177 0
 136 004a CF91      		pop r28
 137               	.LVL8:
 176:../../../../tmk_core/common/keyboard.c ****     led_set(leds);
 138               		.loc 1 176 0
 139 004c 0C94 0000 		jmp led_set
 140               	.LVL9:
 141               		.cfi_endproc
 142               	.LFE9:
 144               		.section	.text.keyboard_task,"ax",@progbits
 145               	.global	keyboard_task
 147               	keyboard_task:
 148               	.LFB8:
 100:../../../../tmk_core/common/keyboard.c **** {
 149               		.loc 1 100 0
 150               		.cfi_startproc
 151 0000 2F92      		push r2
 152               	.LCFI6:
 153               		.cfi_def_cfa_offset 3
 154               		.cfi_offset 2, -2
 155 0002 3F92      		push r3
 156               	.LCFI7:
 157               		.cfi_def_cfa_offset 4
 158               		.cfi_offset 3, -3
 159 0004 4F92      		push r4
 160               	.LCFI8:
 161               		.cfi_def_cfa_offset 5
 162               		.cfi_offset 4, -4
 163 0006 5F92      		push r5
 164               	.LCFI9:
 165               		.cfi_def_cfa_offset 6
 166               		.cfi_offset 5, -5
 167 0008 6F92      		push r6
 168               	.LCFI10:
 169               		.cfi_def_cfa_offset 7
 170               		.cfi_offset 6, -6
 171 000a 7F92      		push r7
 172               	.LCFI11:
 173               		.cfi_def_cfa_offset 8
 174               		.cfi_offset 7, -7
 175 000c 8F92      		push r8
 176               	.LCFI12:
 177               		.cfi_def_cfa_offset 9
 178               		.cfi_offset 8, -8
 179 000e 9F92      		push r9
 180               	.LCFI13:
 181               		.cfi_def_cfa_offset 10
 182               		.cfi_offset 9, -9
 183 0010 AF92      		push r10
 184               	.LCFI14:
 185               		.cfi_def_cfa_offset 11
 186               		.cfi_offset 10, -10
 187 0012 BF92      		push r11
 188               	.LCFI15:
 189               		.cfi_def_cfa_offset 12
 190               		.cfi_offset 11, -11
 191 0014 CF92      		push r12
 192               	.LCFI16:
 193               		.cfi_def_cfa_offset 13
 194               		.cfi_offset 12, -12
 195 0016 DF92      		push r13
 196               	.LCFI17:
 197               		.cfi_def_cfa_offset 14
 198               		.cfi_offset 13, -13
 199 0018 EF92      		push r14
 200               	.LCFI18:
 201               		.cfi_def_cfa_offset 15
 202               		.cfi_offset 14, -14
 203 001a FF92      		push r15
 204               	.LCFI19:
 205               		.cfi_def_cfa_offset 16
 206               		.cfi_offset 15, -15
 207 001c 0F93      		push r16
 208               	.LCFI20:
 209               		.cfi_def_cfa_offset 17
 210               		.cfi_offset 16, -16
 211 001e 1F93      		push r17
 212               	.LCFI21:
 213               		.cfi_def_cfa_offset 18
 214               		.cfi_offset 17, -17
 215 0020 CF93      		push r28
 216               	.LCFI22:
 217               		.cfi_def_cfa_offset 19
 218               		.cfi_offset 28, -18
 219 0022 DF93      		push r29
 220               	.LCFI23:
 221               		.cfi_def_cfa_offset 20
 222               		.cfi_offset 29, -19
 223 0024 CDB7      		in r28,__SP_L__
 224 0026 DEB7      		in r29,__SP_H__
 225               	.LCFI24:
 226               		.cfi_def_cfa_register 28
 227 0028 2A97      		sbiw r28,10
 228               	.LCFI25:
 229               		.cfi_def_cfa_offset 30
 230 002a 0FB6      		in __tmp_reg__,__SREG__
 231 002c F894      		cli
 232 002e DEBF      		out __SP_H__,r29
 233 0030 0FBE      		out __SREG__,__tmp_reg__
 234 0032 CDBF      		out __SP_L__,r28
 235               	/* prologue: function */
 236               	/* frame size = 10 */
 237               	/* stack size = 28 */
 238               	.L__stack_usage = 28
 239               	.LVL10:
 109:../../../../tmk_core/common/keyboard.c ****     matrix_scan();
 240               		.loc 1 109 0
 241 0034 0E94 0000 		call matrix_scan
 242               	.LVL11:
 243 0038 90E0      		ldi r25,lo8(matrix_prev.2208)
 244 003a 492E      		mov r4,r25
 245 003c 90E0      		ldi r25,hi8(matrix_prev.2208)
 246 003e 592E      		mov r5,r25
 247 0040 20E0      		ldi r18,lo8(matrix_ghost.2209)
 248 0042 A22E      		mov r10,r18
 249 0044 20E0      		ldi r18,hi8(matrix_ghost.2209)
 250 0046 B22E      		mov r11,r18
 251 0048 E12C      		mov r14,__zero_reg__
 252 004a F12C      		mov r15,__zero_reg__
 253               	.LBB7:
 254               	.LBB8:
 130:../../../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 255               		.loc 1 130 0
 256 004c 2224      		clr r2
 257 004e 2394      		inc r2
 258 0050 312C      		mov r3,__zero_reg__
 259               	.LVL12:
 260               	.L33:
 261 0052 0E2D      		mov r16,r14
 262               	.LBE8:
 111:../../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 263               		.loc 1 111 0
 264 0054 8E2D      		mov r24,r14
 265 0056 0E94 0000 		call matrix_get_row
 266               	.LVL13:
 267 005a 6C01      		movw r12,r24
 268               	.LVL14:
 112:../../../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 269               		.loc 1 112 0
 270 005c F201      		movw r30,r4
 271 005e 8190      		ld r8,Z+
 272 0060 9190      		ld r9,Z+
 273 0062 2F01      		movw r4,r30
 274 0064 8826      		eor r8,r24
 275 0066 9926      		eor r9,r25
 276               	.LVL15:
 113:../../../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 277               		.loc 1 113 0
 278 0068 8114      		cp r8,__zero_reg__
 279 006a 9104      		cpc r9,__zero_reg__
 280 006c 01F4      		brne .+2
 281 006e 00C0      		rjmp .L21
 282               	.LVL16:
 283               	.LBB9:
 284               	.LBB10:
  50:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
 285               		.loc 1 50 0
 286 0070 8E2D      		mov r24,r14
 287 0072 0E94 0000 		call matrix_get_row
 288               	.LVL17:
 289 0076 3C01      		movw r6,r24
 290               	.LVL18:
  52:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
 291               		.loc 1 52 0
 292 0078 0197      		sbiw r24,1
 293 007a 8621      		and r24,r6
 294 007c 9721      		and r25,r7
 295 007e 892B      		or r24,r25
 296 0080 01F4      		brne .+2
 297 0082 00C0      		rjmp .L22
 298 0084 10E0      		ldi r17,0
 299               	.L24:
 300               	.LBB11:
  57:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
 301               		.loc 1 57 0
 302 0086 1013      		cpse r17,r16
 303 0088 00C0      		rjmp .L23
 304               	.L26:
  56:../../../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 305               		.loc 1 56 0
 306 008a 1F5F      		subi r17,lo8(-(1))
 307               	.LVL19:
 308 008c 1830      		cpi r17,lo8(8)
 309 008e 01F4      		brne .L24
 310 0090 00C0      		rjmp .L22
 311               	.LVL20:
 312               	.L23:
  57:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
 313               		.loc 1 57 0
 314 0092 812F      		mov r24,r17
 315 0094 0E94 0000 		call matrix_get_row
 316               	.LVL21:
 317 0098 8621      		and r24,r6
 318 009a 9721      		and r25,r7
 319 009c 892B      		or r24,r25
 320 009e 01F0      		breq .L26
 321 00a0 00C0      		rjmp .L25
 322               	.L37:
 323               	.LBE11:
 324               	.LBE10:
 325               	.LBE9:
 120:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 326               		.loc 1 120 0 discriminator 1
 327 00a2 F501      		movw r30,r10
 328 00a4 8081      		ld r24,Z
 329 00a6 9181      		ldd r25,Z+1
 330 00a8 8C15      		cp r24,r12
 331 00aa 9D05      		cpc r25,r13
 332 00ac 01F0      		breq .L27
 121:../../../../tmk_core/common/keyboard.c ****                     matrix_print();
 333               		.loc 1 121 0
 334 00ae 0E94 0000 		call matrix_print
 335               	.LVL22:
 336               	.L27:
 123:../../../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 337               		.loc 1 123 0
 338 00b2 F501      		movw r30,r10
 339 00b4 D182      		std Z+1,r13
 340 00b6 C082      		st Z,r12
 124:../../../../tmk_core/common/keyboard.c ****                 continue;
 341               		.loc 1 124 0
 342 00b8 00C0      		rjmp .L21
 343               	.L35:
 128:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 344               		.loc 1 128 0 discriminator 1
 345 00ba 0E94 0000 		call matrix_print
 346               	.LVL23:
 347               	.L36:
 348               	.LBB13:
 349               	.LBB12:
  52:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
 350               		.loc 1 52 0
 351 00be 80E0      		ldi r24,0
 352 00c0 90E0      		ldi r25,0
 353               	.LVL24:
 354               	.L31:
 355               	.LBE12:
 356               	.LBE13:
 357               	.LBB14:
 130:../../../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 358               		.loc 1 130 0
 359 00c2 3101      		movw r6,r2
 360 00c4 082E      		mov r0,r24
 361 00c6 00C0      		rjmp 2f
 362               		1:
 363 00c8 660C      		lsl r6
 364 00ca 771C      		rol r7
 365               		2:
 366 00cc 0A94      		dec r0
 367 00ce 02F4      		brpl 1b
 368 00d0 9301      		movw r18,r6
 369 00d2 2821      		and r18,r8
 370 00d4 3921      		and r19,r9
 371 00d6 232B      		or r18,r19
 372 00d8 01F0      		breq .L28
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 373               		.loc 1 131 0
 374 00da 8E83      		std Y+6,r24
 375 00dc 0F83      		std Y+7,r16
 133:../../../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 376               		.loc 1 133 0
 377 00de C620      		and r12,r6
 378 00e0 D720      		and r13,r7
 379               	.LVL25:
 380 00e2 81E0      		ldi r24,lo8(1)
 381 00e4 CD28      		or r12,r13
 382 00e6 01F4      		brne .L29
 383 00e8 80E0      		ldi r24,0
 384               	.L29:
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 385               		.loc 1 131 0
 386 00ea 8887      		std Y+8,r24
 134:../../../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 387               		.loc 1 134 0
 388 00ec 0E94 0000 		call timer_read
 389               	.LVL26:
 390 00f0 8160      		ori r24,1
 131:../../../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 391               		.loc 1 131 0
 392 00f2 782F      		mov r23,r24
 393 00f4 9A87      		std Y+10,r25
 394 00f6 8987      		std Y+9,r24
 395 00f8 4E81      		ldd r20,Y+6
 396 00fa 5F81      		ldd r21,Y+7
 397 00fc 6885      		ldd r22,Y+8
 398 00fe 8A85      		ldd r24,Y+10
 399 0100 0E94 0000 		call action_exec
 400               	.LVL27:
 137:../../../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 401               		.loc 1 137 0
 402 0104 F701      		movw r30,r14
 403 0106 EE0F      		lsl r30
 404 0108 FF1F      		rol r31
 405 010a E050      		subi r30,lo8(-(matrix_prev.2208))
 406 010c F040      		sbci r31,hi8(-(matrix_prev.2208))
 407 010e 8081      		ld r24,Z
 408 0110 9181      		ldd r25,Z+1
 409 0112 8625      		eor r24,r6
 410 0114 9725      		eor r25,r7
 411 0116 9183      		std Z+1,r25
 412 0118 8083      		st Z,r24
 139:../../../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 413               		.loc 1 139 0
 414 011a 00C0      		rjmp .L30
 415               	.LVL28:
 416               	.L28:
 417 011c 0196      		adiw r24,1
 129:../../../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 418               		.loc 1 129 0
 419 011e 8031      		cpi r24,16
 420 0120 9105      		cpc r25,__zero_reg__
 421 0122 01F4      		brne .L31
 422               	.LVL29:
 423               	.L21:
 424 0124 FFEF      		ldi r31,-1
 425 0126 EF1A      		sub r14,r31
 426 0128 FF0A      		sbc r15,r31
 427 012a 82E0      		ldi r24,2
 428 012c A80E      		add r10,r24
 429 012e B11C      		adc r11,__zero_reg__
 430               	.LBE14:
 110:../../../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 431               		.loc 1 110 0
 432 0130 E8E0      		ldi r30,8
 433 0132 EE16      		cp r14,r30
 434 0134 F104      		cpc r15,__zero_reg__
 435 0136 01F0      		breq .+2
 436 0138 00C0      		rjmp .L33
 437               	.LBE7:
 145:../../../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 438               		.loc 1 145 0
 439 013a 8FEF      		ldi r24,lo8(-1)
 440 013c 8983      		std Y+1,r24
 441 013e 8A83      		std Y+2,r24
 442 0140 1B82      		std Y+3,__zero_reg__
 443 0142 0E94 0000 		call timer_read
 444               	.LVL30:
 445 0146 8160      		ori r24,1
 446 0148 782F      		mov r23,r24
 447 014a 9D83      		std Y+5,r25
 448 014c 8C83      		std Y+4,r24
 449 014e 4981      		ldd r20,Y+1
 450 0150 5A81      		ldd r21,Y+2
 451 0152 6B81      		ldd r22,Y+3
 452 0154 8D81      		ldd r24,Y+5
 453 0156 0E94 0000 		call action_exec
 454               	.LVL31:
 455               	.L30:
 167:../../../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 456               		.loc 1 167 0
 457 015a 1091 0000 		lds r17,led_status.2210
 458 015e 0E94 0000 		call host_keyboard_leds
 459               	.LVL32:
 460 0162 1817      		cp r17,r24
 461 0164 01F0      		breq .L19
 168:../../../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 462               		.loc 1 168 0
 463 0166 0E94 0000 		call host_keyboard_leds
 464               	.LVL33:
 465 016a 8093 0000 		sts led_status.2210,r24
 466               	/* epilogue start */
 171:../../../../tmk_core/common/keyboard.c **** }
 467               		.loc 1 171 0
 468 016e 2A96      		adiw r28,10
 469 0170 0FB6      		in __tmp_reg__,__SREG__
 470 0172 F894      		cli
 471 0174 DEBF      		out __SP_H__,r29
 472 0176 0FBE      		out __SREG__,__tmp_reg__
 473 0178 CDBF      		out __SP_L__,r28
 474 017a DF91      		pop r29
 475 017c CF91      		pop r28
 476 017e 1F91      		pop r17
 477 0180 0F91      		pop r16
 478 0182 FF90      		pop r15
 479 0184 EF90      		pop r14
 480 0186 DF90      		pop r13
 481 0188 CF90      		pop r12
 482 018a BF90      		pop r11
 483 018c AF90      		pop r10
 484 018e 9F90      		pop r9
 485 0190 8F90      		pop r8
 486               	.LVL34:
 487 0192 7F90      		pop r7
 488 0194 6F90      		pop r6
 489 0196 5F90      		pop r5
 490 0198 4F90      		pop r4
 491 019a 3F90      		pop r3
 492 019c 2F90      		pop r2
 169:../../../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 493               		.loc 1 169 0
 494 019e 0C94 0000 		jmp keyboard_set_leds
 495               	.LVL35:
 496               	.L22:
 497               	.LBB15:
 126:../../../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 498               		.loc 1 126 0
 499 01a2 F501      		movw r30,r10
 500 01a4 D182      		std Z+1,r13
 501 01a6 C082      		st Z,r12
 128:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 502               		.loc 1 128 0
 503 01a8 8091 0000 		lds r24,debug_config
 504 01ac 81FF      		sbrs r24,1
 505 01ae 00C0      		rjmp .L36
 506 01b0 00C0      		rjmp .L35
 507               	.L25:
 120:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 508               		.loc 1 120 0
 509 01b2 8091 0000 		lds r24,debug_config
 510 01b6 81FD      		sbrc r24,1
 511 01b8 00C0      		rjmp .L37
 512 01ba 00C0      		rjmp .L27
 513               	.LVL36:
 514               	.L19:
 515               	/* epilogue start */
 516               	.LBE15:
 171:../../../../tmk_core/common/keyboard.c **** }
 517               		.loc 1 171 0
 518 01bc 2A96      		adiw r28,10
 519 01be 0FB6      		in __tmp_reg__,__SREG__
 520 01c0 F894      		cli
 521 01c2 DEBF      		out __SP_H__,r29
 522 01c4 0FBE      		out __SREG__,__tmp_reg__
 523 01c6 CDBF      		out __SP_L__,r28
 524 01c8 DF91      		pop r29
 525 01ca CF91      		pop r28
 526 01cc 1F91      		pop r17
 527 01ce 0F91      		pop r16
 528 01d0 FF90      		pop r15
 529 01d2 EF90      		pop r14
 530 01d4 DF90      		pop r13
 531 01d6 CF90      		pop r12
 532 01d8 BF90      		pop r11
 533 01da AF90      		pop r10
 534 01dc 9F90      		pop r9
 535 01de 8F90      		pop r8
 536               	.LVL37:
 537 01e0 7F90      		pop r7
 538 01e2 6F90      		pop r6
 539 01e4 5F90      		pop r5
 540 01e6 4F90      		pop r4
 541 01e8 3F90      		pop r3
 542 01ea 2F90      		pop r2
 543 01ec 0895      		ret
 544               		.cfi_endproc
 545               	.LFE8:
 547               		.section	.bss.matrix_prev.2208,"aw",@nobits
 550               	matrix_prev.2208:
 551 0000 0000 0000 		.zero	16
 551      0000 0000 
 551      0000 0000 
 551      0000 0000 
 552               		.section	.bss.matrix_ghost.2209,"aw",@nobits
 555               	matrix_ghost.2209:
 556 0000 0000 0000 		.zero	16
 556      0000 0000 
 556      0000 0000 
 556      0000 0000 
 557               		.section	.bss.led_status.2210,"aw",@nobits
 560               	led_status.2210:
 561 0000 00        		.zero	1
 562               		.section	.progmem.data.__c.2230,"a",@progbits
 565               	__c.2230:
 566 0000 6B65 7962 		.string	"keyboard_set_led: "
 566      6F61 7264 
 566      5F73 6574 
 566      5F6C 6564 
 566      3A20 00
 567               		.section	.progmem.data.__c.2232,"a",@progbits
 570               	__c.2232:
 571 0000 2530 3258 		.string	"%02X"
 571      00
 572               		.section	.progmem.data.__c.2234,"a",@progbits
 575               	__c.2234:
 576 0000 0A00      		.string	"\n"
 577               		.text
 578               	.Letext0:
 579               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 580               		.file 3 "../../../../tmk_core/common/keyboard.h"
 581               		.file 4 "../../../../tmk_core/common/matrix.h"
 582               		.file 5 "../../../../tmk_core/common/debug.h"
 583               		.file 6 "../../../../tmk_core/common/timer.h"
 584               		.file 7 "../../../../tmk_core/common/avr/xprintf.h"
 585               		.file 8 "../../../../tmk_core/common/led.h"
 586               		.file 9 "../../../../tmk_core/common/action.h"
 587               		.file 10 "../../../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/cct4wcqj.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cct4wcqj.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cct4wcqj.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cct4wcqj.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cct4wcqj.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cct4wcqj.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cct4wcqj.s:14     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cct4wcqj.s:30     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/cct4wcqj.s:47     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/cct4wcqj.s:67     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
     /tmp/cct4wcqj.s:565    .progmem.data.__c.2230:0000000000000000 __c.2230
     /tmp/cct4wcqj.s:570    .progmem.data.__c.2232:0000000000000000 __c.2232
     /tmp/cct4wcqj.s:575    .progmem.data.__c.2234:0000000000000000 __c.2234
     /tmp/cct4wcqj.s:147    .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/cct4wcqj.s:550    .bss.matrix_prev.2208:0000000000000000 matrix_prev.2208
     /tmp/cct4wcqj.s:555    .bss.matrix_ghost.2209:0000000000000000 matrix_ghost.2209
     /tmp/cct4wcqj.s:560    .bss.led_status.2210:0000000000000000 led_status.2210

UNDEFINED SYMBOLS
timer_init
matrix_init
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
host_keyboard_leds
__do_clear_bss
