   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  12               	.global	CALLBACK_USB_GetDescriptor
  14               	CALLBACK_USB_GetDescriptor:
  15               	.LFB100:
  16               		.file 1 "../../../../tmk_core/protocol/lufa/descriptor.c"
   1:../../../../tmk_core/protocol/lufa/descriptor.c **** /* 
   2:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:../../../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../../../tmk_core/protocol/lufa/descriptor.c ****  */
   7:../../../../tmk_core/protocol/lufa/descriptor.c **** 
   8:../../../../tmk_core/protocol/lufa/descriptor.c **** /*
   9:../../../../tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:../../../../tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  12:../../../../tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../../../tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:../../../../tmk_core/protocol/lufa/descriptor.c **** */
  15:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  16:../../../../tmk_core/protocol/lufa/descriptor.c **** /*
  17:../../../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  20:../../../../tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../../../tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:../../../../tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:../../../../tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:../../../../tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../../../tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:../../../../tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:../../../../tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  29:../../../../tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:../../../../tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:../../../../tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:../../../../tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:../../../../tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../../../tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:../../../../tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:../../../../tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:../../../../tmk_core/protocol/lufa/descriptor.c **** */
  38:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  39:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  43:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  44:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:../../../../tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  49:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  61:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  65:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  75:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00),
  77:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Usage ID 0x00-0xFF */
  78:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF), /* needs 16 bit to indicate positive value */
  80:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:../../../../tmk_core/protocol/lufa/descriptor.c **** };
  85:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  86:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  89:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  95:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 107:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 116:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 123:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 131:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 134:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 135:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 136:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 139:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 144:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* System Power Down */
 146:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 152:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 165:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 166:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 167:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 170:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 176:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 182:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 187:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 188:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 189:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 192:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 204:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 214:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 224:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 225:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 226:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 231:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 233:../../../../tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:../../../../tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 238:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 240:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:../../../../tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 245:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:../../../../tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 249:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 251:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 252:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 257:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Config =
 258:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 259:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 261:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 264:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 267:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 269:../../../../tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(100)
 270:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 271:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 272:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 273:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 274:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 275:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 277:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 279:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 282:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 284:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 288:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 290:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 291:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 293:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 295:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 301:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 302:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 304:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 306:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 311:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 312:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 313:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 314:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 315:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 318:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 320:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 323:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 325:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 329:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 331:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 332:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 334:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 336:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 342:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 343:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 345:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 347:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 352:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 353:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 354:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 355:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Extra
 356:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 357:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 360:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 362:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 365:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 367:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 371:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 373:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 374:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 376:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 378:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 384:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 385:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 387:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 389:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 394:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 395:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 396:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 397:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Console
 398:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 399:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 402:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 404:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 407:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 409:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 413:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 415:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 416:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 417:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 418:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 420:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 426:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 427:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 429:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 431:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 436:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 437:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 439:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 441:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 446:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 447:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 448:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 449:../../../../tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 450:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 451:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 454:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 456:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 459:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 461:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 465:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 467:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 468:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 470:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 472:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 478:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 479:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 481:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 483:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 488:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 489:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 490:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 491:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 492:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 493:../../../../tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 494:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 495:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 496:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 497:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 498:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 499:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 500:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 501:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 502:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 503:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 504:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 505:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 506:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 507:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 508:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 509:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 510:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 511:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 512:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 513:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 514:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 515:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 516:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 517:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 518:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 519:../../../../tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 520:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 521:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 522:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 523:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 524:../../../../tmk_core/protocol/lufa/descriptor.c ****  */
 525:../../../../tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 526:../../../../tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 527:../../../../tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 528:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  17               		.loc 1 528 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
 529:../../../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
 530:../../../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 531:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 532:../../../../tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 533:../../../../tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 534:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 535:../../../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
 536:../../../../tmk_core/protocol/lufa/descriptor.c ****     {
 537:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 538:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 539:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 540:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 541:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 542:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 543:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 544:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 545:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 546:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
 547:../../../../tmk_core/protocol/lufa/descriptor.c ****             {
 548:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 549:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 550:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 551:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 552:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 553:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 554:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 555:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 556:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 557:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 558:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 559:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 560:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 561:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 562:../../../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 563:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 564:../../../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 565:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 566:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 567:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 568:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 569:../../../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 570:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 571:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 572:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 573:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 574:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 575:../../../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 576:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 577:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 578:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 579:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 580:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 581:../../../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 582:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 583:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 584:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 585:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 586:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 587:../../../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 588:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 589:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 590:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 591:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 592:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 593:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 594:../../../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 595:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 596:../../../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 597:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 598:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 599:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 600:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 601:../../../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 602:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 603:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 604:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 605:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 606:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 607:../../../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 608:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 609:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 610:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 611:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 612:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 613:../../../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 614:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 615:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 616:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 617:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 618:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 619:../../../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 620:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 621:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 622:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 623:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 624:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 625:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 626:../../../../tmk_core/protocol/lufa/descriptor.c ****     }
 627:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 628:../../../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 629:../../../../tmk_core/protocol/lufa/descriptor.c ****     return Size;
 630:../../../../tmk_core/protocol/lufa/descriptor.c **** }
  24               		.loc 1 630 0
  25 0000 292F      		mov r18,r25
  26 0002 3327      		clr r19
 535:../../../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  27               		.loc 1 535 0
  28 0004 2330      		cpi r18,3
  29 0006 3105      		cpc r19,__zero_reg__
  30 0008 01F0      		breq .L5
  31 000a 04F4      		brge .L8
  32 000c 2130      		cpi r18,1
  33 000e 3105      		cpc r19,__zero_reg__
  34 0010 01F4      		brne .+2
  35 0012 00C0      		rjmp .L12
  36 0014 2230      		cpi r18,2
  37 0016 3105      		cpc r19,__zero_reg__
  38 0018 01F0      		breq .+2
  39 001a 00C0      		rjmp .L15
  40 001c 00C0      		rjmp .L4
  41               	.L8:
  42 001e 2132      		cpi r18,33
  43 0020 3105      		cpc r19,__zero_reg__
  44 0022 01F0      		breq .L6
  45 0024 2232      		cpi r18,34
  46 0026 3105      		cpc r19,__zero_reg__
  47 0028 01F0      		breq .L7
  48 002a 00C0      		rjmp .L15
  49               	.L4:
  50               	.LVL1:
 543:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  51               		.loc 1 543 0
  52 002c EBE3      		ldi r30,lo8(59)
  53 002e F0E0      		ldi r31,0
 542:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  54               		.loc 1 542 0
  55 0030 80E0      		ldi r24,lo8(ConfigurationDescriptor)
  56 0032 90E0      		ldi r25,hi8(ConfigurationDescriptor)
  57               	.LVL2:
 544:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
  58               		.loc 1 544 0
  59 0034 00C0      		rjmp .L3
  60               	.LVL3:
  61               	.L5:
  62               		.loc 1 630 0
  63 0036 9927      		clr r25
  64               	.LVL4:
 546:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  65               		.loc 1 546 0
  66 0038 8130      		cpi r24,1
  67 003a 9105      		cpc r25,__zero_reg__
  68 003c 01F0      		breq .L10
  69 003e 8230      		cpi r24,2
  70 0040 9105      		cpc r25,__zero_reg__
  71 0042 01F0      		breq .L11
  72 0044 892B      		or r24,r25
  73 0046 01F0      		breq .+2
  74 0048 00C0      		rjmp .L15
  75               	.LVL5:
  76               	.LBB2:
 550:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  77               		.loc 1 550 0
  78 004a E0E0      		ldi r30,lo8(LanguageString)
  79 004c F0E0      		ldi r31,hi8(LanguageString)
  80               	/* #APP */
  81               	 ;  550 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
  82 004e E491      		lpm r30, Z
  83               		
  84               	 ;  0 "" 2
  85               	.LVL6:
  86               	/* #NOAPP */
  87               	.LBE2:
  88 0050 F0E0      		ldi r31,0
  89               	.LVL7:
 549:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
  90               		.loc 1 549 0
  91 0052 80E0      		ldi r24,lo8(LanguageString)
  92 0054 90E0      		ldi r25,hi8(LanguageString)
 551:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
  93               		.loc 1 551 0
  94 0056 00C0      		rjmp .L3
  95               	.LVL8:
  96               	.L10:
  97               	.LBB3:
 554:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  98               		.loc 1 554 0
  99 0058 E0E0      		ldi r30,lo8(ManufacturerString)
 100 005a F0E0      		ldi r31,hi8(ManufacturerString)
 101               	/* #APP */
 102               	 ;  554 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
 103 005c E491      		lpm r30, Z
 104               		
 105               	 ;  0 "" 2
 106               	.LVL9:
 107               	/* #NOAPP */
 108               	.LBE3:
 109 005e F0E0      		ldi r31,0
 110               	.LVL10:
 553:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 111               		.loc 1 553 0
 112 0060 80E0      		ldi r24,lo8(ManufacturerString)
 113 0062 90E0      		ldi r25,hi8(ManufacturerString)
 555:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 114               		.loc 1 555 0
 115 0064 00C0      		rjmp .L3
 116               	.LVL11:
 117               	.L11:
 118               	.LBB4:
 558:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 119               		.loc 1 558 0
 120 0066 E0E0      		ldi r30,lo8(ProductString)
 121 0068 F0E0      		ldi r31,hi8(ProductString)
 122               	/* #APP */
 123               	 ;  558 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
 124 006a E491      		lpm r30, Z
 125               		
 126               	 ;  0 "" 2
 127               	.LVL12:
 128               	/* #NOAPP */
 129               	.LBE4:
 130 006c F0E0      		ldi r31,0
 131               	.LVL13:
 557:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 132               		.loc 1 557 0
 133 006e 80E0      		ldi r24,lo8(ProductString)
 134 0070 90E0      		ldi r25,hi8(ProductString)
 559:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 135               		.loc 1 559 0
 136 0072 00C0      		rjmp .L3
 137               	.LVL14:
 138               	.L6:
 139 0074 6230      		cpi r22,lo8(2)
 140 0076 00F4      		brsh .L15
 141 0078 E62F      		mov r30,r22
 142 007a F0E0      		ldi r31,0
 143 007c EE0F      		lsl r30
 144 007e FF1F      		rol r31
 145 0080 E050      		subi r30,lo8(-(CSWTCH.2))
 146 0082 F040      		sbci r31,hi8(-(CSWTCH.2))
 147 0084 8081      		ld r24,Z
 148 0086 9181      		ldd r25,Z+1
 149               	.LVL15:
 150 0088 E9E0      		ldi r30,lo8(9)
 151 008a F0E0      		ldi r31,0
 152 008c 00C0      		rjmp .L3
 153               	.LVL16:
 154               	.L7:
 155 008e 6230      		cpi r22,lo8(2)
 156 0090 00F4      		brsh .L15
 157 0092 E62F      		mov r30,r22
 158 0094 F0E0      		ldi r31,0
 159 0096 DF01      		movw r26,r30
 160 0098 AA0F      		lsl r26
 161 009a BB1F      		rol r27
 162               	.LVL17:
 163 009c A050      		subi r26,lo8(-(CSWTCH.4))
 164 009e B040      		sbci r27,hi8(-(CSWTCH.4))
 165 00a0 8D91      		ld r24,X+
 166 00a2 9C91      		ld r25,X
 167               		.loc 1 630 0
 168 00a4 E050      		subi r30,lo8(-(CSWTCH.5))
 169 00a6 F040      		sbci r31,hi8(-(CSWTCH.5))
 170 00a8 E081      		ld r30,Z
 171 00aa F0E0      		ldi r31,0
 172 00ac 00C0      		rjmp .L3
 173               	.LVL18:
 174               	.L12:
 539:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 175               		.loc 1 539 0
 176 00ae E2E1      		ldi r30,lo8(18)
 177 00b0 F0E0      		ldi r31,0
 538:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 178               		.loc 1 538 0
 179 00b2 80E0      		ldi r24,lo8(DeviceDescriptor)
 180 00b4 90E0      		ldi r25,hi8(DeviceDescriptor)
 181               	.LVL19:
 182 00b6 00C0      		rjmp .L3
 183               	.L15:
 184 00b8 E0E0      		ldi r30,0
 185 00ba F0E0      		ldi r31,0
 186 00bc 80E0      		ldi r24,0
 187 00be 90E0      		ldi r25,0
 188               	.LVL20:
 189               	.L3:
 628:../../../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 190               		.loc 1 628 0
 191 00c0 DA01      		movw r26,r20
 192 00c2 8D93      		st X+,r24
 193 00c4 9C93      		st X,r25
 194               		.loc 1 630 0
 195 00c6 CF01      		movw r24,r30
 196               	.LVL21:
 197 00c8 0895      		ret
 198               		.cfi_endproc
 199               	.LFE100:
 201               	.global	ProductString
 202               		.section	.progmem.data.ProductString,"a",@progbits
 205               	ProductString:
 206 0000 1A        		.byte	26
 207 0001 03        		.byte	3
 208 0002 4D00      		.string	"M"
 209 0004 6F00      		.string	"o"
 210 0006 6400      		.string	"d"
 211 0008 6500      		.string	"e"
 212 000a 6C00      		.string	"l"
 213 000c 5F00      		.string	"_"
 214 000e 4D00      		.string	"M"
 215 0010 5F00      		.string	"_"
 216 0012 5600      		.string	"V"
 217 0014 3100      		.string	"1"
 218 0016 2E00      		.string	"."
 219 0018 3000      		.string	"0"
 220 001a 00        		.string	""
 221 001b 00        		.string	""
 222               	.global	ManufacturerString
 223               		.section	.progmem.data.ManufacturerString,"a",@progbits
 226               	ManufacturerString:
 227 0000 1A        		.byte	26
 228 0001 03        		.byte	3
 229 0002 5000      		.string	"P"
 230 0004 6800      		.string	"h"
 231 0006 6F00      		.string	"o"
 232 0008 7300      		.string	"s"
 233 000a 7000      		.string	"p"
 234 000c 6800      		.string	"h"
 235 000e 6F00      		.string	"o"
 236 0010 7200      		.string	"r"
 237 0012 4700      		.string	"G"
 238 0014 6C00      		.string	"l"
 239 0016 6F00      		.string	"o"
 240 0018 7700      		.string	"w"
 241 001a 00        		.string	""
 242 001b 00        		.string	""
 243               	.global	LanguageString
 244               		.section	.progmem.data.LanguageString,"a",@progbits
 247               	LanguageString:
 248 0000 04        		.byte	4
 249 0001 03        		.byte	3
 250 0002 0904      		.word	1033
 251               	.global	ConfigurationDescriptor
 252               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 255               	ConfigurationDescriptor:
 256 0000 09        		.byte	9
 257 0001 02        		.byte	2
 258 0002 3B00      		.word	59
 259 0004 02        		.byte	2
 260 0005 01        		.byte	1
 261 0006 00        		.byte	0
 262 0007 A0        		.byte	-96
 263 0008 32        		.byte	50
 264 0009 09        		.byte	9
 265 000a 04        		.byte	4
 266 000b 00        		.byte	0
 267 000c 00        		.byte	0
 268 000d 01        		.byte	1
 269 000e 03        		.byte	3
 270 000f 01        		.byte	1
 271 0010 01        		.byte	1
 272 0011 00        		.byte	0
 273 0012 09        		.byte	9
 274 0013 21        		.byte	33
 275 0014 1101      		.word	273
 276 0016 00        		.byte	0
 277 0017 01        		.byte	1
 278 0018 22        		.byte	34
 279 0019 4000      		.word	64
 280 001b 07        		.byte	7
 281 001c 05        		.byte	5
 282 001d 81        		.byte	-127
 283 001e 03        		.byte	3
 284 001f 0800      		.word	8
 285 0021 0A        		.byte	10
 286 0022 09        		.byte	9
 287 0023 04        		.byte	4
 288 0024 01        		.byte	1
 289 0025 00        		.byte	0
 290 0026 01        		.byte	1
 291 0027 03        		.byte	3
 292 0028 00        		.byte	0
 293 0029 00        		.byte	0
 294 002a 00        		.byte	0
 295 002b 09        		.byte	9
 296 002c 21        		.byte	33
 297 002d 1101      		.word	273
 298 002f 00        		.byte	0
 299 0030 01        		.byte	1
 300 0031 22        		.byte	34
 301 0032 3600      		.word	54
 302 0034 07        		.byte	7
 303 0035 05        		.byte	5
 304 0036 82        		.byte	-126
 305 0037 03        		.byte	3
 306 0038 0800      		.word	8
 307 003a 0A        		.byte	10
 308               	.global	DeviceDescriptor
 309               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 312               	DeviceDescriptor:
 313 0000 12        		.byte	18
 314 0001 01        		.byte	1
 315 0002 1001      		.word	272
 316 0004 00        		.byte	0
 317 0005 00        		.byte	0
 318 0006 00        		.byte	0
 319 0007 08        		.byte	8
 320 0008 EDFE      		.word	-275
 321 000a 6060      		.word	24672
 322 000c 0100      		.word	1
 323 000e 01        		.byte	1
 324 000f 02        		.byte	2
 325 0010 00        		.byte	0
 326 0011 01        		.byte	1
 327               	.global	ExtrakeyReport
 328               		.section	.progmem.data.ExtrakeyReport,"a",@progbits
 331               	ExtrakeyReport:
 332 0000 05        		.byte	5
 333 0001 01        		.byte	1
 334 0002 09        		.byte	9
 335 0003 80        		.byte	-128
 336 0004 A1        		.byte	-95
 337 0005 01        		.byte	1
 338 0006 85        		.byte	-123
 339 0007 02        		.byte	2
 340 0008 16        		.byte	22
 341 0009 01        		.byte	1
 342 000a 00        		.byte	0
 343 000b 26        		.byte	38
 344 000c B7        		.byte	-73
 345 000d 00        		.byte	0
 346 000e 1A        		.byte	26
 347 000f 01        		.byte	1
 348 0010 00        		.byte	0
 349 0011 2A        		.byte	42
 350 0012 B7        		.byte	-73
 351 0013 00        		.byte	0
 352 0014 75        		.byte	117
 353 0015 10        		.byte	16
 354 0016 95        		.byte	-107
 355 0017 01        		.byte	1
 356 0018 81        		.byte	-127
 357 0019 00        		.byte	0
 358 001a C0        		.byte	-64
 359 001b 05        		.byte	5
 360 001c 0C        		.byte	12
 361 001d 09        		.byte	9
 362 001e 01        		.byte	1
 363 001f A1        		.byte	-95
 364 0020 01        		.byte	1
 365 0021 85        		.byte	-123
 366 0022 03        		.byte	3
 367 0023 16        		.byte	22
 368 0024 01        		.byte	1
 369 0025 00        		.byte	0
 370 0026 26        		.byte	38
 371 0027 9C        		.byte	-100
 372 0028 02        		.byte	2
 373 0029 1A        		.byte	26
 374 002a 01        		.byte	1
 375 002b 00        		.byte	0
 376 002c 2A        		.byte	42
 377 002d 9C        		.byte	-100
 378 002e 02        		.byte	2
 379 002f 75        		.byte	117
 380 0030 10        		.byte	16
 381 0031 95        		.byte	-107
 382 0032 01        		.byte	1
 383 0033 81        		.byte	-127
 384 0034 00        		.byte	0
 385 0035 C0        		.byte	-64
 386               	.global	KeyboardReport
 387               		.section	.progmem.data.KeyboardReport,"a",@progbits
 390               	KeyboardReport:
 391 0000 05        		.byte	5
 392 0001 01        		.byte	1
 393 0002 09        		.byte	9
 394 0003 06        		.byte	6
 395 0004 A1        		.byte	-95
 396 0005 01        		.byte	1
 397 0006 05        		.byte	5
 398 0007 07        		.byte	7
 399 0008 19        		.byte	25
 400 0009 E0        		.byte	-32
 401 000a 29        		.byte	41
 402 000b E7        		.byte	-25
 403 000c 15        		.byte	21
 404 000d 00        		.byte	0
 405 000e 25        		.byte	37
 406 000f 01        		.byte	1
 407 0010 95        		.byte	-107
 408 0011 08        		.byte	8
 409 0012 75        		.byte	117
 410 0013 01        		.byte	1
 411 0014 81        		.byte	-127
 412 0015 02        		.byte	2
 413 0016 95        		.byte	-107
 414 0017 01        		.byte	1
 415 0018 75        		.byte	117
 416 0019 08        		.byte	8
 417 001a 81        		.byte	-127
 418 001b 01        		.byte	1
 419 001c 05        		.byte	5
 420 001d 08        		.byte	8
 421 001e 19        		.byte	25
 422 001f 01        		.byte	1
 423 0020 29        		.byte	41
 424 0021 05        		.byte	5
 425 0022 95        		.byte	-107
 426 0023 05        		.byte	5
 427 0024 75        		.byte	117
 428 0025 01        		.byte	1
 429 0026 91        		.byte	-111
 430 0027 02        		.byte	2
 431 0028 95        		.byte	-107
 432 0029 01        		.byte	1
 433 002a 75        		.byte	117
 434 002b 03        		.byte	3
 435 002c 91        		.byte	-111
 436 002d 01        		.byte	1
 437 002e 05        		.byte	5
 438 002f 07        		.byte	7
 439 0030 19        		.byte	25
 440 0031 00        		.byte	0
 441 0032 29        		.byte	41
 442 0033 FF        		.byte	-1
 443 0034 15        		.byte	21
 444 0035 00        		.byte	0
 445 0036 26        		.byte	38
 446 0037 FF        		.byte	-1
 447 0038 00        		.byte	0
 448 0039 95        		.byte	-107
 449 003a 06        		.byte	6
 450 003b 75        		.byte	117
 451 003c 08        		.byte	8
 452 003d 81        		.byte	-127
 453 003e 00        		.byte	0
 454 003f C0        		.byte	-64
 455               		.section	.rodata.CSWTCH.2,"a",@progbits
 458               	CSWTCH.2:
 459 0000 0000      		.word	ConfigurationDescriptor+18
 460 0002 0000      		.word	ConfigurationDescriptor+43
 461               		.section	.rodata.CSWTCH.4,"a",@progbits
 464               	CSWTCH.4:
 465 0000 0000      		.word	KeyboardReport
 466 0002 0000      		.word	ExtrakeyReport
 467               		.section	.rodata.CSWTCH.5,"a",@progbits
 470               	CSWTCH.5:
 471 0000 40        		.byte	64
 472 0001 36        		.byte	54
 473               		.text
 474               	.Letext0:
 475               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 476               		.file 3 "/usr/lib64/gcc/avr/4.7.1/include/stddef.h"
 477               		.file 4 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.
 478               		.file 5 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDCl
 479               		.file 6 "../../../../tmk_core/protocol/lufa/descriptor.h"
 480               		.file 7 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 descriptor.c
     /tmp/ccgfBLpJ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccgfBLpJ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccgfBLpJ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccgfBLpJ.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccgfBLpJ.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccgfBLpJ.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccgfBLpJ.s:14     .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor
     /tmp/ccgfBLpJ.s:255    .progmem.data.ConfigurationDescriptor:0000000000000000 ConfigurationDescriptor
     /tmp/ccgfBLpJ.s:247    .progmem.data.LanguageString:0000000000000000 LanguageString
     /tmp/ccgfBLpJ.s:226    .progmem.data.ManufacturerString:0000000000000000 ManufacturerString
     /tmp/ccgfBLpJ.s:205    .progmem.data.ProductString:0000000000000000 ProductString
     /tmp/ccgfBLpJ.s:458    .rodata.CSWTCH.2:0000000000000000 CSWTCH.2
     /tmp/ccgfBLpJ.s:464    .rodata.CSWTCH.4:0000000000000000 CSWTCH.4
     /tmp/ccgfBLpJ.s:470    .rodata.CSWTCH.5:0000000000000000 CSWTCH.5
     /tmp/ccgfBLpJ.s:312    .progmem.data.DeviceDescriptor:0000000000000000 DeviceDescriptor
     /tmp/ccgfBLpJ.s:331    .progmem.data.ExtrakeyReport:0000000000000000 ExtrakeyReport
     /tmp/ccgfBLpJ.s:390    .progmem.data.KeyboardReport:0000000000000000 KeyboardReport

UNDEFINED SYMBOLS
__do_copy_data
