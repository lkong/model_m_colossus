   1               		.file	"led.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.led_set,"ax",@progbits
  12               	.global	led_set
  14               	led_set:
  15               	.LFB0:
  16               		.file 1 "led.c"
   1:led.c         **** /*
   2:led.c         **** Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:led.c         **** 
   4:led.c         **** This program is free software: you can redistribute it and/or modify
   5:led.c         **** it under the terms of the GNU General Public License as published by
   6:led.c         **** the Free Software Foundation, either version 2 of the License, or
   7:led.c         **** (at your option) any later version.
   8:led.c         **** 
   9:led.c         **** This program is distributed in the hope that it will be useful,
  10:led.c         **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:led.c         **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:led.c         **** GNU General Public License for more details.
  13:led.c         **** 
  14:led.c         **** You should have received a copy of the GNU General Public License
  15:led.c         **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:led.c         **** */
  17:led.c         **** 
  18:led.c         **** #include <avr/io.h>
  19:led.c         **** #include "stdint.h"
  20:led.c         **** #include "led.h"
  21:led.c         ****     
  22:led.c         **** /* LED pin configuration defined in config.h
  23:led.c         ****  *
  24:led.c         ****  * Wiring: Port (Sinking GND) <-- Resistor & LED <-- Vcc
  25:led.c         ****  * 
  26:led.c         ****  */
  27:led.c         **** 
  28:led.c         ****  void led_set(uint8_t usb_led)
  29:led.c         **** {
  17               		.loc 1 29 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  30:led.c         ****     DDR_CAPSLCK |= (1<<BIT_CAPSLCK);
  24               		.loc 1 30 0
  25 0000 229A      		sbi 0x4,2
  31:led.c         ****     DDR_NUMLCK |= (1<<BIT_NUMLCK);
  26               		.loc 1 31 0
  27 0002 209A      		sbi 0x4,0
  32:led.c         ****     DDR_SCROLLLCK |= (1<<BIT_SCROLLLCK);
  28               		.loc 1 32 0
  29 0004 239A      		sbi 0x4,3
  33:led.c         **** 
  34:led.c         ****     if (usb_led & (1<<USB_LED_CAPS_LOCK))
  30               		.loc 1 34 0
  31 0006 81FF      		sbrs r24,1
  32 0008 00C0      		rjmp .L2
  35:led.c         ****     {
  36:led.c         ****         
  37:led.c         ****         PORT_CAPSLCK &= ~(1<<BIT_CAPSLCK);
  33               		.loc 1 37 0
  34 000a 2A98      		cbi 0x5,2
  35 000c 00C0      		rjmp .L3
  36               	.L2:
  38:led.c         ****     }
  39:led.c         ****     else
  40:led.c         ****     {
  41:led.c         ****         PORT_CAPSLCK |= (1<<BIT_CAPSLCK);
  37               		.loc 1 41 0
  38 000e 2A9A      		sbi 0x5,2
  39               	.L3:
  42:led.c         ****     }
  43:led.c         **** 
  44:led.c         ****     if (usb_led & (1<<USB_LED_NUM_LOCK))
  40               		.loc 1 44 0
  41 0010 80FF      		sbrs r24,0
  42 0012 00C0      		rjmp .L4
  45:led.c         ****     {
  46:led.c         ****         PORT_NUMLCK &= ~(1<<BIT_NUMLCK);
  43               		.loc 1 46 0
  44 0014 2898      		cbi 0x5,0
  45 0016 00C0      		rjmp .L5
  46               	.L4:
  47:led.c         ****     }
  48:led.c         ****     else
  49:led.c         ****     {
  50:led.c         ****         PORT_NUMLCK |= (1<<BIT_NUMLCK);
  47               		.loc 1 50 0
  48 0018 289A      		sbi 0x5,0
  49               	.L5:
  51:led.c         ****     }
  52:led.c         **** 
  53:led.c         ****     if (usb_led & (1<<USB_LED_SCROLL_LOCK))
  50               		.loc 1 53 0
  51 001a 82FF      		sbrs r24,2
  52 001c 00C0      		rjmp .L6
  54:led.c         ****     {
  55:led.c         ****         PORT_SCROLLLCK &= ~(1<<BIT_SCROLLLCK);
  53               		.loc 1 55 0
  54 001e 2B98      		cbi 0x5,3
  55 0020 0895      		ret
  56               	.L6:
  56:led.c         ****     }
  57:led.c         ****     else
  58:led.c         ****     {
  59:led.c         ****         PORT_SCROLLLCK |= (1<<BIT_SCROLLLCK);
  57               		.loc 1 59 0
  58 0022 2B9A      		sbi 0x5,3
  59 0024 0895      		ret
  60               		.cfi_endproc
  61               	.LFE0:
  63               		.text
  64               	.Letext0:
  65               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 led.c
     /tmp/cc5VB4ZU.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc5VB4ZU.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc5VB4ZU.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc5VB4ZU.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc5VB4ZU.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc5VB4ZU.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc5VB4ZU.s:14     .text.led_set:0000000000000000 led_set

NO UNDEFINED SYMBOLS
