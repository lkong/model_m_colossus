   1               		.file	"keymap_m.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.action_function,"ax",@progbits
  12               	.global	action_function
  14               	action_function:
  15               	.LFB4:
  16               		.file 1 "keymap_m.c"
   1:keymap_m.c    **** #include "keymap_common.h"
   2:keymap_m.c    **** #include "keyboard.h"
   3:keymap_m.c    **** #include "action_layer.h"
   4:keymap_m.c    **** #include "bootloader.h"
   5:keymap_m.c    **** 
   6:keymap_m.c    **** const uint8_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
   7:keymap_m.c    ****     /* Keymap 0: Default Layer
   8:keymap_m.c    ****      * ,-------------------------------------------------------------------------------------------
   9:keymap_m.c    ****      * |Esc| | F1| F2| F3| F4|  |F5| F6| F7| F8|  |F9| F10| F11| F12|   PSCR|  SCRL|  PAUS|        
  10:keymap_m.c    ****      * |-------------------------------------------------------------------------------------------
  11:keymap_m.c    ****      * |-------------------------------------------------------------------------------------------
  12:keymap_m.c    ****      * |`  |  1|  2|  3|  4|  5|  6|  7|  8|  9|  0|  -|  =| * Bspc|     INS|  HOME|  PGUP|    NLCK
  13:keymap_m.c    ****      * |-------------------------------------------------------------------------------------------
  14:keymap_m.c    ****      * |Tab  |  Q|  W|  E|  R|  T|  Y|  U|  I|  O|  P|  [|  ]|    \|     DEL|   END|  PGDN|     P7|
  15:keymap_m.c    ****      * |-------------------------------------------------------------------------------------------
  16:keymap_m.c    ****      * |Caps  |  A|  S|  D|  F|  G|  H|  J|  K|  L|  ;|  '|* Return|                            P4|
  17:keymap_m.c    ****      * |-------------------------------------------------------------------------------------------
  18:keymap_m.c    ****      * |Shift * |  Z|  X|  C|  V|  B|  N|  M|  ,|  .|  /| *   Shift|            UP |            P1|
  19:keymap_m.c    ****      * |-------------------------------------------------------------------------------------------
  20:keymap_m.c    ****      * |Ctrl|    |Alt |            Space          |Alt |    |Ctrl  |    LEFT| DOWN | RIGHT|    | * 
  21:keymap_m.c    ****      * `-------------------------------------------------------------------------------------------
  22:keymap_m.c    ****      */
  23:keymap_m.c    ****     KEYMAP( \
  24:keymap_m.c    ****         ESC,        F1,  F2,  F3,  F4,  F5,  F6,  F7,  F8,   F9,   F10,   F11,   F12,         PSCR,
  25:keymap_m.c    ****         GRV,  1,    2,   3,   4,   5,   6,   7,   8,   9,    0,    MINS,  EQL,   BSLS, BSPC,  INS, 
  26:keymap_m.c    ****         TAB,  Q,    W,   E,   R,   T,   Y,   U,   I,   O,    P,    LBRC,  RBRC,  BSLS,        DEL, 
  27:keymap_m.c    ****         FN0,  A,    S,   D,   F,   G,   H,   J,   K,   L,    SCLN, QUOT,  BSLS,  ENT,              
  28:keymap_m.c    ****         LSFT, NUBS, Z,   X,   C,   V,   B,   N,   M,   COMM, DOT,  SLSH,  RSFT,  RSFT,             
  29:keymap_m.c    ****         LCTL,       LALT,                    SPC,                  RALT,         RCTL,        LEFT,
  30:keymap_m.c    ****         
  31:keymap_m.c    ****     KEYMAP( \
  32:keymap_m.c    ****         TRNS,       TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS, TRNS, TRNS,  TRNS,  TRNS,        TRNS,
  33:keymap_m.c    ****         TRNS, TRNS, TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS, TRNS, TRNS,  TRNS,  TRNS, TRNS,  TRNS,
  34:keymap_m.c    ****         TRNS, TRNS, TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS, TRNS, TRNS,  TRNS,  TRNS,        TRNS,
  35:keymap_m.c    ****         TRNS, TRNS, TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS, TRNS, TRNS,  TRNS,  TRNS,             
  36:keymap_m.c    ****         TRNS, TRNS, TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS, TRNS, TRNS,  TRNS,  TRNS,             
  37:keymap_m.c    ****         TRNS,       TRNS,                    TRNS,                 TRNS,         TRNS,        TRNS,
  38:keymap_m.c    ****          
  39:keymap_m.c    **** };
  40:keymap_m.c    **** 
  41:keymap_m.c    **** /*
  42:keymap_m.c    **** * user defined action function
  43:keymap_m.c    **** */
  44:keymap_m.c    **** enum function_id {
  45:keymap_m.c    ****     PAUS_BOOT, // Caps Lock + Right Shift + Pause = DFU
  46:keymap_m.c    **** };
  47:keymap_m.c    **** 
  48:keymap_m.c    **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
  49:keymap_m.c    **** {
  17               		.loc 1 49 0
  18               		.cfi_startproc
  19               	.LVL0:
  20 0000 EF92      		push r14
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 14, -2
  24 0002 FF92      		push r15
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 15, -3
  28 0004 CF93      		push r28
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 28, -4
  32               	/* prologue: function */
  33               	/* frame size = 0 */
  34               	/* stack size = 3 */
  35               	.L__stack_usage = 3
  36 0006 7C01      		movw r14,r24
  37 0008 C62F      		mov r28,r22
  50:keymap_m.c    ****     if (record->event.pressed) dprint("P"); else dprint("R");
  38               		.loc 1 50 0
  39 000a FC01      		movw r30,r24
  40 000c 9281      		ldd r25,Z+2
  41 000e 8091 0000 		lds r24,debug_config
  42               	.LVL1:
  43 0012 9923      		tst r25
  44 0014 01F0      		breq .L2
  45               		.loc 1 50 0 is_stmt 0 discriminator 1
  46 0016 80FF      		sbrs r24,0
  47 0018 00C0      		rjmp .L3
  48 001a 80E0      		ldi r24,lo8(__c.2135)
  49 001c 90E0      		ldi r25,hi8(__c.2135)
  50 001e 00C0      		rjmp .L21
  51               	.L2:
  52               		.loc 1 50 0 discriminator 2
  53 0020 80FF      		sbrs r24,0
  54 0022 00C0      		rjmp .L3
  55               		.loc 1 50 0 discriminator 1
  56 0024 80E0      		ldi r24,lo8(__c.2137)
  57 0026 90E0      		ldi r25,hi8(__c.2137)
  58               	.L21:
  59 0028 0E94 0000 		call xputs
  60               	.LVL2:
  61               	.L3:
  51:keymap_m.c    ****     if (record->tap.interrupted) dprint("i");
  62               		.loc 1 51 0 is_stmt 1
  63 002c F701      		movw r30,r14
  64 002e 8581      		ldd r24,Z+5
  65 0030 80FF      		sbrs r24,0
  66 0032 00C0      		rjmp .L4
  67               		.loc 1 51 0 is_stmt 0 discriminator 1
  68 0034 8091 0000 		lds r24,debug_config
  69 0038 80FF      		sbrs r24,0
  70 003a 00C0      		rjmp .L4
  71 003c 80E0      		ldi r24,lo8(__c.2139)
  72 003e 90E0      		ldi r25,hi8(__c.2139)
  73 0040 0E94 0000 		call xputs
  74               	.LVL3:
  75               	.L4:
  52:keymap_m.c    **** 
  53:keymap_m.c    **** #   define MODS_MASK_1   (MOD_BIT(KC_RSHIFT))
  54:keymap_m.c    ****     static uint8_t r_shift_mod;
  55:keymap_m.c    **** 
  56:keymap_m.c    ****     switch (id) {
  76               		.loc 1 56 0 is_stmt 1
  77 0044 C111      		cpse r28,__zero_reg__
  78 0046 00C0      		rjmp .L1
  79               	.LBB2:
  57:keymap_m.c    ****         // Caps Lock + Right Shift + Pause = DFU
  58:keymap_m.c    ****         case PAUS_BOOT:
  59:keymap_m.c    ****             r_shift_mod = get_mods()&MODS_MASK_1;
  80               		.loc 1 59 0
  81 0048 0E94 0000 		call get_mods
  82               	.LVL4:
  83 004c 8072      		andi r24,32
  84 004e 9927      		clr r25
  85 0050 8093 0000 		sts r_shift_mod.2141,r24
  60:keymap_m.c    ****             if (record->event.pressed) {
  86               		.loc 1 60 0
  87 0054 F701      		movw r30,r14
  88 0056 3281      		ldd r19,Z+2
  89 0058 3323      		tst r19
  90 005a 01F0      		breq .L7
  61:keymap_m.c    ****                 if (r_shift_mod) {
  91               		.loc 1 61 0
  92 005c 8823      		tst r24
  93 005e 01F0      		breq .L8
  94               	/* epilogue start */
  95               	.LBE2:
  62:keymap_m.c    **** 		    bootloader_jump(); // JUMP TO DFU BOOTLOADER
  63:keymap_m.c    ****                 } else {
  64:keymap_m.c    ****                     del_mods(r_shift_mod); // remove shift
  65:keymap_m.c    ****                     add_key(KC_PAUS);
  66:keymap_m.c    ****                     send_keyboard_report(); // send Scroll Lock
  67:keymap_m.c    ****                     add_mods(r_shift_mod); // return shift but not sent
  68:keymap_m.c    ****                 }
  69:keymap_m.c    ****             } else {
  70:keymap_m.c    ****                 if (r_shift_mod) {                   
  71:keymap_m.c    ****                 } else {
  72:keymap_m.c    ****                     del_key(KC_PAUS);
  73:keymap_m.c    ****                     send_keyboard_report();
  74:keymap_m.c    ****                 }
  75:keymap_m.c    ****             }
  76:keymap_m.c    ****             break;
  77:keymap_m.c    ****     }
  78:keymap_m.c    **** 
  79:keymap_m.c    **** };
  96               		.loc 1 79 0
  97 0060 CF91      		pop r28
  98               	.LVL5:
  99 0062 FF90      		pop r15
 100 0064 EF90      		pop r14
 101               	.LVL6:
 102               	.LBB7:
  62:keymap_m.c    **** 		    bootloader_jump(); // JUMP TO DFU BOOTLOADER
 103               		.loc 1 62 0
 104 0066 0C94 0000 		jmp bootloader_jump
 105               	.LVL7:
 106               	.L8:
 107               	.LBB3:
  64:keymap_m.c    ****                     del_mods(r_shift_mod); // remove shift
 108               		.loc 1 64 0
 109 006a 0E94 0000 		call del_mods
 110               	.LVL8:
  65:keymap_m.c    ****                     add_key(KC_PAUS);
 111               		.loc 1 65 0
 112 006e 88E4      		ldi r24,lo8(72)
 113 0070 90E0      		ldi r25,0
 114 0072 0E94 0000 		call add_key
 115               	.LVL9:
  66:keymap_m.c    ****                     send_keyboard_report(); // send Scroll Lock
 116               		.loc 1 66 0
 117 0076 0E94 0000 		call send_keyboard_report
 118               	.LVL10:
  67:keymap_m.c    ****                     add_mods(r_shift_mod); // return shift but not sent
 119               		.loc 1 67 0
 120 007a 8091 0000 		lds r24,r_shift_mod.2141
 121 007e 90E0      		ldi r25,0
 122               	/* epilogue start */
 123               	.LBE3:
 124               	.LBE7:
 125               		.loc 1 79 0
 126 0080 CF91      		pop r28
 127               	.LVL11:
 128 0082 FF90      		pop r15
 129 0084 EF90      		pop r14
 130               	.LVL12:
 131               	.LBB8:
 132               	.LBB4:
  67:keymap_m.c    ****                     add_mods(r_shift_mod); // return shift but not sent
 133               		.loc 1 67 0
 134 0086 0C94 0000 		jmp add_mods
 135               	.LVL13:
 136               	.L7:
 137               	.LBE4:
  70:keymap_m.c    ****                 if (r_shift_mod) {                   
 138               		.loc 1 70 0
 139 008a 8111      		cpse r24,__zero_reg__
 140 008c 00C0      		rjmp .L1
 141               	.LBB5:
  72:keymap_m.c    ****                     del_key(KC_PAUS);
 142               		.loc 1 72 0
 143 008e 88E4      		ldi r24,lo8(72)
 144 0090 90E0      		ldi r25,0
 145 0092 0E94 0000 		call del_key
 146               	.LVL14:
 147               	/* epilogue start */
 148               	.LBE5:
 149               	.LBE8:
 150               		.loc 1 79 0
 151 0096 CF91      		pop r28
 152               	.LVL15:
 153 0098 FF90      		pop r15
 154 009a EF90      		pop r14
 155               	.LVL16:
 156               	.LBB9:
 157               	.LBB6:
  73:keymap_m.c    ****                     send_keyboard_report();
 158               		.loc 1 73 0
 159 009c 0C94 0000 		jmp send_keyboard_report
 160               	.LVL17:
 161               	.L1:
 162               	/* epilogue start */
 163               	.LBE6:
 164               	.LBE9:
 165               		.loc 1 79 0
 166 00a0 CF91      		pop r28
 167               	.LVL18:
 168 00a2 FF90      		pop r15
 169 00a4 EF90      		pop r14
 170               	.LVL19:
 171 00a6 0895      		ret
 172               		.cfi_endproc
 173               	.LFE4:
 175               	.global	fn_actions
 176               		.section	.progmem.data.fn_actions,"a",@progbits
 179               	fn_actions:
 180 0000 39A1      		.word	-24263
 181 0002 00F0      		.word	-4096
 182               	.global	keymaps
 183               		.section	.progmem.data.keymaps,"a",@progbits
 186               	keymaps:
 187 0000 00        		.byte	0
 188 0001 00        		.byte	0
 189 0002 00        		.byte	0
 190 0003 00        		.byte	0
 191 0004 00        		.byte	0
 192 0005 05        		.byte	5
 193 0006 2C        		.byte	44
 194 0007 11        		.byte	17
 195 0008 E5        		.byte	-27
 196 0009 00        		.byte	0
 197 000a 38        		.byte	56
 198 000b 51        		.byte	81
 199 000c 4F        		.byte	79
 200 000d 56        		.byte	86
 201 000e 50        		.byte	80
 202 000f E6        		.byte	-26
 203 0010 E4        		.byte	-28
 204 0011 E5        		.byte	-27
 205 0012 1D        		.byte	29
 206 0013 1B        		.byte	27
 207 0014 06        		.byte	6
 208 0015 19        		.byte	25
 209 0016 28        		.byte	40
 210 0017 10        		.byte	16
 211 0018 36        		.byte	54
 212 0019 37        		.byte	55
 213 001a 31        		.byte	49
 214 001b 53        		.byte	83
 215 001c 54        		.byte	84
 216 001d 55        		.byte	85
 217 001e 48        		.byte	72
 218 001f 00        		.byte	0
 219 0020 00        		.byte	0
 220 0021 00        		.byte	0
 221 0022 04        		.byte	4
 222 0023 16        		.byte	22
 223 0024 07        		.byte	7
 224 0025 09        		.byte	9
 225 0026 31        		.byte	49
 226 0027 0D        		.byte	13
 227 0028 0E        		.byte	14
 228 0029 0F        		.byte	15
 229 002a 33        		.byte	51
 230 002b 59        		.byte	89
 231 002c 5A        		.byte	90
 232 002d 5B        		.byte	91
 233 002e 58        		.byte	88
 234 002f 00        		.byte	0
 235 0030 00        		.byte	0
 236 0031 00        		.byte	0
 237 0032 14        		.byte	20
 238 0033 1A        		.byte	26
 239 0034 08        		.byte	8
 240 0035 15        		.byte	21
 241 0036 31        		.byte	49
 242 0037 18        		.byte	24
 243 0038 0C        		.byte	12
 244 0039 12        		.byte	18
 245 003a 13        		.byte	19
 246 003b 5F        		.byte	95
 247 003c 60        		.byte	96
 248 003d 61        		.byte	97
 249 003e 57        		.byte	87
 250 003f 47        		.byte	71
 251 0040 00        		.byte	0
 252 0041 00        		.byte	0
 253 0042 1E        		.byte	30
 254 0043 1F        		.byte	31
 255 0044 20        		.byte	32
 256 0045 21        		.byte	33
 257 0046 43        		.byte	67
 258 0047 24        		.byte	36
 259 0048 25        		.byte	37
 260 0049 26        		.byte	38
 261 004a 27        		.byte	39
 262 004b 44        		.byte	68
 263 004c 45        		.byte	69
 264 004d 4E        		.byte	78
 265 004e 4D        		.byte	77
 266 004f 46        		.byte	70
 267 0050 E0        		.byte	-32
 268 0051 00        		.byte	0
 269 0052 35        		.byte	53
 270 0053 3A        		.byte	58
 271 0054 3B        		.byte	59
 272 0055 22        		.byte	34
 273 0056 42        		.byte	66
 274 0057 23        		.byte	35
 275 0058 2E        		.byte	46
 276 0059 41        		.byte	65
 277 005a 2D        		.byte	45
 278 005b 4C        		.byte	76
 279 005c 49        		.byte	73
 280 005d 4B        		.byte	75
 281 005e 4A        		.byte	74
 282 005f 00        		.byte	0
 283 0060 00        		.byte	0
 284 0061 E1        		.byte	-31
 285 0062 2B        		.byte	43
 286 0063 C0        		.byte	-64
 287 0064 3C        		.byte	60
 288 0065 17        		.byte	23
 289 0066 2A        		.byte	42
 290 0067 1C        		.byte	28
 291 0068 30        		.byte	48
 292 0069 40        		.byte	64
 293 006a 2F        		.byte	47
 294 006b 5C        		.byte	92
 295 006c 5D        		.byte	93
 296 006d 5E        		.byte	94
 297 006e 00        		.byte	0
 298 006f 00        		.byte	0
 299 0070 00        		.byte	0
 300 0071 00        		.byte	0
 301 0072 29        		.byte	41
 302 0073 64        		.byte	100
 303 0074 3D        		.byte	61
 304 0075 0A        		.byte	10
 305 0076 3E        		.byte	62
 306 0077 0B        		.byte	11
 307 0078 3F        		.byte	63
 308 0079 00        		.byte	0
 309 007a 34        		.byte	52
 310 007b 00        		.byte	0
 311 007c 62        		.byte	98
 312 007d 63        		.byte	99
 313 007e 52        		.byte	82
 314 007f E2        		.byte	-30
 315 0080 00        		.byte	0
 316 0081 00        		.byte	0
 317 0082 00        		.byte	0
 318 0083 00        		.byte	0
 319 0084 00        		.byte	0
 320 0085 01        		.byte	1
 321 0086 01        		.byte	1
 322 0087 01        		.byte	1
 323 0088 01        		.byte	1
 324 0089 00        		.byte	0
 325 008a 01        		.byte	1
 326 008b 01        		.byte	1
 327 008c 01        		.byte	1
 328 008d 01        		.byte	1
 329 008e 01        		.byte	1
 330 008f 01        		.byte	1
 331 0090 01        		.byte	1
 332 0091 01        		.byte	1
 333 0092 01        		.byte	1
 334 0093 01        		.byte	1
 335 0094 01        		.byte	1
 336 0095 01        		.byte	1
 337 0096 01        		.byte	1
 338 0097 01        		.byte	1
 339 0098 01        		.byte	1
 340 0099 01        		.byte	1
 341 009a 01        		.byte	1
 342 009b 01        		.byte	1
 343 009c 01        		.byte	1
 344 009d 01        		.byte	1
 345 009e C1        		.byte	-63
 346 009f 00        		.byte	0
 347 00a0 00        		.byte	0
 348 00a1 00        		.byte	0
 349 00a2 01        		.byte	1
 350 00a3 01        		.byte	1
 351 00a4 01        		.byte	1
 352 00a5 01        		.byte	1
 353 00a6 01        		.byte	1
 354 00a7 01        		.byte	1
 355 00a8 01        		.byte	1
 356 00a9 01        		.byte	1
 357 00aa 01        		.byte	1
 358 00ab 01        		.byte	1
 359 00ac 01        		.byte	1
 360 00ad 01        		.byte	1
 361 00ae 01        		.byte	1
 362 00af 01        		.byte	1
 363 00b0 00        		.byte	0
 364 00b1 00        		.byte	0
 365 00b2 01        		.byte	1
 366 00b3 01        		.byte	1
 367 00b4 01        		.byte	1
 368 00b5 01        		.byte	1
 369 00b6 01        		.byte	1
 370 00b7 01        		.byte	1
 371 00b8 01        		.byte	1
 372 00b9 01        		.byte	1
 373 00ba 01        		.byte	1
 374 00bb 01        		.byte	1
 375 00bc 01        		.byte	1
 376 00bd 01        		.byte	1
 377 00be 01        		.byte	1
 378 00bf 01        		.byte	1
 379 00c0 00        		.byte	0
 380 00c1 00        		.byte	0
 381 00c2 01        		.byte	1
 382 00c3 01        		.byte	1
 383 00c4 01        		.byte	1
 384 00c5 01        		.byte	1
 385 00c6 01        		.byte	1
 386 00c7 01        		.byte	1
 387 00c8 01        		.byte	1
 388 00c9 01        		.byte	1
 389 00ca 01        		.byte	1
 390 00cb 01        		.byte	1
 391 00cc 01        		.byte	1
 392 00cd 01        		.byte	1
 393 00ce 01        		.byte	1
 394 00cf 01        		.byte	1
 395 00d0 01        		.byte	1
 396 00d1 00        		.byte	0
 397 00d2 01        		.byte	1
 398 00d3 01        		.byte	1
 399 00d4 01        		.byte	1
 400 00d5 01        		.byte	1
 401 00d6 01        		.byte	1
 402 00d7 01        		.byte	1
 403 00d8 01        		.byte	1
 404 00d9 01        		.byte	1
 405 00da 01        		.byte	1
 406 00db 01        		.byte	1
 407 00dc 01        		.byte	1
 408 00dd 01        		.byte	1
 409 00de 01        		.byte	1
 410 00df 00        		.byte	0
 411 00e0 00        		.byte	0
 412 00e1 01        		.byte	1
 413 00e2 01        		.byte	1
 414 00e3 01        		.byte	1
 415 00e4 01        		.byte	1
 416 00e5 01        		.byte	1
 417 00e6 01        		.byte	1
 418 00e7 01        		.byte	1
 419 00e8 01        		.byte	1
 420 00e9 01        		.byte	1
 421 00ea 01        		.byte	1
 422 00eb 01        		.byte	1
 423 00ec 01        		.byte	1
 424 00ed 01        		.byte	1
 425 00ee 01        		.byte	1
 426 00ef 00        		.byte	0
 427 00f0 00        		.byte	0
 428 00f1 00        		.byte	0
 429 00f2 01        		.byte	1
 430 00f3 01        		.byte	1
 431 00f4 01        		.byte	1
 432 00f5 01        		.byte	1
 433 00f6 01        		.byte	1
 434 00f7 01        		.byte	1
 435 00f8 01        		.byte	1
 436 00f9 00        		.byte	0
 437 00fa 01        		.byte	1
 438 00fb 01        		.byte	1
 439 00fc 01        		.byte	1
 440 00fd 01        		.byte	1
 441 00fe 01        		.byte	1
 442 00ff 01        		.byte	1
 443               		.section	.progmem.data.__c.2135,"a",@progbits
 446               	__c.2135:
 447 0000 5000      		.string	"P"
 448               		.section	.progmem.data.__c.2137,"a",@progbits
 451               	__c.2137:
 452 0000 5200      		.string	"R"
 453               		.section	.progmem.data.__c.2139,"a",@progbits
 456               	__c.2139:
 457 0000 6900      		.string	"i"
 458               		.section	.bss.r_shift_mod.2141,"aw",@nobits
 461               	r_shift_mod.2141:
 462 0000 00        		.zero	1
 463               		.text
 464               	.Letext0:
 465               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 466               		.file 3 "../../../../tmk_core/common/keycode.h"
 467               		.file 4 "../../../../tmk_core/common/keyboard.h"
 468               		.file 5 "../../../../tmk_core/common/action_code.h"
 469               		.file 6 "../../../../tmk_core/common/action.h"
 470               		.file 7 "../../../../tmk_core/common/debug.h"
 471               		.file 8 "../../../../tmk_core/common/avr/xprintf.h"
 472               		.file 9 "../../../../tmk_core/common/bootloader.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_m.c
     /tmp/cctcFnQE.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cctcFnQE.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cctcFnQE.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cctcFnQE.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cctcFnQE.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cctcFnQE.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cctcFnQE.s:14     .text.action_function:0000000000000000 action_function
     /tmp/cctcFnQE.s:446    .progmem.data.__c.2135:0000000000000000 __c.2135
     /tmp/cctcFnQE.s:451    .progmem.data.__c.2137:0000000000000000 __c.2137
     /tmp/cctcFnQE.s:456    .progmem.data.__c.2139:0000000000000000 __c.2139
     /tmp/cctcFnQE.s:461    .bss.r_shift_mod.2141:0000000000000000 r_shift_mod.2141
     /tmp/cctcFnQE.s:179    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/cctcFnQE.s:186    .progmem.data.keymaps:0000000000000000 keymaps

UNDEFINED SYMBOLS
debug_config
xputs
get_mods
bootloader_jump
del_mods
add_key
send_keyboard_report
add_mods
del_key
__do_clear_bss
