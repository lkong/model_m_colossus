   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_setup,"ax",@progbits
  12               		.weak	matrix_setup
  14               	matrix_setup:
  15               	.LFB5:
  16               		.file 1 "../../../../tmk_core/common/keyboard.c"
   1:../../../../tmk_core/common/keyboard.c **** /*
   2:../../../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/common/keyboard.c **** 
   4:../../../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../../../tmk_core/common/keyboard.c **** 
   9:../../../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../../../tmk_core/common/keyboard.c **** 
  14:../../../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../../../tmk_core/common/keyboard.c **** */
  17:../../../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../../../tmk_core/common/keyboard.c **** #endif
  37:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../../../tmk_core/common/keyboard.c **** #endif
  40:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../../../tmk_core/common/keyboard.c **** #endif
  43:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../../../tmk_core/common/keyboard.c **** #endif
  46:../../../../tmk_core/common/keyboard.c **** 
  47:../../../../tmk_core/common/keyboard.c **** 
  48:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../../../tmk_core/common/keyboard.c **** {
  51:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../../../tmk_core/common/keyboard.c ****         return false;
  55:../../../../tmk_core/common/keyboard.c **** 
  56:../../../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../../../tmk_core/common/keyboard.c ****             return true;
  60:../../../../tmk_core/common/keyboard.c ****     }
  61:../../../../tmk_core/common/keyboard.c ****     return false;
  62:../../../../tmk_core/common/keyboard.c **** }
  63:../../../../tmk_core/common/keyboard.c **** #endif
  64:../../../../tmk_core/common/keyboard.c **** 
  65:../../../../tmk_core/common/keyboard.c **** 
  66:../../../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  17               		.loc 1 66 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23 0000 0895      		ret
  24               		.cfi_endproc
  25               	.LFE5:
  27               		.section	.text.keyboard_setup,"ax",@progbits
  28               	.global	keyboard_setup
  30               	keyboard_setup:
  31               	.LFB6:
  67:../../../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  68:../../../../tmk_core/common/keyboard.c **** {
  32               		.loc 1 68 0
  33               		.cfi_startproc
  34               	/* prologue: function */
  35               	/* frame size = 0 */
  36               	/* stack size = 0 */
  37               	.L__stack_usage = 0
  69:../../../../tmk_core/common/keyboard.c ****     matrix_setup();
  38               		.loc 1 69 0
  39 0000 0C94 0000 		jmp matrix_setup
  40               	.LVL0:
  41               		.cfi_endproc
  42               	.LFE6:
  44               		.section	.text.keyboard_init,"ax",@progbits
  45               	.global	keyboard_init
  47               	keyboard_init:
  48               	.LFB7:
  70:../../../../tmk_core/common/keyboard.c **** }
  71:../../../../tmk_core/common/keyboard.c **** 
  72:../../../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  73:../../../../tmk_core/common/keyboard.c **** {
  49               		.loc 1 73 0
  50               		.cfi_startproc
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
  74:../../../../tmk_core/common/keyboard.c ****     timer_init();
  55               		.loc 1 74 0
  56 0000 0E94 0000 		call timer_init
  57               	.LVL1:
  75:../../../../tmk_core/common/keyboard.c ****     matrix_init();
  58               		.loc 1 75 0
  59 0004 0C94 0000 		jmp matrix_init
  60               	.LVL2:
  61               		.cfi_endproc
  62               	.LFE7:
  64               		.section	.text.keyboard_task,"ax",@progbits
  65               	.global	keyboard_task
  67               	keyboard_task:
  68               	.LFB8:
  76:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  77:../../../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  78:../../../../tmk_core/common/keyboard.c **** #endif
  79:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  80:../../../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  81:../../../../tmk_core/common/keyboard.c **** #endif
  82:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  83:../../../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  84:../../../../tmk_core/common/keyboard.c **** #endif
  85:../../../../tmk_core/common/keyboard.c **** 
  86:../../../../tmk_core/common/keyboard.c **** 
  87:../../../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  88:../../../../tmk_core/common/keyboard.c ****     bootmagic();
  89:../../../../tmk_core/common/keyboard.c **** #endif
  90:../../../../tmk_core/common/keyboard.c **** 
  91:../../../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  92:../../../../tmk_core/common/keyboard.c ****     backlight_init();
  93:../../../../tmk_core/common/keyboard.c **** #endif
  94:../../../../tmk_core/common/keyboard.c **** }
  95:../../../../tmk_core/common/keyboard.c **** 
  96:../../../../tmk_core/common/keyboard.c **** /*
  97:../../../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  98:../../../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  99:../../../../tmk_core/common/keyboard.c ****  */
 100:../../../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 101:../../../../tmk_core/common/keyboard.c **** {
  69               		.loc 1 101 0
  70               		.cfi_startproc
  71 0000 2F92      		push r2
  72               	.LCFI0:
  73               		.cfi_def_cfa_offset 3
  74               		.cfi_offset 2, -2
  75 0002 3F92      		push r3
  76               	.LCFI1:
  77               		.cfi_def_cfa_offset 4
  78               		.cfi_offset 3, -3
  79 0004 4F92      		push r4
  80               	.LCFI2:
  81               		.cfi_def_cfa_offset 5
  82               		.cfi_offset 4, -4
  83 0006 5F92      		push r5
  84               	.LCFI3:
  85               		.cfi_def_cfa_offset 6
  86               		.cfi_offset 5, -5
  87 0008 6F92      		push r6
  88               	.LCFI4:
  89               		.cfi_def_cfa_offset 7
  90               		.cfi_offset 6, -6
  91 000a 7F92      		push r7
  92               	.LCFI5:
  93               		.cfi_def_cfa_offset 8
  94               		.cfi_offset 7, -7
  95 000c 8F92      		push r8
  96               	.LCFI6:
  97               		.cfi_def_cfa_offset 9
  98               		.cfi_offset 8, -8
  99 000e 9F92      		push r9
 100               	.LCFI7:
 101               		.cfi_def_cfa_offset 10
 102               		.cfi_offset 9, -9
 103 0010 AF92      		push r10
 104               	.LCFI8:
 105               		.cfi_def_cfa_offset 11
 106               		.cfi_offset 10, -10
 107 0012 BF92      		push r11
 108               	.LCFI9:
 109               		.cfi_def_cfa_offset 12
 110               		.cfi_offset 11, -11
 111 0014 CF92      		push r12
 112               	.LCFI10:
 113               		.cfi_def_cfa_offset 13
 114               		.cfi_offset 12, -12
 115 0016 DF92      		push r13
 116               	.LCFI11:
 117               		.cfi_def_cfa_offset 14
 118               		.cfi_offset 13, -13
 119 0018 EF92      		push r14
 120               	.LCFI12:
 121               		.cfi_def_cfa_offset 15
 122               		.cfi_offset 14, -14
 123 001a FF92      		push r15
 124               	.LCFI13:
 125               		.cfi_def_cfa_offset 16
 126               		.cfi_offset 15, -15
 127 001c 0F93      		push r16
 128               	.LCFI14:
 129               		.cfi_def_cfa_offset 17
 130               		.cfi_offset 16, -16
 131 001e 1F93      		push r17
 132               	.LCFI15:
 133               		.cfi_def_cfa_offset 18
 134               		.cfi_offset 17, -17
 135 0020 CF93      		push r28
 136               	.LCFI16:
 137               		.cfi_def_cfa_offset 19
 138               		.cfi_offset 28, -18
 139 0022 DF93      		push r29
 140               	.LCFI17:
 141               		.cfi_def_cfa_offset 20
 142               		.cfi_offset 29, -19
 143 0024 00D0      		rcall .
 144 0026 00D0      		rcall .
 145 0028 1F92      		push __zero_reg__
 146               	.LCFI18:
 147               		.cfi_def_cfa_offset 25
 148 002a CDB7      		in r28,__SP_L__
 149 002c DEB7      		in r29,__SP_H__
 150               	.LCFI19:
 151               		.cfi_def_cfa_register 28
 152               	/* prologue: function */
 153               	/* frame size = 5 */
 154               	/* stack size = 23 */
 155               	.L__stack_usage = 23
 156               	.LVL3:
 102:../../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 103:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 104:../../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 105:../../../../tmk_core/common/keyboard.c **** #endif
 106:../../../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 107:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 108:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 109:../../../../tmk_core/common/keyboard.c **** 
 110:../../../../tmk_core/common/keyboard.c ****     matrix_scan();
 157               		.loc 1 110 0
 158 002e 0E94 0000 		call matrix_scan
 159               	.LVL4:
 160 0032 90E0      		ldi r25,lo8(matrix_prev.2248)
 161 0034 492E      		mov r4,r25
 162 0036 90E0      		ldi r25,hi8(matrix_prev.2248)
 163 0038 592E      		mov r5,r25
 164 003a 20E0      		ldi r18,lo8(matrix_ghost.2249)
 165 003c A22E      		mov r10,r18
 166 003e 20E0      		ldi r18,hi8(matrix_ghost.2249)
 167 0040 B22E      		mov r11,r18
 168 0042 E12C      		mov r14,__zero_reg__
 169 0044 F12C      		mov r15,__zero_reg__
 170               	.LBB9:
 171               	.LBB10:
 111:../../../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 112:../../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 113:../../../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 114:../../../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 115:../../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 116:../../../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 117:../../../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 118:../../../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 119:../../../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 120:../../../../tmk_core/common/keyboard.c ****                  */
 121:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 122:../../../../tmk_core/common/keyboard.c ****                     matrix_print();
 123:../../../../tmk_core/common/keyboard.c ****                 }
 124:../../../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 125:../../../../tmk_core/common/keyboard.c ****                 continue;
 126:../../../../tmk_core/common/keyboard.c ****             }
 127:../../../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 128:../../../../tmk_core/common/keyboard.c **** #endif
 129:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 130:../../../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 131:../../../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 172               		.loc 1 131 0
 173 0046 2224      		clr r2
 174 0048 2394      		inc r2
 175 004a 312C      		mov r3,__zero_reg__
 176               	.LVL5:
 177               	.L18:
 178 004c 0E2D      		mov r16,r14
 179               	.LBE10:
 112:../../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 180               		.loc 1 112 0
 181 004e 8E2D      		mov r24,r14
 182 0050 0E94 0000 		call matrix_get_row
 183               	.LVL6:
 184 0054 6C01      		movw r12,r24
 185               	.LVL7:
 113:../../../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 186               		.loc 1 113 0
 187 0056 F201      		movw r30,r4
 188 0058 8190      		ld r8,Z+
 189 005a 9190      		ld r9,Z+
 190 005c 2F01      		movw r4,r30
 191 005e 8826      		eor r8,r24
 192 0060 9926      		eor r9,r25
 193               	.LVL8:
 114:../../../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 194               		.loc 1 114 0
 195 0062 8114      		cp r8,__zero_reg__
 196 0064 9104      		cpc r9,__zero_reg__
 197 0066 01F4      		brne .+2
 198 0068 00C0      		rjmp .L6
 199               	.LVL9:
 200               	.LBB12:
 201               	.LBB13:
  51:../../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
 202               		.loc 1 51 0
 203 006a 8E2D      		mov r24,r14
 204 006c 0E94 0000 		call matrix_get_row
 205               	.LVL10:
 206 0070 3C01      		movw r6,r24
 207               	.LVL11:
  53:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
 208               		.loc 1 53 0
 209 0072 0197      		sbiw r24,1
 210 0074 8621      		and r24,r6
 211 0076 9721      		and r25,r7
 212 0078 892B      		or r24,r25
 213 007a 01F4      		brne .+2
 214 007c 00C0      		rjmp .L7
 215 007e 10E0      		ldi r17,0
 216               	.L9:
 217               	.LBB14:
  58:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
 218               		.loc 1 58 0
 219 0080 1013      		cpse r17,r16
 220 0082 00C0      		rjmp .L8
 221               	.L11:
  57:../../../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 222               		.loc 1 57 0
 223 0084 1F5F      		subi r17,lo8(-(1))
 224               	.LVL12:
 225 0086 1830      		cpi r17,lo8(8)
 226 0088 01F4      		brne .L9
 227 008a 00C0      		rjmp .L7
 228               	.LVL13:
 229               	.L8:
  58:../../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
 230               		.loc 1 58 0
 231 008c 812F      		mov r24,r17
 232 008e 0E94 0000 		call matrix_get_row
 233               	.LVL14:
 234 0092 8621      		and r24,r6
 235 0094 9721      		and r25,r7
 236 0096 892B      		or r24,r25
 237 0098 01F0      		breq .L11
 238 009a 00C0      		rjmp .L10
 239               	.L23:
 240               	.LBE14:
 241               	.LBE13:
 242               	.LBE12:
 121:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 243               		.loc 1 121 0 discriminator 1
 244 009c F501      		movw r30,r10
 245 009e 8081      		ld r24,Z
 246 00a0 9181      		ldd r25,Z+1
 247 00a2 8C15      		cp r24,r12
 248 00a4 9D05      		cpc r25,r13
 249 00a6 01F0      		breq .L12
 122:../../../../tmk_core/common/keyboard.c ****                     matrix_print();
 250               		.loc 1 122 0
 251 00a8 0E94 0000 		call matrix_print
 252               	.LVL15:
 253               	.L12:
 124:../../../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 254               		.loc 1 124 0
 255 00ac F501      		movw r30,r10
 256 00ae D182      		std Z+1,r13
 257 00b0 C082      		st Z,r12
 125:../../../../tmk_core/common/keyboard.c ****                 continue;
 258               		.loc 1 125 0
 259 00b2 00C0      		rjmp .L6
 260               	.L21:
 129:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 261               		.loc 1 129 0 discriminator 1
 262 00b4 0E94 0000 		call matrix_print
 263               	.LVL16:
 264               	.L22:
 265               	.LBB16:
 266               	.LBB15:
  53:../../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
 267               		.loc 1 53 0
 268 00b8 80E0      		ldi r24,0
 269 00ba 90E0      		ldi r25,0
 270               	.LVL17:
 271               	.L16:
 272               	.LBE15:
 273               	.LBE16:
 274               	.LBB17:
 275               		.loc 1 131 0
 276 00bc 3101      		movw r6,r2
 277 00be 082E      		mov r0,r24
 278 00c0 00C0      		rjmp 2f
 279               		1:
 280 00c2 660C      		lsl r6
 281 00c4 771C      		rol r7
 282               		2:
 283 00c6 0A94      		dec r0
 284 00c8 02F4      		brpl 1b
 285 00ca 9301      		movw r18,r6
 286 00cc 2821      		and r18,r8
 287 00ce 3921      		and r19,r9
 288 00d0 232B      		or r18,r19
 289 00d2 01F0      		breq .L13
 290               	.LBB11:
 132:../../../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 291               		.loc 1 132 0
 292 00d4 8983      		std Y+1,r24
 293 00d6 0A83      		std Y+2,r16
 133:../../../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 134:../../../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 294               		.loc 1 134 0
 295 00d8 C620      		and r12,r6
 296 00da D720      		and r13,r7
 297               	.LVL18:
 298 00dc 81E0      		ldi r24,lo8(1)
 299 00de CD28      		or r12,r13
 300 00e0 01F4      		brne .L14
 301 00e2 80E0      		ldi r24,0
 302               	.L14:
 132:../../../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 303               		.loc 1 132 0
 304 00e4 8B83      		std Y+3,r24
 135:../../../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 305               		.loc 1 135 0
 306 00e6 0E94 0000 		call timer_read
 307               	.LVL19:
 308 00ea 8160      		ori r24,1
 132:../../../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 309               		.loc 1 132 0
 310 00ec 782F      		mov r23,r24
 311 00ee 9D83      		std Y+5,r25
 312 00f0 8C83      		std Y+4,r24
 136:../../../../tmk_core/common/keyboard.c ****                     };
 137:../../../../tmk_core/common/keyboard.c ****                     action_exec(e);
 313               		.loc 1 137 0
 314 00f2 4981      		ldd r20,Y+1
 315 00f4 5A81      		ldd r21,Y+2
 316 00f6 6B81      		ldd r22,Y+3
 317 00f8 8D81      		ldd r24,Y+5
 318 00fa 0E94 0000 		call action_exec
 319               	.LVL20:
 138:../../../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 320               		.loc 1 138 0
 321 00fe 4981      		ldd r20,Y+1
 322 0100 5A81      		ldd r21,Y+2
 323 0102 6B81      		ldd r22,Y+3
 324 0104 7C81      		ldd r23,Y+4
 325 0106 8D81      		ldd r24,Y+5
 326 0108 0E94 0000 		call hook_matrix_change
 327               	.LVL21:
 139:../../../../tmk_core/common/keyboard.c ****                     // record a processed key
 140:../../../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 328               		.loc 1 140 0
 329 010c F701      		movw r30,r14
 330 010e EE0F      		lsl r30
 331 0110 FF1F      		rol r31
 332 0112 E050      		subi r30,lo8(-(matrix_prev.2248))
 333 0114 F040      		sbci r31,hi8(-(matrix_prev.2248))
 334 0116 8081      		ld r24,Z
 335 0118 9181      		ldd r25,Z+1
 336 011a 8625      		eor r24,r6
 337 011c 9725      		eor r25,r7
 338 011e 9183      		std Z+1,r25
 339 0120 8083      		st Z,r24
 340 0122 00C0      		rjmp .L15
 341               	.LVL22:
 342               	.L13:
 343 0124 0196      		adiw r24,1
 344               	.LBE11:
 130:../../../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 345               		.loc 1 130 0
 346 0126 8031      		cpi r24,16
 347 0128 9105      		cpc r25,__zero_reg__
 348 012a 01F4      		brne .L16
 349               	.LVL23:
 350               	.L6:
 351 012c FFEF      		ldi r31,-1
 352 012e EF1A      		sub r14,r31
 353 0130 FF0A      		sbc r15,r31
 354 0132 82E0      		ldi r24,2
 355 0134 A80E      		add r10,r24
 356 0136 B11C      		adc r11,__zero_reg__
 357               	.LBE17:
 111:../../../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 358               		.loc 1 111 0
 359 0138 E8E0      		ldi r30,8
 360 013a EE16      		cp r14,r30
 361 013c F104      		cpc r15,__zero_reg__
 362 013e 01F0      		breq .+2
 363 0140 00C0      		rjmp .L18
 364               	.LBE9:
 141:../../../../tmk_core/common/keyboard.c ****                     // process a key per task call
 142:../../../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 143:../../../../tmk_core/common/keyboard.c ****                 }
 144:../../../../tmk_core/common/keyboard.c ****             }
 145:../../../../tmk_core/common/keyboard.c ****         }
 146:../../../../tmk_core/common/keyboard.c ****     }
 147:../../../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 148:../../../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 365               		.loc 1 148 0
 366 0142 8FEF      		ldi r24,lo8(-1)
 367 0144 8983      		std Y+1,r24
 368 0146 8A83      		std Y+2,r24
 369 0148 1B82      		std Y+3,__zero_reg__
 370 014a 0E94 0000 		call timer_read
 371               	.LVL24:
 372 014e 8160      		ori r24,1
 373 0150 782F      		mov r23,r24
 374 0152 9D83      		std Y+5,r25
 375 0154 8C83      		std Y+4,r24
 376 0156 4981      		ldd r20,Y+1
 377 0158 5A81      		ldd r21,Y+2
 378 015a 6B81      		ldd r22,Y+3
 379 015c 8D81      		ldd r24,Y+5
 380 015e 0E94 0000 		call action_exec
 381               	.LVL25:
 382               	.L15:
 149:../../../../tmk_core/common/keyboard.c **** 
 150:../../../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 151:../../../../tmk_core/common/keyboard.c **** 
 152:../../../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 383               		.loc 1 152 0
 384 0162 0E94 0000 		call hook_keyboard_loop
 385               	.LVL26:
 153:../../../../tmk_core/common/keyboard.c **** 
 154:../../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 155:../../../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 156:../../../../tmk_core/common/keyboard.c ****     mousekey_task();
 386               		.loc 1 156 0
 387 0166 0E94 0000 		call mousekey_task
 388               	.LVL27:
 157:../../../../tmk_core/common/keyboard.c **** #endif
 158:../../../../tmk_core/common/keyboard.c **** 
 159:../../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 160:../../../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 161:../../../../tmk_core/common/keyboard.c **** #endif
 162:../../../../tmk_core/common/keyboard.c **** 
 163:../../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 164:../../../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 165:../../../../tmk_core/common/keyboard.c **** #endif
 166:../../../../tmk_core/common/keyboard.c **** 
 167:../../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 168:../../../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 169:../../../../tmk_core/common/keyboard.c **** #endif
 170:../../../../tmk_core/common/keyboard.c **** 
 171:../../../../tmk_core/common/keyboard.c ****     // update LED
 172:../../../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 389               		.loc 1 172 0
 390 016a 1091 0000 		lds r17,led_status.2250
 391 016e 0E94 0000 		call host_keyboard_leds
 392               	.LVL28:
 393 0172 1817      		cp r17,r24
 394 0174 01F0      		breq .L4
 173:../../../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 395               		.loc 1 173 0
 396 0176 0E94 0000 		call host_keyboard_leds
 397               	.LVL29:
 398 017a 8093 0000 		sts led_status.2250,r24
 174:../../../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 399               		.loc 1 174 0
 400 017e 9091 0000 		lds r25,debug_config
 401 0182 92FF      		sbrs r25,2
 402 0184 00C0      		rjmp .L20
 403               		.loc 1 174 0 is_stmt 0 discriminator 1
 404 0186 90FF      		sbrs r25,0
 405 0188 00C0      		rjmp .L20
 406 018a 1F92      		push __zero_reg__
 407 018c 8F93      		push r24
 408 018e 80E0      		ldi r24,lo8(__c.2268)
 409 0190 90E0      		ldi r25,hi8(__c.2268)
 410 0192 9F93      		push r25
 411 0194 8F93      		push r24
 412 0196 0E94 0000 		call __xprintf
 413               	.LVL30:
 414 019a 0F90      		pop __tmp_reg__
 415 019c 0F90      		pop __tmp_reg__
 416 019e 0F90      		pop __tmp_reg__
 417 01a0 0F90      		pop __tmp_reg__
 418               	.L20:
 175:../../../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 419               		.loc 1 175 0 is_stmt 1
 420 01a2 8091 0000 		lds r24,led_status.2250
 421               	/* epilogue start */
 176:../../../../tmk_core/common/keyboard.c ****     }
 177:../../../../tmk_core/common/keyboard.c **** }
 422               		.loc 1 177 0
 423 01a6 0F90      		pop __tmp_reg__
 424 01a8 0F90      		pop __tmp_reg__
 425 01aa 0F90      		pop __tmp_reg__
 426 01ac 0F90      		pop __tmp_reg__
 427 01ae 0F90      		pop __tmp_reg__
 428 01b0 DF91      		pop r29
 429 01b2 CF91      		pop r28
 430 01b4 1F91      		pop r17
 431 01b6 0F91      		pop r16
 432 01b8 FF90      		pop r15
 433 01ba EF90      		pop r14
 434 01bc DF90      		pop r13
 435 01be CF90      		pop r12
 436 01c0 BF90      		pop r11
 437 01c2 AF90      		pop r10
 438 01c4 9F90      		pop r9
 439 01c6 8F90      		pop r8
 440               	.LVL31:
 441 01c8 7F90      		pop r7
 442 01ca 6F90      		pop r6
 443 01cc 5F90      		pop r5
 444 01ce 4F90      		pop r4
 445 01d0 3F90      		pop r3
 446 01d2 2F90      		pop r2
 175:../../../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 447               		.loc 1 175 0
 448 01d4 0C94 0000 		jmp hook_keyboard_leds_change
 449               	.LVL32:
 450               	.L7:
 451               	.LBB18:
 127:../../../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 452               		.loc 1 127 0
 453 01d8 F501      		movw r30,r10
 454 01da D182      		std Z+1,r13
 455 01dc C082      		st Z,r12
 129:../../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 456               		.loc 1 129 0
 457 01de 8091 0000 		lds r24,debug_config
 458 01e2 81FF      		sbrs r24,1
 459 01e4 00C0      		rjmp .L22
 460 01e6 00C0      		rjmp .L21
 461               	.L10:
 121:../../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 462               		.loc 1 121 0
 463 01e8 8091 0000 		lds r24,debug_config
 464 01ec 81FD      		sbrc r24,1
 465 01ee 00C0      		rjmp .L23
 466 01f0 00C0      		rjmp .L12
 467               	.LVL33:
 468               	.L4:
 469               	/* epilogue start */
 470               	.LBE18:
 471               		.loc 1 177 0
 472 01f2 0F90      		pop __tmp_reg__
 473 01f4 0F90      		pop __tmp_reg__
 474 01f6 0F90      		pop __tmp_reg__
 475 01f8 0F90      		pop __tmp_reg__
 476 01fa 0F90      		pop __tmp_reg__
 477 01fc DF91      		pop r29
 478 01fe CF91      		pop r28
 479 0200 1F91      		pop r17
 480 0202 0F91      		pop r16
 481 0204 FF90      		pop r15
 482 0206 EF90      		pop r14
 483 0208 DF90      		pop r13
 484 020a CF90      		pop r12
 485 020c BF90      		pop r11
 486 020e AF90      		pop r10
 487 0210 9F90      		pop r9
 488 0212 8F90      		pop r8
 489               	.LVL34:
 490 0214 7F90      		pop r7
 491 0216 6F90      		pop r6
 492 0218 5F90      		pop r5
 493 021a 4F90      		pop r4
 494 021c 3F90      		pop r3
 495 021e 2F90      		pop r2
 496 0220 0895      		ret
 497               		.cfi_endproc
 498               	.LFE8:
 500               		.section	.text.keyboard_set_leds,"ax",@progbits
 501               	.global	keyboard_set_leds
 503               	keyboard_set_leds:
 504               	.LFB9:
 178:../../../../tmk_core/common/keyboard.c **** 
 179:../../../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 180:../../../../tmk_core/common/keyboard.c **** {
 505               		.loc 1 180 0
 506               		.cfi_startproc
 507               	.LVL35:
 508               	/* prologue: function */
 509               	/* frame size = 0 */
 510               	/* stack size = 0 */
 511               	.L__stack_usage = 0
 181:../../../../tmk_core/common/keyboard.c ****     led_set(leds);
 512               		.loc 1 181 0
 513 0000 0C94 0000 		jmp led_set
 514               	.LVL36:
 515               		.cfi_endproc
 516               	.LFE9:
 518               		.section	.bss.matrix_prev.2248,"aw",@nobits
 521               	matrix_prev.2248:
 522 0000 0000 0000 		.zero	16
 522      0000 0000 
 522      0000 0000 
 522      0000 0000 
 523               		.section	.bss.matrix_ghost.2249,"aw",@nobits
 526               	matrix_ghost.2249:
 527 0000 0000 0000 		.zero	16
 527      0000 0000 
 527      0000 0000 
 527      0000 0000 
 528               		.section	.bss.led_status.2250,"aw",@nobits
 531               	led_status.2250:
 532 0000 00        		.zero	1
 533               		.section	.progmem.data.__c.2268,"a",@progbits
 536               	__c.2268:
 537 0000 4C45 443A 		.string	"LED: %02X\n"
 537      2025 3032 
 537      580A 00
 538               		.text
 539               	.Letext0:
 540               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 541               		.file 3 "../../../../tmk_core/common/keyboard.h"
 542               		.file 4 "../../../../tmk_core/common/matrix.h"
 543               		.file 5 "../../../../tmk_core/common/debug.h"
 544               		.file 6 "../../../../tmk_core/common/timer.h"
 545               		.file 7 "../../../../tmk_core/common/action.h"
 546               		.file 8 "../../../../tmk_core/common/hook.h"
 547               		.file 9 "../../../../tmk_core/common/mousekey.h"
 548               		.file 10 "../../../../tmk_core/common/host.h"
 549               		.file 11 "../../../../tmk_core/common/avr/xprintf.h"
 550               		.file 12 "../../../../tmk_core/common/led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/cc7rDtDt.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc7rDtDt.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc7rDtDt.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc7rDtDt.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc7rDtDt.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc7rDtDt.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc7rDtDt.s:14     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cc7rDtDt.s:30     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/cc7rDtDt.s:47     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/cc7rDtDt.s:67     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/cc7rDtDt.s:521    .bss.matrix_prev.2248:0000000000000000 matrix_prev.2248
     /tmp/cc7rDtDt.s:526    .bss.matrix_ghost.2249:0000000000000000 matrix_ghost.2249
     /tmp/cc7rDtDt.s:531    .bss.led_status.2250:0000000000000000 led_status.2250
     /tmp/cc7rDtDt.s:536    .progmem.data.__c.2268:0000000000000000 __c.2268
     /tmp/cc7rDtDt.s:503    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
debug_config
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
