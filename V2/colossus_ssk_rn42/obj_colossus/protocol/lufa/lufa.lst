   1               		.file	"lufa.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.keyboard_leds,"ax",@progbits
  13               	keyboard_leds:
  14               	.LFB113:
  15               		.file 1 "../../../../tmk_core/protocol/lufa/lufa.c"
   1:../../../../tmk_core/protocol/lufa/lufa.c **** /* 
   2:../../../../tmk_core/protocol/lufa/lufa.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/protocol/lufa/lufa.c ****  * This file is based on:
   4:../../../../tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../../../tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../../../tmk_core/protocol/lufa/lufa.c ****  */
   7:../../../../tmk_core/protocol/lufa/lufa.c **** 
   8:../../../../tmk_core/protocol/lufa/lufa.c **** /*
   9:../../../../tmk_core/protocol/lufa/lufa.c ****              LUFA Library
  10:../../../../tmk_core/protocol/lufa/lufa.c ****      Copyright (C) Dean Camera, 2012.
  11:../../../../tmk_core/protocol/lufa/lufa.c **** 
  12:../../../../tmk_core/protocol/lufa/lufa.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../../../tmk_core/protocol/lufa/lufa.c ****            www.lufa-lib.org
  14:../../../../tmk_core/protocol/lufa/lufa.c **** */
  15:../../../../tmk_core/protocol/lufa/lufa.c **** 
  16:../../../../tmk_core/protocol/lufa/lufa.c **** /*
  17:../../../../tmk_core/protocol/lufa/lufa.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../../../tmk_core/protocol/lufa/lufa.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../../../tmk_core/protocol/lufa/lufa.c **** 
  20:../../../../tmk_core/protocol/lufa/lufa.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../../../tmk_core/protocol/lufa/lufa.c ****   software and its documentation for any purpose is hereby granted
  22:../../../../tmk_core/protocol/lufa/lufa.c ****   without fee, provided that the above copyright notice appear in
  23:../../../../tmk_core/protocol/lufa/lufa.c ****   all copies and that both that the copyright notice and this
  24:../../../../tmk_core/protocol/lufa/lufa.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../../../tmk_core/protocol/lufa/lufa.c ****   documentation, and that the name of the author not be used in
  26:../../../../tmk_core/protocol/lufa/lufa.c ****   advertising or publicity pertaining to distribution of the
  27:../../../../tmk_core/protocol/lufa/lufa.c ****   software without specific, written prior permission.
  28:../../../../tmk_core/protocol/lufa/lufa.c **** 
  29:../../../../tmk_core/protocol/lufa/lufa.c ****   The author disclaim all warranties with regard to this
  30:../../../../tmk_core/protocol/lufa/lufa.c ****   software, including all implied warranties of merchantability
  31:../../../../tmk_core/protocol/lufa/lufa.c ****   and fitness.  In no event shall the author be liable for any
  32:../../../../tmk_core/protocol/lufa/lufa.c ****   special, indirect or consequential damages or any damages
  33:../../../../tmk_core/protocol/lufa/lufa.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../../../tmk_core/protocol/lufa/lufa.c ****   in an action of contract, negligence or other tortious action,
  35:../../../../tmk_core/protocol/lufa/lufa.c ****   arising out of or in connection with the use or performance of
  36:../../../../tmk_core/protocol/lufa/lufa.c ****   this software.
  37:../../../../tmk_core/protocol/lufa/lufa.c **** */
  38:../../../../tmk_core/protocol/lufa/lufa.c **** 
  39:../../../../tmk_core/protocol/lufa/lufa.c **** #include "report.h"
  40:../../../../tmk_core/protocol/lufa/lufa.c **** #include "host.h"
  41:../../../../tmk_core/protocol/lufa/lufa.c **** #include "host_driver.h"
  42:../../../../tmk_core/protocol/lufa/lufa.c **** #include "keyboard.h"
  43:../../../../tmk_core/protocol/lufa/lufa.c **** #include "action.h"
  44:../../../../tmk_core/protocol/lufa/lufa.c **** #include "led.h"
  45:../../../../tmk_core/protocol/lufa/lufa.c **** #include "sendchar.h"
  46:../../../../tmk_core/protocol/lufa/lufa.c **** #include "debug.h"
  47:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
  48:../../../../tmk_core/protocol/lufa/lufa.c **** #include "sleep_led.h"
  49:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
  50:../../../../tmk_core/protocol/lufa/lufa.c **** #include "suspend.h"
  51:../../../../tmk_core/protocol/lufa/lufa.c **** #include "hook.h"
  52:../../../../tmk_core/protocol/lufa/lufa.c **** 
  53:../../../../tmk_core/protocol/lufa/lufa.c **** #include "descriptor.h"
  54:../../../../tmk_core/protocol/lufa/lufa.c **** #include "lufa.h"
  55:../../../../tmk_core/protocol/lufa/lufa.c **** 
  56:../../../../tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_idle = 0;
  57:../../../../tmk_core/protocol/lufa/lufa.c **** /* 0: Boot Protocol, 1: Report Protocol(default) */
  58:../../../../tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_protocol = 1;
  59:../../../../tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_led_stats = 0;
  60:../../../../tmk_core/protocol/lufa/lufa.c **** 
  61:../../../../tmk_core/protocol/lufa/lufa.c **** static report_keyboard_t keyboard_report_sent;
  62:../../../../tmk_core/protocol/lufa/lufa.c **** 
  63:../../../../tmk_core/protocol/lufa/lufa.c **** 
  64:../../../../tmk_core/protocol/lufa/lufa.c **** /* Host driver */
  65:../../../../tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void);
  66:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report);
  67:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report);
  68:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data);
  69:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data);
  70:../../../../tmk_core/protocol/lufa/lufa.c **** host_driver_t lufa_driver = {
  71:../../../../tmk_core/protocol/lufa/lufa.c ****     keyboard_leds,
  72:../../../../tmk_core/protocol/lufa/lufa.c ****     send_keyboard,
  73:../../../../tmk_core/protocol/lufa/lufa.c ****     send_mouse,
  74:../../../../tmk_core/protocol/lufa/lufa.c ****     send_system,
  75:../../../../tmk_core/protocol/lufa/lufa.c ****     send_consumer
  76:../../../../tmk_core/protocol/lufa/lufa.c **** };
  77:../../../../tmk_core/protocol/lufa/lufa.c **** 
  78:../../../../tmk_core/protocol/lufa/lufa.c **** 
  79:../../../../tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
  80:../../../../tmk_core/protocol/lufa/lufa.c ****  * Console
  81:../../../../tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
  82:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
  83:../../../../tmk_core/protocol/lufa/lufa.c **** static void Console_Task(void)
  84:../../../../tmk_core/protocol/lufa/lufa.c **** {
  85:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
  86:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
  87:../../../../tmk_core/protocol/lufa/lufa.c ****         return;
  88:../../../../tmk_core/protocol/lufa/lufa.c **** 
  89:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
  90:../../../../tmk_core/protocol/lufa/lufa.c **** 
  91:../../../../tmk_core/protocol/lufa/lufa.c **** #if 0
  92:../../../../tmk_core/protocol/lufa/lufa.c ****     // TODO: impl receivechar()/recvchar()
  93:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_OUT_EPNUM);
  94:../../../../tmk_core/protocol/lufa/lufa.c **** 
  95:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Check to see if a packet has been sent from the host */
  96:../../../../tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
  97:../../../../tmk_core/protocol/lufa/lufa.c ****     {
  98:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Check to see if the packet contains data */
  99:../../../../tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsReadWriteAllowed())
 100:../../../../tmk_core/protocol/lufa/lufa.c ****         {
 101:../../../../tmk_core/protocol/lufa/lufa.c ****             /* Create a temporary buffer to hold the read in report from the host */
 102:../../../../tmk_core/protocol/lufa/lufa.c ****             uint8_t ConsoleData[CONSOLE_EPSIZE];
 103:../../../../tmk_core/protocol/lufa/lufa.c ****  
 104:../../../../tmk_core/protocol/lufa/lufa.c ****             /* Read Console Report Data */
 105:../../../../tmk_core/protocol/lufa/lufa.c ****             Endpoint_Read_Stream_LE(&ConsoleData, sizeof(ConsoleData), NULL);
 106:../../../../tmk_core/protocol/lufa/lufa.c ****  
 107:../../../../tmk_core/protocol/lufa/lufa.c ****             /* Process Console Report Data */
 108:../../../../tmk_core/protocol/lufa/lufa.c ****             //ProcessConsoleHIDReport(ConsoleData);
 109:../../../../tmk_core/protocol/lufa/lufa.c ****         }
 110:../../../../tmk_core/protocol/lufa/lufa.c **** 
 111:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Finalize the stream transfer to send the last packet */
 112:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearOUT();
 113:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 114:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 115:../../../../tmk_core/protocol/lufa/lufa.c **** 
 116:../../../../tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 117:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 118:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 119:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 120:../../../../tmk_core/protocol/lufa/lufa.c ****         return;
 121:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 122:../../../../tmk_core/protocol/lufa/lufa.c **** 
 123:../../../../tmk_core/protocol/lufa/lufa.c ****     // fill empty bank
 124:../../../../tmk_core/protocol/lufa/lufa.c ****     while (Endpoint_IsReadWriteAllowed())
 125:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_8(0);
 126:../../../../tmk_core/protocol/lufa/lufa.c **** 
 127:../../../../tmk_core/protocol/lufa/lufa.c ****     // flash senchar packet
 128:../../../../tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 129:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 130:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 131:../../../../tmk_core/protocol/lufa/lufa.c **** 
 132:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 133:../../../../tmk_core/protocol/lufa/lufa.c **** }
 134:../../../../tmk_core/protocol/lufa/lufa.c **** #else
 135:../../../../tmk_core/protocol/lufa/lufa.c **** static void Console_Task(void)
 136:../../../../tmk_core/protocol/lufa/lufa.c **** {
 137:../../../../tmk_core/protocol/lufa/lufa.c **** }
 138:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 139:../../../../tmk_core/protocol/lufa/lufa.c **** 
 140:../../../../tmk_core/protocol/lufa/lufa.c **** 
 141:../../../../tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 142:../../../../tmk_core/protocol/lufa/lufa.c ****  * USB Events
 143:../../../../tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 144:../../../../tmk_core/protocol/lufa/lufa.c **** /*
 145:../../../../tmk_core/protocol/lufa/lufa.c ****  * Event Order of Plug in:
 146:../../../../tmk_core/protocol/lufa/lufa.c ****  * 0) EVENT_USB_Device_Connect
 147:../../../../tmk_core/protocol/lufa/lufa.c ****  * 1) EVENT_USB_Device_Suspend
 148:../../../../tmk_core/protocol/lufa/lufa.c ****  * 2) EVENT_USB_Device_Reset
 149:../../../../tmk_core/protocol/lufa/lufa.c ****  * 3) EVENT_USB_Device_Wake
 150:../../../../tmk_core/protocol/lufa/lufa.c **** */
 151:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Connect(void)
 152:../../../../tmk_core/protocol/lufa/lufa.c **** {
 153:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 154:../../../../tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 155:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!USB_IsInitialized) {
 156:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 157:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 158:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 159:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 160:../../../../tmk_core/protocol/lufa/lufa.c **** }
 161:../../../../tmk_core/protocol/lufa/lufa.c **** 
 162:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Disconnect(void)
 163:../../../../tmk_core/protocol/lufa/lufa.c **** {
 164:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 165:../../../../tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 166:../../../../tmk_core/protocol/lufa/lufa.c ****     USB_IsInitialized = false;
 167:../../../../tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated. 
 168:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_IsInitialized) {
 169:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_Disable();  // Disable all interrupts
 170:../../../../tmk_core/protocol/lufa/lufa.c **** 	USB_Controller_Enable();
 171:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_INT_Enable(USB_INT_VBUSTI);
 172:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 173:../../../../tmk_core/protocol/lufa/lufa.c **** */
 174:../../../../tmk_core/protocol/lufa/lufa.c **** }
 175:../../../../tmk_core/protocol/lufa/lufa.c **** 
 176:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Reset(void)
 177:../../../../tmk_core/protocol/lufa/lufa.c **** {
 178:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[R]");
 179:../../../../tmk_core/protocol/lufa/lufa.c **** }
 180:../../../../tmk_core/protocol/lufa/lufa.c **** 
 181:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Suspend()
 182:../../../../tmk_core/protocol/lufa/lufa.c **** {
 183:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 184:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_usb_suspend_entry();
 185:../../../../tmk_core/protocol/lufa/lufa.c **** }
 186:../../../../tmk_core/protocol/lufa/lufa.c **** 
 187:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_WakeUp()
 188:../../../../tmk_core/protocol/lufa/lufa.c **** {
 189:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 190:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_usb_wakeup();
 191:../../../../tmk_core/protocol/lufa/lufa.c **** }
 192:../../../../tmk_core/protocol/lufa/lufa.c **** 
 193:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 194:../../../../tmk_core/protocol/lufa/lufa.c **** static bool console_flush = false;
 195:../../../../tmk_core/protocol/lufa/lufa.c **** #define CONSOLE_FLUSH_SET(b)   do { \
 196:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t sreg = SREG; cli(); console_flush = b; SREG = sreg; \
 197:../../../../tmk_core/protocol/lufa/lufa.c **** } while (0)
 198:../../../../tmk_core/protocol/lufa/lufa.c **** 
 199:../../../../tmk_core/protocol/lufa/lufa.c **** // called every 1ms
 200:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_StartOfFrame(void)
 201:../../../../tmk_core/protocol/lufa/lufa.c **** {
 202:../../../../tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 203:../../../../tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 204:../../../../tmk_core/protocol/lufa/lufa.c ****     count = 0;
 205:../../../../tmk_core/protocol/lufa/lufa.c **** 
 206:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!console_flush) return;
 207:../../../../tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 208:../../../../tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 209:../../../../tmk_core/protocol/lufa/lufa.c **** }
 210:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 211:../../../../tmk_core/protocol/lufa/lufa.c **** 
 212:../../../../tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ConfigurationChanged event.
 213:../../../../tmk_core/protocol/lufa/lufa.c ****  * This is fired when the host sets the current configuration of the USB device after enumeration.
 214:../../../../tmk_core/protocol/lufa/lufa.c ****  *
 215:../../../../tmk_core/protocol/lufa/lufa.c ****  * ATMega32u2 supports dual bank(ping-pong mode) only on endpoint 3 and 4,
 216:../../../../tmk_core/protocol/lufa/lufa.c ****  * it is safe to use singl bank for all endpoints.
 217:../../../../tmk_core/protocol/lufa/lufa.c ****  */
 218:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 219:../../../../tmk_core/protocol/lufa/lufa.c **** {
 220:../../../../tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 221:../../../../tmk_core/protocol/lufa/lufa.c **** 
 222:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Setup Keyboard HID Report Endpoints */
 223:../../../../tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(KEYBOARD_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 224:../../../../tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 225:../../../../tmk_core/protocol/lufa/lufa.c **** 
 226:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 227:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Setup Mouse HID Report Endpoint */
 228:../../../../tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(MOUSE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 229:../../../../tmk_core/protocol/lufa/lufa.c ****                                      MOUSE_EPSIZE, ENDPOINT_BANK_SINGLE);
 230:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 231:../../../../tmk_core/protocol/lufa/lufa.c **** 
 232:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 233:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Setup Extra HID Report Endpoint */
 234:../../../../tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(EXTRAKEY_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 235:../../../../tmk_core/protocol/lufa/lufa.c ****                                      EXTRAKEY_EPSIZE, ENDPOINT_BANK_SINGLE);
 236:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 237:../../../../tmk_core/protocol/lufa/lufa.c **** 
 238:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 239:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Setup Console HID Report Endpoints */
 240:../../../../tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 241:../../../../tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 242:../../../../tmk_core/protocol/lufa/lufa.c **** #if 0
 243:../../../../tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 244:../../../../tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 245:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 246:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 247:../../../../tmk_core/protocol/lufa/lufa.c **** 
 248:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 249:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Setup NKRO HID Report Endpoints */
 250:../../../../tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(NKRO_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 251:../../../../tmk_core/protocol/lufa/lufa.c ****                                      NKRO_EPSIZE, ENDPOINT_BANK_SINGLE);
 252:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 253:../../../../tmk_core/protocol/lufa/lufa.c **** }
 254:../../../../tmk_core/protocol/lufa/lufa.c **** 
 255:../../../../tmk_core/protocol/lufa/lufa.c **** /*
 256:../../../../tmk_core/protocol/lufa/lufa.c **** Appendix G: HID Request Support Requirements
 257:../../../../tmk_core/protocol/lufa/lufa.c **** 
 258:../../../../tmk_core/protocol/lufa/lufa.c **** The following table enumerates the requests that need to be supported by various types of HID class
 259:../../../../tmk_core/protocol/lufa/lufa.c **** 
 260:../../../../tmk_core/protocol/lufa/lufa.c **** Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 261:../../../../tmk_core/protocol/lufa/lufa.c **** ------------------------------------------------------------------------------------------
 262:../../../../tmk_core/protocol/lufa/lufa.c **** Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 263:../../../../tmk_core/protocol/lufa/lufa.c **** Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 264:../../../../tmk_core/protocol/lufa/lufa.c **** Boot Keyboard   Required    Optional    Required    Required    Required    Required
 265:../../../../tmk_core/protocol/lufa/lufa.c **** Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 266:../../../../tmk_core/protocol/lufa/lufa.c **** Other Device    Required    Optional    Optional    Optional    Optional    Optional
 267:../../../../tmk_core/protocol/lufa/lufa.c **** */
 268:../../../../tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ControlRequest event.
 269:../../../../tmk_core/protocol/lufa/lufa.c ****  *  This is fired before passing along unhandled control requests to the library for processing int
 270:../../../../tmk_core/protocol/lufa/lufa.c ****  */
 271:../../../../tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ControlRequest(void)
 272:../../../../tmk_core/protocol/lufa/lufa.c **** {
 273:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 274:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 275:../../../../tmk_core/protocol/lufa/lufa.c **** 
 276:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Handle HID Class specific requests */
 277:../../../../tmk_core/protocol/lufa/lufa.c ****     switch (USB_ControlRequest.bRequest)
 278:../../../../tmk_core/protocol/lufa/lufa.c ****     {
 279:../../../../tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 280:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 281:../../../../tmk_core/protocol/lufa/lufa.c ****             {
 282:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 283:../../../../tmk_core/protocol/lufa/lufa.c **** 
 284:../../../../tmk_core/protocol/lufa/lufa.c ****                 // Interface
 285:../../../../tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 286:../../../../tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 287:../../../../tmk_core/protocol/lufa/lufa.c ****                     // TODO: test/check
 288:../../../../tmk_core/protocol/lufa/lufa.c ****                     ReportData = (uint8_t*)&keyboard_report_sent;
 289:../../../../tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 290:../../../../tmk_core/protocol/lufa/lufa.c ****                     break;
 291:../../../../tmk_core/protocol/lufa/lufa.c ****                 }
 292:../../../../tmk_core/protocol/lufa/lufa.c **** 
 293:../../../../tmk_core/protocol/lufa/lufa.c ****                 /* Write the report data to the control endpoint */
 294:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
 295:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 296:../../../../tmk_core/protocol/lufa/lufa.c ****             }
 297:../../../../tmk_core/protocol/lufa/lufa.c **** 
 298:../../../../tmk_core/protocol/lufa/lufa.c ****             break;
 299:../../../../tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetReport:
 300:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 301:../../../../tmk_core/protocol/lufa/lufa.c ****             {
 302:../../../../tmk_core/protocol/lufa/lufa.c **** 
 303:../../../../tmk_core/protocol/lufa/lufa.c ****                 // Interface
 304:../../../../tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 305:../../../../tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 306:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 307:../../../../tmk_core/protocol/lufa/lufa.c ****                 case NKRO_INTERFACE:
 308:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 309:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 310:../../../../tmk_core/protocol/lufa/lufa.c **** 
 311:../../../../tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsOUTReceived())) {
 312:../../../../tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 313:../../../../tmk_core/protocol/lufa/lufa.c ****                           return;
 314:../../../../tmk_core/protocol/lufa/lufa.c ****                     }
 315:../../../../tmk_core/protocol/lufa/lufa.c ****                     keyboard_led_stats = Endpoint_Read_8();
 316:../../../../tmk_core/protocol/lufa/lufa.c **** 
 317:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearOUT();
 318:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 319:../../../../tmk_core/protocol/lufa/lufa.c ****                     break;
 320:../../../../tmk_core/protocol/lufa/lufa.c ****                 }
 321:../../../../tmk_core/protocol/lufa/lufa.c **** 
 322:../../../../tmk_core/protocol/lufa/lufa.c ****             }
 323:../../../../tmk_core/protocol/lufa/lufa.c **** 
 324:../../../../tmk_core/protocol/lufa/lufa.c ****             break;
 325:../../../../tmk_core/protocol/lufa/lufa.c **** 
 326:../../../../tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetProtocol:
 327:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 328:../../../../tmk_core/protocol/lufa/lufa.c ****             {
 329:../../../../tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 330:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 331:../../../../tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 332:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 333:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 334:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 335:../../../../tmk_core/protocol/lufa/lufa.c ****                 }
 336:../../../../tmk_core/protocol/lufa/lufa.c ****             }
 337:../../../../tmk_core/protocol/lufa/lufa.c **** 
 338:../../../../tmk_core/protocol/lufa/lufa.c ****             break;
 339:../../../../tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetProtocol:
 340:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 341:../../../../tmk_core/protocol/lufa/lufa.c ****             {
 342:../../../../tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 343:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 344:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 345:../../../../tmk_core/protocol/lufa/lufa.c **** 
 346:../../../../tmk_core/protocol/lufa/lufa.c ****                     keyboard_protocol = (USB_ControlRequest.wValue & 0xFF);
 347:../../../../tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 348:../../../../tmk_core/protocol/lufa/lufa.c ****                 }
 349:../../../../tmk_core/protocol/lufa/lufa.c ****             }
 350:../../../../tmk_core/protocol/lufa/lufa.c **** 
 351:../../../../tmk_core/protocol/lufa/lufa.c ****             break;
 352:../../../../tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetIdle:
 353:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 354:../../../../tmk_core/protocol/lufa/lufa.c ****             {
 355:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 356:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 357:../../../../tmk_core/protocol/lufa/lufa.c **** 
 358:../../../../tmk_core/protocol/lufa/lufa.c ****                 keyboard_idle = ((USB_ControlRequest.wValue & 0xFF00) >> 8);
 359:../../../../tmk_core/protocol/lufa/lufa.c ****             }
 360:../../../../tmk_core/protocol/lufa/lufa.c **** 
 361:../../../../tmk_core/protocol/lufa/lufa.c ****             break;
 362:../../../../tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetIdle:
 363:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 364:../../../../tmk_core/protocol/lufa/lufa.c ****             {
 365:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 366:../../../../tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 367:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 368:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 369:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 370:../../../../tmk_core/protocol/lufa/lufa.c ****             }
 371:../../../../tmk_core/protocol/lufa/lufa.c **** 
 372:../../../../tmk_core/protocol/lufa/lufa.c ****             break;
 373:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 374:../../../../tmk_core/protocol/lufa/lufa.c **** }
 375:../../../../tmk_core/protocol/lufa/lufa.c **** 
 376:../../../../tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 377:../../../../tmk_core/protocol/lufa/lufa.c ****  * Host driver 
 378:../../../../tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 379:../../../../tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void)
 380:../../../../tmk_core/protocol/lufa/lufa.c **** {
  16               		.loc 1 380 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 381:../../../../tmk_core/protocol/lufa/lufa.c ****     return keyboard_led_stats;
 382:../../../../tmk_core/protocol/lufa/lufa.c **** }
  22               		.loc 1 382 0
  23 0000 8091 0000 		lds r24,keyboard_led_stats
  24 0004 0895      		ret
  25               		.cfi_endproc
  26               	.LFE113:
  28               		.section	.text.sendchar,"ax",@progbits
  29               	.global	sendchar
  31               	sendchar:
  32               	.LFB118:
 383:../../../../tmk_core/protocol/lufa/lufa.c **** 
 384:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report)
 385:../../../../tmk_core/protocol/lufa/lufa.c **** {
 386:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 387:../../../../tmk_core/protocol/lufa/lufa.c **** 
 388:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 389:../../../../tmk_core/protocol/lufa/lufa.c ****         return;
 390:../../../../tmk_core/protocol/lufa/lufa.c **** 
 391:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Select the Keyboard Report Endpoint */
 392:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 393:../../../../tmk_core/protocol/lufa/lufa.c ****     if (keyboard_protocol && keyboard_nkro) {
 394:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 395:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(NKRO_IN_EPNUM);
 396:../../../../tmk_core/protocol/lufa/lufa.c **** 
 397:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 1ms */
 398:../../../../tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(4);
 399:../../../../tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 400:../../../../tmk_core/protocol/lufa/lufa.c **** 
 401:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 402:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, NKRO_EPSIZE, NULL);
 403:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 404:../../../../tmk_core/protocol/lufa/lufa.c ****     else
 405:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 406:../../../../tmk_core/protocol/lufa/lufa.c ****     {
 407:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Boot protocol */
 408:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(KEYBOARD_IN_EPNUM);
 409:../../../../tmk_core/protocol/lufa/lufa.c **** 
 410:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 10ms */
 411:../../../../tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 412:../../../../tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 413:../../../../tmk_core/protocol/lufa/lufa.c **** 
 414:../../../../tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 415:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, KEYBOARD_EPSIZE, NULL);
 416:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 417:../../../../tmk_core/protocol/lufa/lufa.c **** 
 418:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 419:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 420:../../../../tmk_core/protocol/lufa/lufa.c **** 
 421:../../../../tmk_core/protocol/lufa/lufa.c ****     keyboard_report_sent = *report;
 422:../../../../tmk_core/protocol/lufa/lufa.c **** }
 423:../../../../tmk_core/protocol/lufa/lufa.c **** 
 424:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report)
 425:../../../../tmk_core/protocol/lufa/lufa.c **** {
 426:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 427:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 428:../../../../tmk_core/protocol/lufa/lufa.c **** 
 429:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 430:../../../../tmk_core/protocol/lufa/lufa.c ****         return;
 431:../../../../tmk_core/protocol/lufa/lufa.c **** 
 432:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Select the Mouse Report Endpoint */
 433:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MOUSE_IN_EPNUM);
 434:../../../../tmk_core/protocol/lufa/lufa.c **** 
 435:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 436:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 437:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 438:../../../../tmk_core/protocol/lufa/lufa.c **** 
 439:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Write Mouse Report Data */
 440:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(report, sizeof(report_mouse_t), NULL);
 441:../../../../tmk_core/protocol/lufa/lufa.c **** 
 442:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 443:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 444:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 445:../../../../tmk_core/protocol/lufa/lufa.c **** }
 446:../../../../tmk_core/protocol/lufa/lufa.c **** 
 447:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data)
 448:../../../../tmk_core/protocol/lufa/lufa.c **** {
 449:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 450:../../../../tmk_core/protocol/lufa/lufa.c **** 
 451:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 452:../../../../tmk_core/protocol/lufa/lufa.c ****         return;
 453:../../../../tmk_core/protocol/lufa/lufa.c **** 
 454:../../../../tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 455:../../../../tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 456:../../../../tmk_core/protocol/lufa/lufa.c ****         .usage = data
 457:../../../../tmk_core/protocol/lufa/lufa.c ****     };
 458:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
 459:../../../../tmk_core/protocol/lufa/lufa.c **** 
 460:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 461:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 462:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 463:../../../../tmk_core/protocol/lufa/lufa.c **** 
 464:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 465:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 466:../../../../tmk_core/protocol/lufa/lufa.c **** }
 467:../../../../tmk_core/protocol/lufa/lufa.c **** 
 468:../../../../tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data)
 469:../../../../tmk_core/protocol/lufa/lufa.c **** {
 470:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 471:../../../../tmk_core/protocol/lufa/lufa.c **** 
 472:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 473:../../../../tmk_core/protocol/lufa/lufa.c ****         return;
 474:../../../../tmk_core/protocol/lufa/lufa.c **** 
 475:../../../../tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 476:../../../../tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 477:../../../../tmk_core/protocol/lufa/lufa.c ****         .usage = data
 478:../../../../tmk_core/protocol/lufa/lufa.c ****     };
 479:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
 480:../../../../tmk_core/protocol/lufa/lufa.c **** 
 481:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 482:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 483:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 484:../../../../tmk_core/protocol/lufa/lufa.c **** 
 485:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 486:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 487:../../../../tmk_core/protocol/lufa/lufa.c **** }
 488:../../../../tmk_core/protocol/lufa/lufa.c **** 
 489:../../../../tmk_core/protocol/lufa/lufa.c **** 
 490:../../../../tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 491:../../../../tmk_core/protocol/lufa/lufa.c ****  * sendchar
 492:../../../../tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 493:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 494:../../../../tmk_core/protocol/lufa/lufa.c **** #define SEND_TIMEOUT 5
 495:../../../../tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 496:../../../../tmk_core/protocol/lufa/lufa.c **** {
  33               		.loc 1 496 0
  34               		.cfi_startproc
  35               	.LVL0:
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  40               	.LBB161:
 497:../../../../tmk_core/protocol/lufa/lufa.c ****     // Not wait once timeouted.
 498:../../../../tmk_core/protocol/lufa/lufa.c ****     // Because sendchar() is called so many times, waiting each call causes big lag.
 499:../../../../tmk_core/protocol/lufa/lufa.c ****     static bool timeouted = false;
 500:../../../../tmk_core/protocol/lufa/lufa.c **** 
 501:../../../../tmk_core/protocol/lufa/lufa.c ****     // prevents Console_Task() from running during sendchar() runs.
 502:../../../../tmk_core/protocol/lufa/lufa.c ****     // or char will be lost. These two function is mutually exclusive.
 503:../../../../tmk_core/protocol/lufa/lufa.c ****     CONSOLE_FLUSH_SET(false);
  41               		.loc 1 503 0
  42 0000 9FB7      		in r25,__SREG__
  43               	.LVL1:
  44               	/* #APP */
  45               	 ;  503 "../../../../tmk_core/protocol/lufa/lufa.c" 1
  46 0002 F894      		cli
  47               	 ;  0 "" 2
  48               	/* #NOAPP */
  49 0004 1092 0000 		sts console_flush,__zero_reg__
  50 0008 9FBF      		out __SREG__,r25
  51               	.LBE161:
 504:../../../../tmk_core/protocol/lufa/lufa.c **** 
 505:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
  52               		.loc 1 505 0
  53 000a 9091 0000 		lds r25,USB_DeviceState
  54               	.LVL2:
  55 000e 9430      		cpi r25,lo8(4)
  56 0010 01F0      		breq .+2
  57 0012 00C0      		rjmp .L14
  58               	.LBB162:
  59               	.LBB163:
  60               		.file 2 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_A
   1:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
  61               		.loc 2 253 0
  62 0014 9091 E900 		lds r25,233
  63               	.LBE163:
  64 0018 9F70      		andi r25,lo8(15)
  65               	.LBB166:
  66               	.LBB164:
  67               	.LBB165:
 240:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
  68               		.loc 2 240 0
  69 001a 2091 EC00 		lds r18,236
  70 001e 20FF      		sbrs r18,0
  71 0020 00C0      		rjmp .L15
  72 0022 20E8      		ldi r18,lo8(-128)
  73 0024 00C0      		rjmp .L4
  74               	.L15:
  75 0026 20E0      		ldi r18,0
  76               	.L4:
  77               	.LBE165:
  78               	.LBE164:
  79               	.LBE166:
  80               		.loc 2 253 0
  81 0028 292B      		or r18,r25
  82               	.LVL3:
  83               	.LBE162:
  84               	.LBB167:
  85               	.LBB168:
 254:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
  86               		.loc 2 270 0
  87 002a 94E0      		ldi r25,lo8(4)
  88 002c 9093 E900 		sts 233,r25
  89               	.LBE168:
  90               	.LBE167:
  91               	.LBB169:
  92               	.LBB170:
 271:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
  93               		.loc 2 313 0
  94 0030 9091 EB00 		lds r25,235
  95               	.LBE170:
  96               	.LBE169:
 506:../../../../tmk_core/protocol/lufa/lufa.c ****         return -1;
 507:../../../../tmk_core/protocol/lufa/lufa.c **** 
 508:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 509:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 510:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
  97               		.loc 1 510 0
  98 0034 90FF      		sbrs r25,0
  99 0036 00C0      		rjmp .L9
 100               	.LBB171:
 101               	.LBB172:
 314:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 102               		.loc 2 370 0
 103 0038 9091 EE00 		lds r25,238
 104               	.LBE172:
 105               	.LBE171:
 106               		.loc 1 510 0
 107 003c 97FF      		sbrs r25,7
 108 003e 00C0      		rjmp .L9
 511:../../../../tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 512:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 513:../../../../tmk_core/protocol/lufa/lufa.c **** 
 514:../../../../tmk_core/protocol/lufa/lufa.c ****     if (timeouted && !Endpoint_IsReadWriteAllowed()) {
 109               		.loc 1 514 0
 110 0040 9091 0000 		lds r25,timeouted.4650
 111 0044 9923      		tst r25
 112 0046 01F0      		breq .L6
 113               	.LBB173:
 114               	.LBB174:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 115               		.loc 2 360 0
 116 0048 9091 E800 		lds r25,232
 117               	.LBE174:
 118               	.LBE173:
 119               		.loc 1 514 0
 120 004c 95FF      		sbrs r25,5
 121 004e 00C0      		rjmp .L9
 122               	.L6:
 515:../../../../tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 516:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 517:../../../../tmk_core/protocol/lufa/lufa.c **** 
 518:../../../../tmk_core/protocol/lufa/lufa.c ****     timeouted = false;
 123               		.loc 1 518 0
 124 0050 1092 0000 		sts timeouted.4650,__zero_reg__
 125               	.LVL4:
 519:../../../../tmk_core/protocol/lufa/lufa.c **** 
 520:../../../../tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = SEND_TIMEOUT;
 521:../../../../tmk_core/protocol/lufa/lufa.c ****     while (!Endpoint_IsReadWriteAllowed()) {
 126               		.loc 1 521 0
 127 0054 96E0      		ldi r25,lo8(6)
 128 0056 00C0      		rjmp .L7
 129               	.LVL5:
 130               	.L10:
 522:../../../../tmk_core/protocol/lufa/lufa.c ****         if (USB_DeviceState != DEVICE_STATE_Configured) {
 131               		.loc 1 522 0
 132 0058 3091 0000 		lds r19,USB_DeviceState
 133 005c 3430      		cpi r19,lo8(4)
 134 005e 01F4      		brne .L9
 135               	.LBB175:
 136               	.LBB176:
 371:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 137               		.loc 2 513 0
 138 0060 3091 EB00 		lds r19,235
 139               	.LBE176:
 140               	.LBE175:
 523:../../../../tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 524:../../../../tmk_core/protocol/lufa/lufa.c ****         }
 525:../../../../tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsStalled()) {
 141               		.loc 1 525 0
 142 0064 35FD      		sbrc r19,5
 143 0066 00C0      		rjmp .L9
 144 0068 9150      		subi r25,lo8(-(-1))
 526:../../../../tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 527:../../../../tmk_core/protocol/lufa/lufa.c ****         }
 528:../../../../tmk_core/protocol/lufa/lufa.c ****         if (!(timeout--)) {
 145               		.loc 1 528 0
 146 006a 01F4      		brne .L8
 529:../../../../tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 147               		.loc 1 529 0
 148 006c 81E0      		ldi r24,lo8(1)
 149               	.LVL6:
 150 006e 8093 0000 		sts timeouted.4650,r24
 530:../../../../tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 151               		.loc 1 530 0
 152 0072 00C0      		rjmp .L9
 153               	.LVL7:
 154               	.L8:
 155               	.LBB177:
 156               	.LBB178:
 157               		.file 3 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h"
   1:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
   6:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
   9:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  12:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  17:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  21:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  33:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  35:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  38:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  41:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  42:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  46:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \code
  49:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  54:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     used.
  58:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  59:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  68:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  77:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  81:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** */
  82:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  83:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  87:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  88:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  93:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  94:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
  97:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
  98:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
 103:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 104:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /**
 105:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 107:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 109:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 112:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 114:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 120:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 125:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 129:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 132:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 140:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****  */
 141:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** void
 142:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** {
 144:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 153:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 156:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 159:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 164:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 158               		.loc 3 164 0
 159 0074 EFEC      		ldi r30,lo8(1999)
 160 0076 F7E0      		ldi r31,hi8(1999)
 161 0078 3197      		1: sbiw r30,1
 162 007a 01F4      		brne 1b
 163 007c 00C0      		rjmp .
 164 007e 0000      		nop
 165               	.LVL8:
 166               	.L7:
 167               	.LBE178:
 168               	.LBE177:
 169               	.LBB179:
 170               	.LBB180:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 171               		.loc 2 360 0 discriminator 1
 172 0080 3091 E800 		lds r19,232
 173               	.LBE180:
 174               	.LBE179:
 521:../../../../tmk_core/protocol/lufa/lufa.c ****     while (!Endpoint_IsReadWriteAllowed()) {
 175               		.loc 1 521 0 discriminator 1
 176 0084 35FF      		sbrs r19,5
 177 0086 00C0      		rjmp .L10
 178               	.LVL9:
 179               	.LBB181:
 180               	.LBB182:
 514:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 543:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 553:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 181               		.loc 2 554 0
 182 0088 8093 F100 		sts 241,r24
 183               	.LBE182:
 184               	.LBE181:
 185               	.LBB183:
 186               	.LBB184:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 187               		.loc 2 360 0
 188 008c 8091 E800 		lds r24,232
 189               	.LVL10:
 190               	.LBE184:
 191               	.LBE183:
 531:../../../../tmk_core/protocol/lufa/lufa.c ****         }
 532:../../../../tmk_core/protocol/lufa/lufa.c ****         _delay_ms(1);
 533:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 534:../../../../tmk_core/protocol/lufa/lufa.c **** 
 535:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(c);
 536:../../../../tmk_core/protocol/lufa/lufa.c **** 
 537:../../../../tmk_core/protocol/lufa/lufa.c ****     // send when bank is full
 538:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) {
 192               		.loc 1 538 0
 193 0090 85FD      		sbrc r24,5
 194 0092 00C0      		rjmp .L11
 195               	.L24:
 196               	.LBB185:
 197               	.LBB186:
 407:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 198               		.loc 2 407 0
 199 0094 8091 E800 		lds r24,232
 200               	.LBE186:
 201               	.LBE185:
 539:../../../../tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()));
 202               		.loc 1 539 0
 203 0098 80FF      		sbrs r24,0
 204 009a 00C0      		rjmp .L24
 205               	.LBB187:
 206               	.LBB188:
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 207               		.loc 2 456 0
 208 009c 8091 E800 		lds r24,232
 209 00a0 8E77      		andi r24,lo8(126)
 210 00a2 8093 E800 		sts 232,r24
 211 00a6 00C0      		rjmp .L13
 212               	.L11:
 213               	.LBE188:
 214               	.LBE187:
 215               	.LBB189:
 540:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 541:../../../../tmk_core/protocol/lufa/lufa.c ****     } else {
 542:../../../../tmk_core/protocol/lufa/lufa.c ****         CONSOLE_FLUSH_SET(true);
 216               		.loc 1 542 0
 217 00a8 8FB7      		in r24,__SREG__
 218               	.LVL11:
 219               	/* #APP */
 220               	 ;  542 "../../../../tmk_core/protocol/lufa/lufa.c" 1
 221 00aa F894      		cli
 222               	 ;  0 "" 2
 223               	/* #NOAPP */
 224 00ac 91E0      		ldi r25,lo8(1)
 225 00ae 9093 0000 		sts console_flush,r25
 226 00b2 8FBF      		out __SREG__,r24
 227               	.LVL12:
 228               	.L13:
 229               	.LBE189:
 230               	.LBB190:
 231               	.LBB191:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 232               		.loc 2 270 0
 233 00b4 2F70      		andi r18,lo8(15)
 234               	.LVL13:
 235 00b6 2093 E900 		sts 233,r18
 236               	.LBE191:
 237               	.LBE190:
 543:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 544:../../../../tmk_core/protocol/lufa/lufa.c **** 
 545:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 546:../../../../tmk_core/protocol/lufa/lufa.c ****     return 0;
 238               		.loc 1 546 0
 239 00ba 80E0      		ldi r24,0
 240 00bc 0895      		ret
 241               	.LVL14:
 242               	.L9:
 243               	.LBB192:
 244               	.LBB193:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 245               		.loc 2 270 0
 246 00be 2F70      		andi r18,lo8(15)
 247               	.LVL15:
 248 00c0 2093 E900 		sts 233,r18
 249               	.LVL16:
 250               	.L14:
 251               	.LBE193:
 252               	.LBE192:
 506:../../../../tmk_core/protocol/lufa/lufa.c ****         return -1;
 253               		.loc 1 506 0
 254 00c4 8FEF      		ldi r24,lo8(-1)
 547:../../../../tmk_core/protocol/lufa/lufa.c **** ERROR_EXIT:
 548:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 549:../../../../tmk_core/protocol/lufa/lufa.c ****     return -1;
 550:../../../../tmk_core/protocol/lufa/lufa.c **** }
 255               		.loc 1 550 0
 256 00c6 0895      		ret
 257               		.cfi_endproc
 258               	.LFE118:
 260               		.section	.text.send_consumer,"ax",@progbits
 262               	send_consumer:
 263               	.LFB117:
 469:../../../../tmk_core/protocol/lufa/lufa.c **** {
 264               		.loc 1 469 0
 265               		.cfi_startproc
 266               	.LVL17:
 267 0000 CF93      		push r28
 268               	.LCFI0:
 269               		.cfi_def_cfa_offset 3
 270               		.cfi_offset 28, -2
 271 0002 DF93      		push r29
 272               	.LCFI1:
 273               		.cfi_def_cfa_offset 4
 274               		.cfi_offset 29, -3
 275 0004 00D0      		rcall .
 276 0006 1F92      		push __zero_reg__
 277               	.LCFI2:
 278               		.cfi_def_cfa_offset 7
 279 0008 CDB7      		in r28,__SP_L__
 280 000a DEB7      		in r29,__SP_H__
 281               	.LCFI3:
 282               		.cfi_def_cfa_register 28
 283               	/* prologue: function */
 284               	/* frame size = 3 */
 285               	/* stack size = 5 */
 286               	.L__stack_usage = 5
 287               	.LVL18:
 472:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 288               		.loc 1 472 0
 289 000c 2091 0000 		lds r18,USB_DeviceState
 290 0010 2430      		cpi r18,lo8(4)
 291 0012 01F4      		brne .L30
 475:../../../../tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 292               		.loc 1 475 0
 293 0014 23E0      		ldi r18,lo8(3)
 294 0016 2983      		std Y+1,r18
 295 0018 9B83      		std Y+3,r25
 296 001a 8A83      		std Y+2,r24
 297               	.LVL19:
 298               	.LBB194:
 299               	.LBB195:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 300               		.loc 2 270 0
 301 001c 2093 E900 		sts 233,r18
 302               	.LVL20:
 303 0020 8FEF      		ldi r24,lo8(-1)
 304               	.LVL21:
 305 0022 00C0      		rjmp .L32
 306               	.L34:
 307               	.LVL22:
 308               	.LBE195:
 309               	.LBE194:
 310               	.LBB196:
 311               	.LBB197:
 165:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 166:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #else
 167:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 170:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	{
 172:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		while(__ticks)
 175:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		{
 176:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 			__ticks --;
 179:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		}
 180:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		return;
 181:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	}
 182:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	else
 183:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #endif
 186:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** }
 187:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 188:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** /**
 189:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 190:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 191:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 193:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 194:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 196:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 198:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    will not be informed about this case.
 201:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 202:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 205:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   
 207:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 211:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****  
 214:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 218:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 222:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****  */
 223:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** void
 224:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** _delay_us(double __us)
 225:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** {
 226:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	uint8_t __ticks;
 227:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 228:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 229:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 230:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 231:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 232:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 233:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 234:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 235:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 236:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 237:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 238:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 239:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 240:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 241:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#else
 242:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		//round up by default
 243:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 244:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	#endif
 245:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 
 246:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 312               		.loc 3 246 0
 313 0024 9AE6      		ldi r25,lo8(106)
 314 0026 9A95      		1: dec r25
 315 0028 01F4      		brne 1b
 316 002a 00C0      		rjmp .
 317               	.LBE197:
 318               	.LBE196:
 482:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 319               		.loc 1 482 0
 320 002c 8823      		tst r24
 321 002e 01F0      		breq .L33
 322               	.LVL23:
 323               	.L32:
 324               	.LBB198:
 325               	.LBB199:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 326               		.loc 2 360 0
 327 0030 9091 E800 		lds r25,232
 328 0034 8150      		subi r24,lo8(-(-1))
 329               	.LBE199:
 330               	.LBE198:
 482:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 331               		.loc 1 482 0
 332 0036 95FF      		sbrs r25,5
 333 0038 00C0      		rjmp .L34
 334               	.L33:
 335               	.LBB200:
 336               	.LBB201:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 337               		.loc 2 360 0
 338 003a 8091 E800 		lds r24,232
 339               	.LBE201:
 340               	.LBE200:
 483:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 341               		.loc 1 483 0
 342 003e 85FF      		sbrs r24,5
 343 0040 00C0      		rjmp .L30
 485:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 344               		.loc 1 485 0
 345 0042 40E0      		ldi r20,0
 346 0044 50E0      		ldi r21,0
 347 0046 63E0      		ldi r22,lo8(3)
 348 0048 70E0      		ldi r23,0
 349 004a CE01      		movw r24,r28
 350 004c 0196      		adiw r24,1
 351 004e 0E94 0000 		call Endpoint_Write_Stream_LE
 352               	.LVL24:
 353               	.LBB202:
 354               	.LBB203:
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 355               		.loc 2 456 0
 356 0052 8091 E800 		lds r24,232
 357 0056 8E77      		andi r24,lo8(126)
 358 0058 8093 E800 		sts 232,r24
 359               	.LVL25:
 360               	.L30:
 361               	/* epilogue start */
 362               	.LBE203:
 363               	.LBE202:
 487:../../../../tmk_core/protocol/lufa/lufa.c **** }
 364               		.loc 1 487 0
 365 005c 0F90      		pop __tmp_reg__
 366 005e 0F90      		pop __tmp_reg__
 367 0060 0F90      		pop __tmp_reg__
 368 0062 DF91      		pop r29
 369 0064 CF91      		pop r28
 370 0066 0895      		ret
 371               		.cfi_endproc
 372               	.LFE117:
 374               		.section	.text.send_system,"ax",@progbits
 376               	send_system:
 377               	.LFB116:
 448:../../../../tmk_core/protocol/lufa/lufa.c **** {
 378               		.loc 1 448 0
 379               		.cfi_startproc
 380               	.LVL26:
 381 0000 CF93      		push r28
 382               	.LCFI4:
 383               		.cfi_def_cfa_offset 3
 384               		.cfi_offset 28, -2
 385 0002 DF93      		push r29
 386               	.LCFI5:
 387               		.cfi_def_cfa_offset 4
 388               		.cfi_offset 29, -3
 389 0004 00D0      		rcall .
 390 0006 1F92      		push __zero_reg__
 391               	.LCFI6:
 392               		.cfi_def_cfa_offset 7
 393 0008 CDB7      		in r28,__SP_L__
 394 000a DEB7      		in r29,__SP_H__
 395               	.LCFI7:
 396               		.cfi_def_cfa_register 28
 397               	/* prologue: function */
 398               	/* frame size = 3 */
 399               	/* stack size = 5 */
 400               	.L__stack_usage = 5
 401               	.LVL27:
 451:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 402               		.loc 1 451 0
 403 000c 2091 0000 		lds r18,USB_DeviceState
 404 0010 2430      		cpi r18,lo8(4)
 405 0012 01F4      		brne .L42
 454:../../../../tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 406               		.loc 1 454 0
 407 0014 22E0      		ldi r18,lo8(2)
 408 0016 2983      		std Y+1,r18
 409 0018 9B83      		std Y+3,r25
 410 001a 8A83      		std Y+2,r24
 411               	.LVL28:
 412               	.LBB204:
 413               	.LBB205:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 414               		.loc 2 270 0
 415 001c 83E0      		ldi r24,lo8(3)
 416               	.LVL29:
 417 001e 8093 E900 		sts 233,r24
 418               	.LVL30:
 419 0022 8FEF      		ldi r24,lo8(-1)
 420 0024 00C0      		rjmp .L44
 421               	.L46:
 422               	.LVL31:
 423               	.LBE205:
 424               	.LBE204:
 425               	.LBB206:
 426               	.LBB207:
 427               		.loc 3 246 0
 428 0026 9AE6      		ldi r25,lo8(106)
 429 0028 9A95      		1: dec r25
 430 002a 01F4      		brne 1b
 431 002c 00C0      		rjmp .
 432               	.LBE207:
 433               	.LBE206:
 461:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 434               		.loc 1 461 0
 435 002e 8823      		tst r24
 436 0030 01F0      		breq .L45
 437               	.LVL32:
 438               	.L44:
 439               	.LBB208:
 440               	.LBB209:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 441               		.loc 2 360 0
 442 0032 9091 E800 		lds r25,232
 443 0036 8150      		subi r24,lo8(-(-1))
 444               	.LBE209:
 445               	.LBE208:
 461:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 446               		.loc 1 461 0
 447 0038 95FF      		sbrs r25,5
 448 003a 00C0      		rjmp .L46
 449               	.L45:
 450               	.LBB210:
 451               	.LBB211:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 452               		.loc 2 360 0
 453 003c 8091 E800 		lds r24,232
 454               	.LBE211:
 455               	.LBE210:
 462:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 456               		.loc 1 462 0
 457 0040 85FF      		sbrs r24,5
 458 0042 00C0      		rjmp .L42
 464:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 459               		.loc 1 464 0
 460 0044 40E0      		ldi r20,0
 461 0046 50E0      		ldi r21,0
 462 0048 63E0      		ldi r22,lo8(3)
 463 004a 70E0      		ldi r23,0
 464 004c CE01      		movw r24,r28
 465 004e 0196      		adiw r24,1
 466 0050 0E94 0000 		call Endpoint_Write_Stream_LE
 467               	.LVL33:
 468               	.LBB212:
 469               	.LBB213:
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 470               		.loc 2 456 0
 471 0054 8091 E800 		lds r24,232
 472 0058 8E77      		andi r24,lo8(126)
 473 005a 8093 E800 		sts 232,r24
 474               	.LVL34:
 475               	.L42:
 476               	/* epilogue start */
 477               	.LBE213:
 478               	.LBE212:
 466:../../../../tmk_core/protocol/lufa/lufa.c **** }
 479               		.loc 1 466 0
 480 005e 0F90      		pop __tmp_reg__
 481 0060 0F90      		pop __tmp_reg__
 482 0062 0F90      		pop __tmp_reg__
 483 0064 DF91      		pop r29
 484 0066 CF91      		pop r28
 485 0068 0895      		ret
 486               		.cfi_endproc
 487               	.LFE116:
 489               		.section	.text.send_mouse,"ax",@progbits
 491               	send_mouse:
 492               	.LFB115:
 425:../../../../tmk_core/protocol/lufa/lufa.c **** {
 493               		.loc 1 425 0
 494               		.cfi_startproc
 495               	.LVL35:
 496               	/* prologue: function */
 497               	/* frame size = 0 */
 498               	/* stack size = 0 */
 499               	.L__stack_usage = 0
 429:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 500               		.loc 1 429 0
 501 0000 2091 0000 		lds r18,USB_DeviceState
 502 0004 2430      		cpi r18,lo8(4)
 503 0006 01F4      		brne .L54
 504               	.LVL36:
 505               	.LBB214:
 506               	.LBB215:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 507               		.loc 2 270 0
 508 0008 22E0      		ldi r18,lo8(2)
 509 000a 2093 E900 		sts 233,r18
 510               	.LVL37:
 511 000e 2FEF      		ldi r18,lo8(-1)
 512 0010 00C0      		rjmp .L57
 513               	.L59:
 514               	.LVL38:
 515               	.LBE215:
 516               	.LBE214:
 517               	.LBB216:
 518               	.LBB217:
 519               		.loc 3 246 0
 520 0012 3AE6      		ldi r19,lo8(106)
 521 0014 3A95      		1: dec r19
 522 0016 01F4      		brne 1b
 523 0018 00C0      		rjmp .
 524               	.LBE217:
 525               	.LBE216:
 436:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 526               		.loc 1 436 0
 527 001a 2223      		tst r18
 528 001c 01F0      		breq .L58
 529               	.LVL39:
 530               	.L57:
 531               	.LBB218:
 532               	.LBB219:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 533               		.loc 2 360 0
 534 001e 3091 E800 		lds r19,232
 535 0022 2150      		subi r18,lo8(-(-1))
 536               	.LBE219:
 537               	.LBE218:
 436:../../../../tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 538               		.loc 1 436 0
 539 0024 35FF      		sbrs r19,5
 540 0026 00C0      		rjmp .L59
 541               	.L58:
 542               	.LBB220:
 543               	.LBB221:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 544               		.loc 2 360 0
 545 0028 2091 E800 		lds r18,232
 546               	.LBE221:
 547               	.LBE220:
 437:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 548               		.loc 1 437 0
 549 002c 25FF      		sbrs r18,5
 550 002e 00C0      		rjmp .L54
 440:../../../../tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(report, sizeof(report_mouse_t), NULL);
 551               		.loc 1 440 0
 552 0030 40E0      		ldi r20,0
 553 0032 50E0      		ldi r21,0
 554 0034 65E0      		ldi r22,lo8(5)
 555 0036 70E0      		ldi r23,0
 556 0038 0E94 0000 		call Endpoint_Write_Stream_LE
 557               	.LVL40:
 558               	.LBB222:
 559               	.LBB223:
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 560               		.loc 2 456 0
 561 003c 8091 E800 		lds r24,232
 562 0040 8E77      		andi r24,lo8(126)
 563 0042 8093 E800 		sts 232,r24
 564               	.LVL41:
 565               	.L54:
 566 0046 0895      		ret
 567               	.LBE223:
 568               	.LBE222:
 569               		.cfi_endproc
 570               	.LFE115:
 572               		.section	.text.send_keyboard,"ax",@progbits
 574               	send_keyboard:
 575               	.LFB114:
 385:../../../../tmk_core/protocol/lufa/lufa.c **** {
 576               		.loc 1 385 0
 577               		.cfi_startproc
 578               	.LVL42:
 579 0000 EF92      		push r14
 580               	.LCFI8:
 581               		.cfi_def_cfa_offset 3
 582               		.cfi_offset 14, -2
 583 0002 FF92      		push r15
 584               	.LCFI9:
 585               		.cfi_def_cfa_offset 4
 586               		.cfi_offset 15, -3
 587               	/* prologue: function */
 588               	/* frame size = 0 */
 589               	/* stack size = 2 */
 590               	.L__stack_usage = 2
 591 0004 7C01      		movw r14,r24
 592               	.LVL43:
 388:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 593               		.loc 1 388 0
 594 0006 8091 0000 		lds r24,USB_DeviceState
 595               	.LVL44:
 596 000a 8430      		cpi r24,lo8(4)
 597 000c 01F4      		brne .L67
 598               	.LVL45:
 599               	.LBB224:
 600               	.LBB225:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 601               		.loc 2 270 0
 602 000e 81E0      		ldi r24,lo8(1)
 603 0010 8093 E900 		sts 233,r24
 604               	.LVL46:
 605 0014 8FEF      		ldi r24,lo8(-1)
 606 0016 00C0      		rjmp .L70
 607               	.L72:
 608               	.LVL47:
 609               	.LBE225:
 610               	.LBE224:
 611               	.LBB226:
 612               	.LBB227:
 613               		.loc 3 246 0
 614 0018 9AE6      		ldi r25,lo8(106)
 615 001a 9A95      		1: dec r25
 616 001c 01F4      		brne 1b
 617 001e 00C0      		rjmp .
 618               	.LBE227:
 619               	.LBE226:
 411:../../../../tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 620               		.loc 1 411 0
 621 0020 8823      		tst r24
 622 0022 01F0      		breq .L71
 623               	.LVL48:
 624               	.L70:
 625               	.LBB228:
 626               	.LBB229:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 627               		.loc 2 360 0
 628 0024 9091 E800 		lds r25,232
 629 0028 8150      		subi r24,lo8(-(-1))
 630               	.LBE229:
 631               	.LBE228:
 411:../../../../tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 632               		.loc 1 411 0
 633 002a 95FF      		sbrs r25,5
 634 002c 00C0      		rjmp .L72
 635               	.L71:
 636               	.LBB230:
 637               	.LBB231:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 638               		.loc 2 360 0
 639 002e 8091 E800 		lds r24,232
 640               	.LBE231:
 641               	.LBE230:
 412:../../../../tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 642               		.loc 1 412 0
 643 0032 85FF      		sbrs r24,5
 644 0034 00C0      		rjmp .L67
 415:../../../../tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, KEYBOARD_EPSIZE, NULL);
 645               		.loc 1 415 0
 646 0036 40E0      		ldi r20,0
 647 0038 50E0      		ldi r21,0
 648 003a 68E0      		ldi r22,lo8(8)
 649 003c 70E0      		ldi r23,0
 650 003e C701      		movw r24,r14
 651 0040 0E94 0000 		call Endpoint_Write_Stream_LE
 652               	.LVL49:
 653               	.LBB232:
 654               	.LBB233:
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 655               		.loc 2 456 0
 656 0044 8091 E800 		lds r24,232
 657 0048 8E77      		andi r24,lo8(126)
 658 004a 8093 E800 		sts 232,r24
 659               	.LBE233:
 660               	.LBE232:
 421:../../../../tmk_core/protocol/lufa/lufa.c ****     keyboard_report_sent = *report;
 661               		.loc 1 421 0
 662 004e 88E0      		ldi r24,lo8(8)
 663 0050 F701      		movw r30,r14
 664 0052 A0E0      		ldi r26,lo8(keyboard_report_sent)
 665 0054 B0E0      		ldi r27,hi8(keyboard_report_sent)
 666               		0:
 667 0056 0190      		ld r0,Z+
 668 0058 0D92      		st X+,r0
 669 005a 8A95      		dec r24
 670 005c 01F4      		brne 0b
 671               	.LVL50:
 672               	.L67:
 673               	/* epilogue start */
 422:../../../../tmk_core/protocol/lufa/lufa.c **** }
 674               		.loc 1 422 0
 675 005e FF90      		pop r15
 676 0060 EF90      		pop r14
 677               	.LVL51:
 678 0062 0895      		ret
 679               		.cfi_endproc
 680               	.LFE114:
 682               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
 683               	.global	EVENT_USB_Device_Connect
 685               	EVENT_USB_Device_Connect:
 686               	.LFB105:
 152:../../../../tmk_core/protocol/lufa/lufa.c **** {
 687               		.loc 1 152 0
 688               		.cfi_startproc
 689               	/* prologue: function */
 690               	/* frame size = 0 */
 691               	/* stack size = 0 */
 692               	.L__stack_usage = 0
 153:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 693               		.loc 1 153 0
 694 0000 80E0      		ldi r24,lo8(__c.4560)
 695 0002 90E0      		ldi r25,hi8(__c.4560)
 696 0004 0E94 0000 		call xputs
 697               	.LVL52:
 155:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!USB_IsInitialized) {
 698               		.loc 1 155 0
 699 0008 8091 0000 		lds r24,USB_IsInitialized
 700 000c 8111      		cpse r24,__zero_reg__
 701 000e 00C0      		rjmp .L80
 156:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 702               		.loc 1 156 0
 703 0010 0E94 0000 		call USB_Disable
 704               	.LVL53:
 157:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 705               		.loc 1 157 0
 706 0014 0E94 0000 		call USB_Init
 707               	.LVL54:
 708               	.LBB234:
 709               	.LBB235:
 710               	.LBB236:
 711               		.file 4 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterru
   1:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
  89:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
  91:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 712               		.loc 4 113 0
 713 0018 8091 E200 		lds r24,226
 714 001c 8460      		ori r24,lo8(4)
 715 001e 8093 E200 		sts 226,r24
 716               	.LVL55:
 717               	.L80:
 718 0022 0895      		ret
 719               	.LBE236:
 720               	.LBE235:
 721               	.LBE234:
 722               		.cfi_endproc
 723               	.LFE105:
 725               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 726               	.global	EVENT_USB_Device_Disconnect
 728               	EVENT_USB_Device_Disconnect:
 729               	.LFB106:
 163:../../../../tmk_core/protocol/lufa/lufa.c **** {
 730               		.loc 1 163 0
 731               		.cfi_startproc
 732               	/* prologue: function */
 733               	/* frame size = 0 */
 734               	/* stack size = 0 */
 735               	.L__stack_usage = 0
 164:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 736               		.loc 1 164 0
 737 0000 80E0      		ldi r24,lo8(__c.4565)
 738 0002 90E0      		ldi r25,hi8(__c.4565)
 739 0004 0E94 0000 		call xputs
 740               	.LVL56:
 166:../../../../tmk_core/protocol/lufa/lufa.c ****     USB_IsInitialized = false;
 741               		.loc 1 166 0
 742 0008 1092 0000 		sts USB_IsInitialized,__zero_reg__
 743 000c 0895      		ret
 744               		.cfi_endproc
 745               	.LFE106:
 747               		.section	.text.EVENT_USB_Device_Reset,"ax",@progbits
 748               	.global	EVENT_USB_Device_Reset
 750               	EVENT_USB_Device_Reset:
 751               	.LFB107:
 177:../../../../tmk_core/protocol/lufa/lufa.c **** {
 752               		.loc 1 177 0
 753               		.cfi_startproc
 754               	/* prologue: function */
 755               	/* frame size = 0 */
 756               	/* stack size = 0 */
 757               	.L__stack_usage = 0
 178:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[R]");
 758               		.loc 1 178 0
 759 0000 80E0      		ldi r24,lo8(__c.4570)
 760 0002 90E0      		ldi r25,hi8(__c.4570)
 761 0004 0C94 0000 		jmp xputs
 762               	.LVL57:
 763               		.cfi_endproc
 764               	.LFE107:
 766               		.section	.text.EVENT_USB_Device_StartOfFrame,"ax",@progbits
 767               	.global	EVENT_USB_Device_StartOfFrame
 769               	EVENT_USB_Device_StartOfFrame:
 770               	.LFB110:
 201:../../../../tmk_core/protocol/lufa/lufa.c **** {
 771               		.loc 1 201 0
 772               		.cfi_startproc
 773               	/* prologue: function */
 774               	/* frame size = 0 */
 775               	/* stack size = 0 */
 776               	.L__stack_usage = 0
 203:../../../../tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 777               		.loc 1 203 0
 778 0000 8091 0000 		lds r24,count.4584
 779 0004 8F5F      		subi r24,lo8(-(1))
 780 0006 8093 0000 		sts count.4584,r24
 781 000a 62E3      		ldi r22,lo8(50)
 782 000c 0E94 0000 		call __udivmodqi4
 783 0010 9111      		cpse r25,__zero_reg__
 784 0012 00C0      		rjmp .L84
 204:../../../../tmk_core/protocol/lufa/lufa.c ****     count = 0;
 785               		.loc 1 204 0
 786 0014 1092 0000 		sts count.4584,__zero_reg__
 206:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!console_flush) return;
 787               		.loc 1 206 0
 788 0018 8091 0000 		lds r24,console_flush
 789 001c 8823      		tst r24
 790 001e 01F0      		breq .L84
 791               	.LBB261:
 792               	.LBB262:
  86:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 793               		.loc 1 86 0
 794 0020 8091 0000 		lds r24,USB_DeviceState
 795 0024 8430      		cpi r24,lo8(4)
 796 0026 01F4      		brne .L88
 797               	.LBB263:
 798               	.LBB264:
 253:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 799               		.loc 2 253 0
 800 0028 8091 E900 		lds r24,233
 801               	.LBE264:
 802 002c 8F70      		andi r24,lo8(15)
 803               	.LBB267:
 804               	.LBB265:
 805               	.LBB266:
 240:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 806               		.loc 2 240 0
 807 002e 9091 EC00 		lds r25,236
 808 0032 90FF      		sbrs r25,0
 809 0034 00C0      		rjmp .L94
 810 0036 90E8      		ldi r25,lo8(-128)
 811 0038 00C0      		rjmp .L89
 812               	.L94:
 813 003a 90E0      		ldi r25,0
 814               	.L89:
 815               	.LBE266:
 816               	.LBE265:
 817               	.LBE267:
 253:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 818               		.loc 2 253 0
 819 003c 982B      		or r25,r24
 820               	.LVL58:
 821               	.LBE263:
 822               	.LBB268:
 823               	.LBB269:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 824               		.loc 2 270 0
 825 003e 84E0      		ldi r24,lo8(4)
 826 0040 8093 E900 		sts 233,r24
 827               	.LBE269:
 828               	.LBE268:
 829               	.LBB270:
 830               	.LBB271:
 313:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 831               		.loc 2 313 0
 832 0044 8091 EB00 		lds r24,235
 833               	.LBE271:
 834               	.LBE270:
 118:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 835               		.loc 1 118 0
 836 0048 80FF      		sbrs r24,0
 837 004a 00C0      		rjmp .L93
 838               	.LBB272:
 839               	.LBB273:
 370:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 840               		.loc 2 370 0
 841 004c 8091 EE00 		lds r24,238
 842               	.LBE273:
 843               	.LBE272:
 118:../../../../tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 844               		.loc 1 118 0
 845 0050 87FD      		sbrc r24,7
 846 0052 00C0      		rjmp .L101
 847               	.LVL59:
 848 0054 00C0      		rjmp .L93
 849               	.LVL60:
 850               	.L92:
 851               	.LBB274:
 852               	.LBB275:
 853               		.loc 2 554 0
 854 0056 1092 F100 		sts 241,__zero_reg__
 855               	.LVL61:
 856               	.L101:
 857               	.LBE275:
 858               	.LBE274:
 859               	.LBB276:
 860               	.LBB277:
 360:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 861               		.loc 2 360 0
 862 005a 8091 E800 		lds r24,232
 863               	.LBE277:
 864               	.LBE276:
 124:../../../../tmk_core/protocol/lufa/lufa.c ****     while (Endpoint_IsReadWriteAllowed())
 865               		.loc 1 124 0
 866 005e 85FD      		sbrc r24,5
 867 0060 00C0      		rjmp .L92
 868               	.LBB278:
 869               	.LBB279:
 407:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 870               		.loc 2 407 0
 871 0062 8091 E800 		lds r24,232
 872               	.LBE279:
 873               	.LBE278:
 128:../../../../tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 874               		.loc 1 128 0
 875 0066 80FF      		sbrs r24,0
 876 0068 00C0      		rjmp .L93
 877               	.LBB280:
 878               	.LBB281:
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 879               		.loc 2 456 0
 880 006a 8091 E800 		lds r24,232
 881 006e 8E77      		andi r24,lo8(126)
 882 0070 8093 E800 		sts 232,r24
 883               	.L93:
 884               	.LVL62:
 885               	.LBE281:
 886               	.LBE280:
 887               	.LBB282:
 888               	.LBB283:
 270:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 889               		.loc 2 270 0
 890 0074 9F70      		andi r25,lo8(15)
 891               	.LVL63:
 892 0076 9093 E900 		sts 233,r25
 893               	.LVL64:
 894               	.L88:
 895               	.LBE283:
 896               	.LBE282:
 897               	.LBE262:
 898               	.LBE261:
 208:../../../../tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 899               		.loc 1 208 0
 900 007a 1092 0000 		sts console_flush,__zero_reg__
 901               	.L84:
 902 007e 0895      		ret
 903               		.cfi_endproc
 904               	.LFE110:
 906               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 907               	.global	EVENT_USB_Device_ConfigurationChanged
 909               	EVENT_USB_Device_ConfigurationChanged:
 910               	.LFB111:
 219:../../../../tmk_core/protocol/lufa/lufa.c **** {
 911               		.loc 1 219 0
 912               		.cfi_startproc
 913               	/* prologue: function */
 914               	/* frame size = 0 */
 915               	/* stack size = 0 */
 916               	.L__stack_usage = 0
 917               	.LVL65:
 918               	.LBB284:
 919               	.LBB285:
 210:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 920               		.loc 2 210 0
 921 0000 42E0      		ldi r20,lo8(2)
 922 0002 61EC      		ldi r22,lo8(-63)
 923 0004 81E0      		ldi r24,lo8(1)
 924 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 925               	.LVL66:
 926               	.LBE285:
 927               	.LBE284:
 928               	.LBB286:
 929               	.LBB287:
 930 000a 42E0      		ldi r20,lo8(2)
 931 000c 61EC      		ldi r22,lo8(-63)
 932 000e 82E0      		ldi r24,lo8(2)
 933 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 934               	.LVL67:
 935               	.LBE287:
 936               	.LBE286:
 937               	.LBB288:
 938               	.LBB289:
 939 0014 42E0      		ldi r20,lo8(2)
 940 0016 61EC      		ldi r22,lo8(-63)
 941 0018 83E0      		ldi r24,lo8(3)
 942 001a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 943               	.LVL68:
 944               	.LBE289:
 945               	.LBE288:
 946               	.LBB290:
 947               	.LBB291:
 948 001e 42E2      		ldi r20,lo8(34)
 949 0020 61EC      		ldi r22,lo8(-63)
 950 0022 84E0      		ldi r24,lo8(4)
 951 0024 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 952               	.LVL69:
 953               	.LBE291:
 954               	.LBE290:
 955               		.cfi_endproc
 956               	.LFE111:
 958               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 959               	.global	EVENT_USB_Device_ControlRequest
 961               	EVENT_USB_Device_ControlRequest:
 962               	.LFB112:
 272:../../../../tmk_core/protocol/lufa/lufa.c **** {
 963               		.loc 1 272 0
 964               		.cfi_startproc
 965               	/* prologue: function */
 966               	/* frame size = 0 */
 967               	/* stack size = 0 */
 968               	.L__stack_usage = 0
 969               	.LVL70:
 277:../../../../tmk_core/protocol/lufa/lufa.c ****     switch (USB_ControlRequest.bRequest)
 970               		.loc 1 277 0
 971 0000 8091 0000 		lds r24,USB_ControlRequest+1
 972 0004 8330      		cpi r24,lo8(3)
 973 0006 01F4      		brne .+2
 974 0008 00C0      		rjmp .L110
 975 000a 00F4      		brsh .L114
 976 000c 8130      		cpi r24,lo8(1)
 977 000e 01F0      		breq .L108
 978 0010 8230      		cpi r24,lo8(2)
 979 0012 01F0      		breq .+2
 980 0014 00C0      		rjmp .L106
 981 0016 00C0      		rjmp .L109
 982               	.L114:
 983 0018 8A30      		cpi r24,lo8(10)
 984 001a 01F4      		brne .+2
 985 001c 00C0      		rjmp .L112
 986 001e 8B30      		cpi r24,lo8(11)
 987 0020 01F4      		brne .+2
 988 0022 00C0      		rjmp .L113
 989 0024 8930      		cpi r24,lo8(9)
 990 0026 01F0      		breq .+2
 991 0028 00C0      		rjmp .L106
 992 002a 00C0      		rjmp .L111
 993               	.L108:
 280:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 994               		.loc 1 280 0
 995 002c 8091 0000 		lds r24,USB_ControlRequest
 996 0030 813A      		cpi r24,lo8(-95)
 997 0032 01F0      		breq .+2
 998 0034 00C0      		rjmp .L106
 999               	.LBB292:
 1000               	.LBB293:
 444:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1001               		.loc 2 444 0
 1002 0036 8091 E800 		lds r24,232
 1003 003a 877F      		andi r24,lo8(-9)
 1004 003c 8093 E800 		sts 232,r24
 1005 0040 8091 0000 		lds r24,USB_ControlRequest+4
 1006 0044 9091 0000 		lds r25,USB_ControlRequest+4+1
 1007 0048 892B      		or r24,r25
 1008 004a 01F0      		breq .L123
 1009               	.LBE293:
 1010               	.LBE292:
 285:../../../../tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 1011               		.loc 1 285 0
 1012 004c 60E0      		ldi r22,0
 1013 004e 80E0      		ldi r24,0
 1014 0050 90E0      		ldi r25,0
 1015 0052 00C0      		rjmp .L116
 1016               	.L123:
 1017 0054 68E0      		ldi r22,lo8(8)
 1018 0056 80E0      		ldi r24,lo8(keyboard_report_sent)
 1019 0058 90E0      		ldi r25,hi8(keyboard_report_sent)
 1020               	.L116:
 1021               	.LVL71:
 294:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
 1022               		.loc 1 294 0
 1023 005a 70E0      		ldi r23,0
 1024 005c 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 1025               	.LVL72:
 1026               	.LBB294:
 1027               	.LBB295:
 471:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1028               		.loc 2 471 0
 1029 0060 8091 E800 		lds r24,232
 1030 0064 8B77      		andi r24,lo8(123)
 1031 0066 8093 E800 		sts 232,r24
 1032 006a 0895      		ret
 1033               	.LVL73:
 1034               	.L111:
 1035               	.LBE295:
 1036               	.LBE294:
 300:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 1037               		.loc 1 300 0
 1038 006c 8091 0000 		lds r24,USB_ControlRequest
 1039 0070 8132      		cpi r24,lo8(33)
 1040 0072 01F0      		breq .+2
 1041 0074 00C0      		rjmp .L106
 304:../../../../tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 1042               		.loc 1 304 0
 1043 0076 8091 0000 		lds r24,USB_ControlRequest+4
 1044 007a 9091 0000 		lds r25,USB_ControlRequest+4+1
 1045 007e 892B      		or r24,r25
 1046 0080 01F0      		breq .+2
 1047 0082 00C0      		rjmp .L106
 1048               	.LBB296:
 1049               	.LBB297:
 444:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1050               		.loc 2 444 0
 1051 0084 8091 E800 		lds r24,232
 1052 0088 877F      		andi r24,lo8(-9)
 1053 008a 8093 E800 		sts 232,r24
 1054 008e 00C0      		rjmp .L119
 1055               	.L120:
 1056               	.LBE297:
 1057               	.LBE296:
 312:../../../../tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 1058               		.loc 1 312 0
 1059 0090 8091 0000 		lds r24,USB_DeviceState
 1060 0094 8823      		tst r24
 1061 0096 01F4      		brne .+2
 1062 0098 00C0      		rjmp .L106
 1063               	.L119:
 1064               	.LBB298:
 1065               	.LBB299:
 419:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1066               		.loc 2 419 0 discriminator 1
 1067 009a 8091 E800 		lds r24,232
 1068               	.LBE299:
 1069               	.LBE298:
 311:../../../../tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsOUTReceived())) {
 1070               		.loc 1 311 0 discriminator 1
 1071 009e 82FF      		sbrs r24,2
 1072 00a0 00C0      		rjmp .L120
 1073               	.LBB300:
 1074               	.LBB301:
 542:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 1075               		.loc 2 542 0
 1076 00a2 8091 F100 		lds r24,241
 1077               	.LBE301:
 1078               	.LBE300:
 315:../../../../tmk_core/protocol/lufa/lufa.c ****                     keyboard_led_stats = Endpoint_Read_8();
 1079               		.loc 1 315 0
 1080 00a6 8093 0000 		sts keyboard_led_stats,r24
 1081               	.LBB302:
 1082               	.LBB303:
 471:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1083               		.loc 2 471 0
 1084 00aa 8091 E800 		lds r24,232
 1085 00ae 8B77      		andi r24,lo8(123)
 1086 00b0 00C0      		rjmp .L135
 1087               	.L110:
 1088               	.LBE303:
 1089               	.LBE302:
 327:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 1090               		.loc 1 327 0
 1091 00b2 8091 0000 		lds r24,USB_ControlRequest
 1092 00b6 813A      		cpi r24,lo8(-95)
 1093 00b8 01F0      		breq .+2
 1094 00ba 00C0      		rjmp .L106
 329:../../../../tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 1095               		.loc 1 329 0
 1096 00bc 8091 0000 		lds r24,USB_ControlRequest+4
 1097 00c0 9091 0000 		lds r25,USB_ControlRequest+4+1
 1098 00c4 892B      		or r24,r25
 1099 00c6 01F0      		breq .+2
 1100 00c8 00C0      		rjmp .L106
 1101               	.LBB304:
 1102               	.LBB305:
 444:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1103               		.loc 2 444 0
 1104 00ca 8091 E800 		lds r24,232
 1105 00ce 877F      		andi r24,lo8(-9)
 1106 00d0 8093 E800 		sts 232,r24
 1107               	.L121:
 1108               	.LBE305:
 1109               	.LBE304:
 1110               	.LBB306:
 1111               	.LBB307:
 407:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1112               		.loc 2 407 0 discriminator 1
 1113 00d4 8091 E800 		lds r24,232
 1114               	.LBE307:
 1115               	.LBE306:
 331:../../../../tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 1116               		.loc 1 331 0 discriminator 1
 1117 00d8 80FF      		sbrs r24,0
 1118 00da 00C0      		rjmp .L121
 332:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1119               		.loc 1 332 0
 1120 00dc 8091 0000 		lds r24,keyboard_protocol
 1121               	.LVL74:
 1122 00e0 00C0      		rjmp .L136
 1123               	.LVL75:
 1124               	.L113:
 340:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 1125               		.loc 1 340 0
 1126 00e2 8091 0000 		lds r24,USB_ControlRequest
 1127 00e6 8132      		cpi r24,lo8(33)
 1128 00e8 01F4      		brne .L106
 342:../../../../tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 1129               		.loc 1 342 0
 1130 00ea 8091 0000 		lds r24,USB_ControlRequest+4
 1131 00ee 9091 0000 		lds r25,USB_ControlRequest+4+1
 1132 00f2 892B      		or r24,r25
 1133 00f4 01F4      		brne .L106
 1134               	.LBB308:
 1135               	.LBB309:
 444:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1136               		.loc 2 444 0
 1137 00f6 8091 E800 		lds r24,232
 1138 00fa 877F      		andi r24,lo8(-9)
 1139 00fc 8093 E800 		sts 232,r24
 1140               	.LBE309:
 1141               	.LBE308:
 344:../../../../tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1142               		.loc 1 344 0
 1143 0100 0E94 0000 		call Endpoint_ClearStatusStage
 1144               	.LVL76:
 346:../../../../tmk_core/protocol/lufa/lufa.c ****                     keyboard_protocol = (USB_ControlRequest.wValue & 0xFF);
 1145               		.loc 1 346 0
 1146 0104 8091 0000 		lds r24,USB_ControlRequest+2
 1147 0108 8093 0000 		sts keyboard_protocol,r24
 347:../../../../tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1148               		.loc 1 347 0
 1149 010c 0C94 0000 		jmp clear_keyboard
 1150               	.LVL77:
 1151               	.L112:
 353:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 1152               		.loc 1 353 0
 1153 0110 8091 0000 		lds r24,USB_ControlRequest
 1154 0114 8132      		cpi r24,lo8(33)
 1155 0116 01F4      		brne .L106
 1156               	.LBB310:
 1157               	.LBB311:
 444:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1158               		.loc 2 444 0
 1159 0118 8091 E800 		lds r24,232
 1160 011c 877F      		andi r24,lo8(-9)
 1161 011e 8093 E800 		sts 232,r24
 1162               	.LBE311:
 1163               	.LBE310:
 356:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1164               		.loc 1 356 0
 1165 0122 0E94 0000 		call Endpoint_ClearStatusStage
 1166               	.LVL78:
 358:../../../../tmk_core/protocol/lufa/lufa.c ****                 keyboard_idle = ((USB_ControlRequest.wValue & 0xFF00) >> 8);
 1167               		.loc 1 358 0
 1168 0126 8091 0000 		lds r24,USB_ControlRequest+3
 1169 012a 8093 0000 		sts keyboard_idle,r24
 1170 012e 0895      		ret
 1171               	.L109:
 363:../../../../tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 1172               		.loc 1 363 0
 1173 0130 8091 0000 		lds r24,USB_ControlRequest
 1174 0134 813A      		cpi r24,lo8(-95)
 1175 0136 01F4      		brne .L106
 1176               	.LBB312:
 1177               	.LBB313:
 444:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1178               		.loc 2 444 0
 1179 0138 8091 E800 		lds r24,232
 1180 013c 877F      		andi r24,lo8(-9)
 1181 013e 8093 E800 		sts 232,r24
 1182               	.L122:
 1183               	.LBE313:
 1184               	.LBE312:
 1185               	.LBB314:
 1186               	.LBB315:
 407:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1187               		.loc 2 407 0 discriminator 1
 1188 0142 8091 E800 		lds r24,232
 1189               	.LBE315:
 1190               	.LBE314:
 366:../../../../tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 1191               		.loc 1 366 0 discriminator 1
 1192 0146 80FF      		sbrs r24,0
 1193 0148 00C0      		rjmp .L122
 367:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1194               		.loc 1 367 0
 1195 014a 8091 0000 		lds r24,keyboard_idle
 1196               	.L136:
 1197               	.LVL79:
 1198               	.LBB316:
 1199               	.LBB317:
 1200               		.loc 2 554 0
 1201 014e 8093 F100 		sts 241,r24
 1202               	.LBE317:
 1203               	.LBE316:
 1204               	.LBB318:
 1205               	.LBB319:
 456:../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1206               		.loc 2 456 0
 1207 0152 8091 E800 		lds r24,232
 1208               	.LVL80:
 1209 0156 8E77      		andi r24,lo8(126)
 1210               	.LVL81:
 1211               	.L135:
 1212 0158 8093 E800 		sts 232,r24
 1213               	.LBE319:
 1214               	.LBE318:
 369:../../../../tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1215               		.loc 1 369 0
 1216 015c 0C94 0000 		jmp Endpoint_ClearStatusStage
 1217               	.LVL82:
 1218               	.L106:
 1219 0160 0895      		ret
 1220               		.cfi_endproc
 1221               	.LFE112:
 1223               		.section	.text.hook_early_init,"ax",@progbits
 1224               		.weak	hook_early_init
 1226               	hook_early_init:
 1227               	.LFB122:
 551:../../../../tmk_core/protocol/lufa/lufa.c **** #else
 552:../../../../tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 553:../../../../tmk_core/protocol/lufa/lufa.c **** {
 554:../../../../tmk_core/protocol/lufa/lufa.c ****     return 0;
 555:../../../../tmk_core/protocol/lufa/lufa.c **** }
 556:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 557:../../../../tmk_core/protocol/lufa/lufa.c **** 
 558:../../../../tmk_core/protocol/lufa/lufa.c **** 
 559:../../../../tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 560:../../../../tmk_core/protocol/lufa/lufa.c ****  * main
 561:../../../../tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 562:../../../../tmk_core/protocol/lufa/lufa.c **** static void setup_mcu(void)
 563:../../../../tmk_core/protocol/lufa/lufa.c **** {
 564:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Disable watchdog if enabled by bootloader/fuses */
 565:../../../../tmk_core/protocol/lufa/lufa.c ****     MCUSR &= ~(1 << WDRF);
 566:../../../../tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 567:../../../../tmk_core/protocol/lufa/lufa.c **** 
 568:../../../../tmk_core/protocol/lufa/lufa.c ****     /* Disable clock division */
 569:../../../../tmk_core/protocol/lufa/lufa.c ****     clock_prescale_set(clock_div_1);
 570:../../../../tmk_core/protocol/lufa/lufa.c **** }
 571:../../../../tmk_core/protocol/lufa/lufa.c **** 
 572:../../../../tmk_core/protocol/lufa/lufa.c **** static void setup_usb(void)
 573:../../../../tmk_core/protocol/lufa/lufa.c **** {
 574:../../../../tmk_core/protocol/lufa/lufa.c ****     // Leonardo needs. Without this USB device is not recognized.
 575:../../../../tmk_core/protocol/lufa/lufa.c ****     USB_Disable();
 576:../../../../tmk_core/protocol/lufa/lufa.c **** 
 577:../../../../tmk_core/protocol/lufa/lufa.c ****     USB_Init();
 578:../../../../tmk_core/protocol/lufa/lufa.c **** 
 579:../../../../tmk_core/protocol/lufa/lufa.c ****     // for Console_Task
 580:../../../../tmk_core/protocol/lufa/lufa.c ****     USB_Device_EnableSOFEvents();
 581:../../../../tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 582:../../../../tmk_core/protocol/lufa/lufa.c **** }
 583:../../../../tmk_core/protocol/lufa/lufa.c **** 
 584:../../../../tmk_core/protocol/lufa/lufa.c **** int main(void)  __attribute__ ((weak));
 585:../../../../tmk_core/protocol/lufa/lufa.c **** int main(void)
 586:../../../../tmk_core/protocol/lufa/lufa.c **** {
 587:../../../../tmk_core/protocol/lufa/lufa.c ****     setup_mcu();
 588:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_early_init();
 589:../../../../tmk_core/protocol/lufa/lufa.c ****     keyboard_setup();
 590:../../../../tmk_core/protocol/lufa/lufa.c ****     setup_usb();
 591:../../../../tmk_core/protocol/lufa/lufa.c ****     sei();
 592:../../../../tmk_core/protocol/lufa/lufa.c **** 
 593:../../../../tmk_core/protocol/lufa/lufa.c ****     /* wait for USB startup & debug output */
 594:../../../../tmk_core/protocol/lufa/lufa.c ****     while (USB_DeviceState != DEVICE_STATE_Configured) {
 595:../../../../tmk_core/protocol/lufa/lufa.c **** #if defined(INTERRUPT_CONTROL_ENDPOINT)
 596:../../../../tmk_core/protocol/lufa/lufa.c ****         ;
 597:../../../../tmk_core/protocol/lufa/lufa.c **** #else
 598:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_USBTask();
 599:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 600:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 601:../../../../tmk_core/protocol/lufa/lufa.c ****     print("USB configured.\n");
 602:../../../../tmk_core/protocol/lufa/lufa.c **** 
 603:../../../../tmk_core/protocol/lufa/lufa.c ****     /* init modules */
 604:../../../../tmk_core/protocol/lufa/lufa.c ****     keyboard_init();
 605:../../../../tmk_core/protocol/lufa/lufa.c ****     host_set_driver(&lufa_driver);
 606:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 607:../../../../tmk_core/protocol/lufa/lufa.c ****     sleep_led_init();
 608:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 609:../../../../tmk_core/protocol/lufa/lufa.c **** 
 610:../../../../tmk_core/protocol/lufa/lufa.c ****     print("Keyboard start.\n");
 611:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_late_init();
 612:../../../../tmk_core/protocol/lufa/lufa.c ****     while (1) {
 613:../../../../tmk_core/protocol/lufa/lufa.c ****         while (USB_DeviceState == DEVICE_STATE_Suspended) {
 614:../../../../tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 615:../../../../tmk_core/protocol/lufa/lufa.c ****             hook_usb_suspend_loop();
 616:../../../../tmk_core/protocol/lufa/lufa.c ****         }
 617:../../../../tmk_core/protocol/lufa/lufa.c **** 
 618:../../../../tmk_core/protocol/lufa/lufa.c ****         keyboard_task();
 619:../../../../tmk_core/protocol/lufa/lufa.c **** 
 620:../../../../tmk_core/protocol/lufa/lufa.c **** #if !defined(INTERRUPT_CONTROL_ENDPOINT)
 621:../../../../tmk_core/protocol/lufa/lufa.c ****         USB_USBTask();
 622:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 623:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 624:../../../../tmk_core/protocol/lufa/lufa.c **** }
 625:../../../../tmk_core/protocol/lufa/lufa.c **** 
 626:../../../../tmk_core/protocol/lufa/lufa.c **** 
 627:../../../../tmk_core/protocol/lufa/lufa.c **** /* hooks */
 628:../../../../tmk_core/protocol/lufa/lufa.c **** __attribute__((weak))
 629:../../../../tmk_core/protocol/lufa/lufa.c **** void hook_early_init(void) {}
 1228               		.loc 1 629 0
 1229               		.cfi_startproc
 1230               	/* prologue: function */
 1231               	/* frame size = 0 */
 1232               	/* stack size = 0 */
 1233               	.L__stack_usage = 0
 1234 0000 0895      		ret
 1235               		.cfi_endproc
 1236               	.LFE122:
 1238               		.section	.text.hook_late_init,"ax",@progbits
 1239               		.weak	hook_late_init
 1241               	hook_late_init:
 1242               	.LFB123:
 630:../../../../tmk_core/protocol/lufa/lufa.c **** 
 631:../../../../tmk_core/protocol/lufa/lufa.c **** __attribute__((weak))
 632:../../../../tmk_core/protocol/lufa/lufa.c **** void hook_late_init(void) {}
 1243               		.loc 1 632 0
 1244               		.cfi_startproc
 1245               	/* prologue: function */
 1246               	/* frame size = 0 */
 1247               	/* stack size = 0 */
 1248               	.L__stack_usage = 0
 1249 0000 0895      		ret
 1250               		.cfi_endproc
 1251               	.LFE123:
 1253               		.section	.text.hook_usb_suspend_entry,"ax",@progbits
 1254               		.weak	hook_usb_suspend_entry
 1256               	hook_usb_suspend_entry:
 1257               	.LFB124:
 633:../../../../tmk_core/protocol/lufa/lufa.c **** 
 634:../../../../tmk_core/protocol/lufa/lufa.c ****  __attribute__((weak))
 635:../../../../tmk_core/protocol/lufa/lufa.c **** void hook_usb_suspend_entry(void)
 636:../../../../tmk_core/protocol/lufa/lufa.c **** {
 1258               		.loc 1 636 0
 1259               		.cfi_startproc
 1260               	/* prologue: function */
 1261               	/* frame size = 0 */
 1262               	/* stack size = 0 */
 1263               	.L__stack_usage = 0
 1264 0000 0895      		ret
 1265               		.cfi_endproc
 1266               	.LFE124:
 1268               		.section	.text.EVENT_USB_Device_Suspend,"ax",@progbits
 1269               	.global	EVENT_USB_Device_Suspend
 1271               	EVENT_USB_Device_Suspend:
 1272               	.LFB108:
 182:../../../../tmk_core/protocol/lufa/lufa.c **** {
 1273               		.loc 1 182 0
 1274               		.cfi_startproc
 1275               	/* prologue: function */
 1276               	/* frame size = 0 */
 1277               	/* stack size = 0 */
 1278               	.L__stack_usage = 0
 183:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 1279               		.loc 1 183 0
 1280 0000 80E0      		ldi r24,lo8(__c.4574)
 1281 0002 90E0      		ldi r25,hi8(__c.4574)
 1282 0004 0E94 0000 		call xputs
 1283               	.LVL83:
 184:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_usb_suspend_entry();
 1284               		.loc 1 184 0
 1285 0008 0C94 0000 		jmp hook_usb_suspend_entry
 1286               	.LVL84:
 1287               		.cfi_endproc
 1288               	.LFE108:
 1290               		.section	.text.hook_usb_suspend_loop,"ax",@progbits
 1291               		.weak	hook_usb_suspend_loop
 1293               	hook_usb_suspend_loop:
 1294               	.LFB125:
 637:../../../../tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 638:../../../../tmk_core/protocol/lufa/lufa.c ****     sleep_led_enable();
 639:../../../../tmk_core/protocol/lufa/lufa.c **** #endif
 640:../../../../tmk_core/protocol/lufa/lufa.c **** }
 641:../../../../tmk_core/protocol/lufa/lufa.c **** 
 642:../../../../tmk_core/protocol/lufa/lufa.c **** __attribute__((weak))
 643:../../../../tmk_core/protocol/lufa/lufa.c **** void hook_usb_suspend_loop(void)
 644:../../../../tmk_core/protocol/lufa/lufa.c **** {
 1295               		.loc 1 644 0
 1296               		.cfi_startproc
 1297               	/* prologue: function */
 1298               	/* frame size = 0 */
 1299               	/* stack size = 0 */
 1300               	.L__stack_usage = 0
 645:../../../../tmk_core/protocol/lufa/lufa.c ****     suspend_power_down();
 1301               		.loc 1 645 0
 1302 0000 0E94 0000 		call suspend_power_down
 1303               	.LVL85:
 646:../../../../tmk_core/protocol/lufa/lufa.c ****     if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
 1304               		.loc 1 646 0
 1305 0004 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 1306 0008 8823      		tst r24
 1307 000a 01F0      		breq .L141
 1308               		.loc 1 646 0 is_stmt 0 discriminator 1
 1309 000c 0E94 0000 		call suspend_wakeup_condition
 1310               	.LVL86:
 1311 0010 8111      		cpse r24,__zero_reg__
 647:../../../../tmk_core/protocol/lufa/lufa.c ****             USB_Device_SendRemoteWakeup();
 1312               		.loc 1 647 0 is_stmt 1
 1313 0012 0C94 0000 		jmp USB_Device_SendRemoteWakeup
 1314               	.LVL87:
 1315               	.L141:
 1316 0016 0895      		ret
 1317               		.cfi_endproc
 1318               	.LFE125:
 1320               		.section	.text.startup.main,"ax",@progbits
 1321               		.weak	main
 1323               	main:
 1324               	.LFB121:
 586:../../../../tmk_core/protocol/lufa/lufa.c **** {
 1325               		.loc 1 586 0
 1326               		.cfi_startproc
 1327               	/* prologue: function */
 1328               	/* frame size = 0 */
 1329               	/* stack size = 0 */
 1330               	.L__stack_usage = 0
 1331               	.LBB332:
 1332               	.LBB333:
 565:../../../../tmk_core/protocol/lufa/lufa.c ****     MCUSR &= ~(1 << WDRF);
 1333               		.loc 1 565 0
 1334 0000 84B7      		in r24,0x34
 1335 0002 877F      		andi r24,lo8(-9)
 1336 0004 84BF      		out 0x34,r24
 566:../../../../tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1337               		.loc 1 566 0
 1338 0006 88E1      		ldi r24,lo8(24)
 1339               	/* #APP */
 1340               	 ;  566 "../../../../tmk_core/protocol/lufa/lufa.c" 1
 1341 0008 0FB6      		in __tmp_reg__, __SREG__
 1342 000a F894      		cli
 1343 000c 8093 6000 		sts 96, r24
 1344 0010 1092 6000 		sts 96, __zero_reg__
 1345 0014 0FBE      		out __SREG__,__tmp_reg__
 1346               		
 1347               	 ;  0 "" 2
 1348               	.LVL88:
 1349               	/* #NOAPP */
 1350               	.LBB334:
 1351               	.LBB335:
 1352               		.file 5 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h"
   1:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Copyright (c) 2006, 2007, 2008  Eric B. Weddington
   2:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****    All rights reserved.
   3:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
   4:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
   7:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****    * Redistributions in binary form must reproduce the above copyright
  10:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer in
  11:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****      the documentation and/or other materials provided with the
  12:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****      distribution.
  13:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****    * Neither the name of the copyright holders nor the names of
  14:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****      contributors may be used to endorse or promote products derived
  15:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****      from this software without specific prior written permission.
  16:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  17:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  18:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  19:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  20:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  21:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  22:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  23:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  24:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  25:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  26:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  27:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   POSSIBILITY OF SUCH DAMAGE. */
  28:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  29:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* $Id: power.h 2254 2011-09-26 15:06:50Z arcanum $ */
  30:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  31:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #ifndef _AVR_POWER_H_
  32:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define _AVR_POWER_H_   1
  33:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  34:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #include <avr/io.h>
  35:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #include <stdint.h>
  36:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  37:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  38:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /** \file */
  39:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /** \defgroup avr_power <avr/power.h>: Power Reduction Management
  40:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  41:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \code #include <avr/power.h>\endcode
  42:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  43:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** Many AVRs contain a Power Reduction Register (PRR) or Registers (PRRx) that 
  44:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** allow you to reduce power consumption by disabling or enabling various on-board 
  45:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** peripherals as needed.
  46:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  47:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** There are many macros in this header file that provide an easy interface
  48:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** to enable or disable on-board peripherals to reduce power. See the table below.
  49:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  50:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \note Not all AVR devices have a Power Reduction Register (for example
  51:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** the ATmega128). On those devices without a Power Reduction Register, these 
  52:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** macros are not available.
  53:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  54:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \note Not all AVR devices contain the same peripherals (for example, the LCD
  55:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** interface), or they will be named differently (for example, USART and 
  56:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** USART0). Please consult your device's datasheet, or the header file, to 
  57:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** find out which macros are applicable to your device.
  58:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  59:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** */
  60:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  61:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  62:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /** \addtogroup avr_power
  63:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  64:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \anchor avr_powermacros
  65:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** <small>
  66:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** <center>
  67:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** <table border="3">
  68:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
  69:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td width="10%"><strong>Power Macro</strong></td>
  70:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td width="15%"><strong>Description</strong></td>
  71:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td width="75%"><strong>Applicable for device</strong></td>
  72:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
  73:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  74:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
  75:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_adc_enable()</td>
  76:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Analog to Digital Converter module.</td>
  77:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
  78:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
  79:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  80:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
  81:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_adc_disable()</td>
  82:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Analog to Digital Converter module.</td>
  83:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
  84:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
  85:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  86:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
  87:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_lcd_enable()</td>
  88:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the LCD module.</td>
  89:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
  90:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
  91:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  92:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
  93:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_lcd_disable().</td>
  94:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the LCD module.</td>
  95:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
  96:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
  97:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
  98:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
  99:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_pscr_enable()</td>
 100:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Reduced Power Stage Controller module.</td>
 101:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM81</td>
 102:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 103:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 104:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 105:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_pscr_disable()</td>
 106:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Reduced Power Stage Controller module.</td>
 107:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM81</td>
 108:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 109:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 110:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 111:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_psc0_enable()</td>
 112:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 0 module.</td>
 113:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 114:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 115:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 116:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 117:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_psc0_disable()</td>
 118:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 0 module.</td>
 119:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 120:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 121:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 122:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 123:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_psc1_enable()</td>
 124:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 1 module.</td>
 125:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 126:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 127:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 128:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 129:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_psc1_disable()</td>
 130:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 1 module.</td>
 131:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 132:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 133:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 134:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 135:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_psc2_enable()</td>
 136:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 2 module.</td>
 137:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 138:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 139:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 140:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 141:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_psc2_disable()</td>
 142:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 2 module.</td>
 143:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 144:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 145:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 146:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 147:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_spi_enable()</td>
 148:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Serial Peripheral Interface module.</td>
 149:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 150:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 151:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 152:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 153:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_spi_disable()</td>
 154:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Serial Peripheral Interface module.</td>
 155:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 156:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 157:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 158:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 159:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer0_enable()</td>
 160:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Timer 0 module.</td>
 161:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 162:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 163:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 164:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 165:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer0_disable()</td>
 166:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Timer 0 module.</td>
 167:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 168:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 169:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 170:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 171:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer1_enable()</td>
 172:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Timer 1 module.</td>
 173:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 174:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 175:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 176:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 177:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer1_disable()</td>
 178:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Timer 1 module.</td>
 179:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 180:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 181:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 182:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 183:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer2_enable()</td>
 184:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Timer 2 module.</td>
 185:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 186:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 187:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 188:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 189:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer2_disable()</td>
 190:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Timer 2 module.</td>
 191:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 192:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 193:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 194:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 195:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer3_enable()</td>
 196:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Timer 3 module.</td>
 197:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 198:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 199:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 200:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 201:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer3_disable()</td>
 202:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Timer 3 module.</td>
 203:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 204:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 205:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 206:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 207:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer4_enable()</td>
 208:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Timer 4 module.</td>
 209:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 210:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 211:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 212:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 213:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer4_disable()</td>
 214:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Timer 4 module.</td>
 215:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 216:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 217:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 218:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 219:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer5_enable()</td>
 220:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Timer 5 module.</td>
 221:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 222:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 223:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 224:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 225:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_timer5_disable()</td>
 226:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Timer 5 module.</td>
 227:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 228:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 229:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 230:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 231:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_twi_enable()</td>
 232:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Two Wire Interface module.</td>
 233:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 234:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 235:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 236:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 237:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_twi_disable()</td>
 238:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Two Wire Interface module.</td>
 239:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 240:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 241:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 242:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 243:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart_enable()</td>
 244:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the USART module.</td>
 245:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 246:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 247:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 248:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 249:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart_disable()</td>
 250:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the USART module.</td>
 251:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 252:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 253:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 254:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 255:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart0_enable()</td>
 256:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the USART 0 module.</td>
 257:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega165, ATmega
 258:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 259:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 260:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 261:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart0_disable()</td>
 262:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the USART 0 module.</td>
 263:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega165, ATmega
 264:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 265:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 266:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 267:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart1_enable()</td>
 268:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the USART 1 module.</td>
 269:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 270:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 271:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 272:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 273:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart1_disable()</td>
 274:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the USART 1 module.</td>
 275:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 276:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 277:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 278:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 279:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart2_enable()</td>
 280:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the USART 2 module.</td>
 281:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 282:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 283:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 284:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 285:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart2_disable()</td>
 286:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the USART 2 module.</td>
 287:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 288:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 289:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 290:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 291:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart3_enable()</td>
 292:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the USART 3 module.</td>
 293:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 294:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 295:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 296:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 297:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usart3_disable()</td>
 298:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the USART 3 module.</td>
 299:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 300:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 301:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 302:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 303:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usb_enable()</td>
 304:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the USB module.</td>
 305:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287</td>
 306:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 307:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 308:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 309:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usb_disable()</td>
 310:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the USB module.</td>
 311:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287</td>
 312:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 313:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 314:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 315:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usi_enable()</td>
 316:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Universal Serial Interface module.</td>
 317:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 318:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 319:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 320:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 321:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_usi_disable()</td>
 322:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Universal Serial Interface module.</td>
 323:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 324:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 325:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 326:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 327:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_vadc_enable()</td>
 328:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable the Voltage ADC module.</td>
 329:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega406</td>
 330:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 331:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 332:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 333:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_vadc_disable()</td>
 334:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable the Voltage ADC module.</td>
 335:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATmega406</td>
 336:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 337:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 338:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 339:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_all_enable()</td>
 340:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Enable all modules.</td>
 341:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 342:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 343:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 344:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   <tr>
 345:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>power_all_disable()</td>
 346:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>Disable all modules.</td>
 347:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 348:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****   </tr>
 349:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** </table>
 350:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** </center>
 351:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** </small>
 352:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 353:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** @} */
 354:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 355:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** // Xmega A series has AES, EBI and DMA bits
 356:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** // Include any other device on need basis
 357:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 358:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 359:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 360:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 361:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 362:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 363:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 364:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 365:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 366:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
 367:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__)
 368:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 369:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
 370:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
 371:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 372:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
 373:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
 374:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 375:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
 376:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
 377:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 378:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
 379:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
 380:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
 381:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
 382:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 383:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
 384:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
 385:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
 386:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
 387:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
 388:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
 389:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
 390:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
 391:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 392:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
 393:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do { \
 394:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 395:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 396:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 397:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 398:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 399:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 400:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 401:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** } while(0)
 402:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 403:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 404:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
 405:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do { \
 406:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 407:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 408:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 409:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 410:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 411:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 412:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 413:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** } while(0)
 414:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #endif
 415:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 416:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 417:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega16D4__) \
 418:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 419:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) \
 420:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 421:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 422:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 423:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64D3__) \
 424:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 425:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 426:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 427:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128D3__) \
 428:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 429:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192D3__) \
 430:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
 431:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__)
 432:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 433:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 434:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
 435:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
 436:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 437:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
 438:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
 439:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 440:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
 441:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
 442:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
 443:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
 444:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 445:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
 446:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
 447:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
 448:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
 449:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 450:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
 451:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
 452:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
 453:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
 454:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
 455:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
 456:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
 457:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
 458:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 459:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
 460:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
 461:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
 462:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
 463:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
 464:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
 465:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
 466:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
 467:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 468:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
 469:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
 470:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
 471:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
 472:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
 473:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
 474:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
 475:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
 476:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 477:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
 478:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
 479:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hiresd_enable()   (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
 480:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hiresd_disable()  (PR_PRPD |= (uint8_t)PR_HIRES_bm)
 481:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hirese_enable()   (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
 482:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hirese_disable()  (PR_PRPE |= (uint8_t)PR_HIRES_bm)
 483:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hiresf_enable()   (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
 484:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hiresf_disable()  (PR_PRPF |= (uint8_t)PR_HIRES_bm)
 485:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 486:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
 487:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
 488:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
 489:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
 490:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
 491:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
 492:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
 493:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
 494:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 495:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
 496:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
 497:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
 498:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
 499:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
 500:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
 501:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
 502:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
 503:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 504:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #endif
 505:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 506:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #if defined(__AVR_ATxmega16D4__) \
 507:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) \
 508:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64D3__) \
 509:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128D3__) \
 510:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192D3__) 
 511:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 512:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
 513:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do { \
 514:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
 515:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 516:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 517:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 518:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 519:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 520:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 521:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** } while(0)
 522:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 523:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 524:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
 525:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do { \
 526:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 527:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
 528:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
 529:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|R_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 530:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 531:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 532:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 533:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** } while(0)
 534:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 535:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega640__) \
 536:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
 537:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
 538:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
 539:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) 
 540:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 541:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 542:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 543:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 544:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 545:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 546:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 547:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 548:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 549:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 550:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 551:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 552:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 553:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 554:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 555:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 556:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 557:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 558:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 559:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 560:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 561:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 562:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
 563:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
 564:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 565:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
 566:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
 567:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 568:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 569:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 570:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 571:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 572:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 573:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 574:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart2_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART2))
 575:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart2_disable()  (PRR1 |= (uint8_t)(1 << PRUSART2))
 576:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 577:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart3_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART3))
 578:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart3_disable()  (PRR1 |= (uint8_t)(1 << PRUSART3))
 579:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 580:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
 581:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 582:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
 583:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|
 584:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 585:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 586:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
 587:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 588:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
 589:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|(
 590:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 591:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 592:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 593:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega128RFA1__)
 594:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 595:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 596:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 597:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 598:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 599:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 600:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 601:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 602:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 603:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 604:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 605:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 606:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 607:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 608:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 609:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 610:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 611:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 612:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 613:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 614:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 615:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 616:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
 617:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
 618:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 619:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
 620:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
 621:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 622:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 623:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 624:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 625:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 626:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 627:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 628:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
 629:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 630:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
 631:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
 632:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 633:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 634:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
 635:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 636:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
 637:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
 638:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 639:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 640:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 641:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90USB646__) \
 642:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
 643:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
 644:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__)
 645:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 646:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 647:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 648:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 649:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 650:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 651:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 652:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 653:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 654:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 655:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 656:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 657:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 658:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 659:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 660:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 661:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 662:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 663:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 664:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 665:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 666:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 667:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 668:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 669:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 670:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 671:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 672:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 673:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
 674:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 675:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 676:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 677:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 678:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 679:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
 680:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 681:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 682:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 683:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 684:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 685:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 686:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U4__) \
 687:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__)
 688:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 689:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 690:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 691:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 692:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 693:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 694:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 695:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 696:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 697:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 698:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 699:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 700:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 701:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 702:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 703:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 704:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 705:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 706:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 707:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 708:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 709:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 710:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 711:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 712:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 713:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 714:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 715:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 716:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 717:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 718:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 719:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 720:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
 721:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 722:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<P
 723:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 724:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 725:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 726:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
 727:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 728:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PR
 729:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 730:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 731:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 732:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 733:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U6__)
 734:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 735:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 736:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 737:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 738:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 739:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 740:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 741:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 742:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 743:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 744:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 745:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 746:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 747:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 748:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 749:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 750:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 751:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 752:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 753:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 754:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 755:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 756:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 757:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 758:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 759:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 760:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 761:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 762:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 763:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
 764:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 765:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 766:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 767:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 768:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 769:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
 770:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
 771:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 772:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 773:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
 774:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 775:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 776:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM1__)
 777:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 778:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 779:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 780:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 781:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 782:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 783:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 784:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
 785:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
 786:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 787:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 788:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 789:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 790:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Power Stage Controller 0 */
 791:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
 792:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
 793:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 794:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Power Stage Controller 1 */
 795:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
 796:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
 797:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 798:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Power Stage Controller 2 */
 799:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 800:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 801:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 802:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
 803:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
 804:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 805:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 806:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM2__) \
 807:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
 808:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
 809:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
 810:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
 811:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__)
 812:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 813:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 814:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 815:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 816:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 817:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 818:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 819:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART))
 820:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART))
 821:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 822:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
 823:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
 824:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 825:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 826:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 827:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 828:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Power Stage Controller 0 */
 829:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
 830:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
 831:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 832:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Power Stage Controller 1 */
 833:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
 834:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
 835:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 836:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Power Stage Controller 2 */
 837:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 838:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 839:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 840:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(
 841:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(1
 842:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 843:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 844:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM81__)
 845:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 846:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 847:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 848:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 849:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 850:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 851:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 852:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 853:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 854:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 855:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Reduced Power Stage Controller */
 856:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_pscr_enable()     (PRR &= (uint8_t)~(1 << PRPSCR))
 857:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_pscr_disable()    (PRR |= (uint8_t)(1 << PRPSCR))
 858:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 859:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Power Stage Controller 2 */
 860:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 861:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 862:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 863:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1
 864:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1<
 865:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 866:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 867:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega165__) \
 868:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
 869:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
 870:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
 871:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
 872:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
 873:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
 874:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
 875:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
 876:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
 877:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
 878:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
 879:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__)
 880:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 881:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 882:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 883:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 884:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 885:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 886:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 887:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
 888:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
 889:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 890:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 891:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 892:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 893:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1))
 894:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)))
 895:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 896:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 897:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega169__) \
 898:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
 899:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
 900:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
 901:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
 902:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
 903:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
 904:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
 905:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
 906:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
 907:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290P__) \
 908:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
 909:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
 910:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
 911:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
 912:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
 913:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__)
 914:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 915:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 916:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 917:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 918:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 919:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 920:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 921:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
 922:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
 923:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 924:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 925:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 926:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 927:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_lcd_enable()      (PRR &= (uint8_t)~(1 << PRLCD))
 928:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_lcd_disable()     (PRR |= (uint8_t)(1 << PRLCD))
 929:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 930:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|
 931:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|(
 932:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 933:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 934:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega164A__) \
 935:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
 936:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
 937:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
 938:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324PA__) \
 939:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
 940:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
 941:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__)
 942:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 943:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 944:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 945:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 946:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 947:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 948:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 949:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 950:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 951:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 952:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
 953:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
 954:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 955:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 956:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 957:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 958:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 959:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 960:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 961:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 962:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 963:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 964:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 965:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 966:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 967:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART
 968:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
 969:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 970:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 971:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega644__)
 972:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 973:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 974:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 975:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 976:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 977:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 978:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 979:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 980:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 981:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 982:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 983:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 984:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 985:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 986:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 987:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 988:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 989:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 990:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 991:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 992:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 993:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 994:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)
 995:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
 996:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 997:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
 998:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega406__)
 999:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1000:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1001:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1002:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1003:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1004:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1005:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1006:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1007:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1008:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1009:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Voltage ADC */
1010:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1011:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1012:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1013:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC))
1014:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)))
1015:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1016:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1017:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega48__) \
1018:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48A__) \
1019:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
1020:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
1021:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88A__) \
1022:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
1023:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88PA__) \
1024:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
1025:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168A__) \
1026:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
1027:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega328__) \
1028:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
1029:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
1030:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny88__)
1031:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1032:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1033:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1034:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1035:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1036:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1037:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1038:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
1039:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
1040:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1041:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1042:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1043:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1044:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1045:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1046:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1047:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR &= (uint8_t)~(1 << PRTIM2))
1048:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR |= (uint8_t)(1 << PRTIM2))
1049:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1050:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
1051:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
1052:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1053:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
1054:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
1055:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1056:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1057:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny24__) \
1058:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny24A__) \
1059:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny44__) \
1060:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny44A__) \
1061:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny84__) \
1062:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny84A__) \
1063:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny25__) \
1064:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny45__) \
1065:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny85__) \
1066:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny261__) \
1067:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny261A__) \
1068:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny461__) \
1069:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny461A__) \
1070:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny861__) \
1071:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny861A__) \
1072:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny43U__)
1073:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1074:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1075:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1076:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1077:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1078:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1079:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1080:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1081:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1082:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1083:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Universal Serial Interface */
1084:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
1085:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
1086:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1087:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1088:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1089:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1090:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1091:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega1284P__)
1092:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1093:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1094:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1095:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1096:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1097:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1098:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1099:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1100:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1101:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1102:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1103:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1104:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1105:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1106:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1107:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1108:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1109:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1110:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1111:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1112:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1113:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1114:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1115:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1116:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1117:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1118:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
1119:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
1120:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1121:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
1122:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
1123:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1124:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
1125:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
1126:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1127:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
1128:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
1129:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1130:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
1131:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
1132:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1133:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1134:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega32HVB__) \
1135:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__) \
1136:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVB__) \
1137:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__)
1138:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1139:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1140:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1141:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1142:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1143:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1144:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1145:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1146:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1147:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1148:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1149:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /* Voltage ADC */
1150:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1151:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1152:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1153:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1154:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1155:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1156:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_vrm_enable()      (PRR0 &= (uint8_t)~(1 << PRVRM))
1157:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_vrm_disable()     (PRR0 |= (uint8_t)(1 << PRVRM))
1158:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1159:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|
1160:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|(
1161:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1162:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1163:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega16M1__) \
1164:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
1165:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
1166:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega64C1__) \
1167:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega64M1__)
1168:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1169:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1170:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1171:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1172:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
1173:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
1174:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1175:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1176:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1177:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1178:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1179:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1180:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1181:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1182:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1183:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1184:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc_enable()      (PRR &= (uint8_t)~(1 << PRPSC))
1185:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_psc_disable()     (PRR |= (uint8_t)(1 << PRPSC))
1186:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1187:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_can_enable()      (PRR &= (uint8_t)~(1 << PRCAN))
1188:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_can_disable()     (PRR |= (uint8_t)(1 << PRCAN))
1189:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1190:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<
1191:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<
1192:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1193:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1194:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny167__) \
1195:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny87__)
1196:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1197:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1198:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1199:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1200:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1201:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
1202:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
1203:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1204:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1205:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1206:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1207:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1208:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1209:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1210:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1211:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1212:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1213:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
1214:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
1215:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1216:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
1217:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
1218:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1219:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1220:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90USB82__) \
1221:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
1222:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega8U2__) \
1223:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16U2__) \
1224:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__)
1225:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1226:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1227:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1228:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1229:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1230:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1231:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1232:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1233:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1234:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1235:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1236:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1237:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1238:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1239:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1240:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1241:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
1242:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
1243:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
1244:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSB)|(1<<PRUSART1)); \
1245:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
1246:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1247:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
1248:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
1249:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
1250:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSB)|(1<<PRUSART1)); \
1251:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
1252:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1253:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1254:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90SCR100__)
1255:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1256:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1257:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1258:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1259:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1260:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1261:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1262:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1263:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1264:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1265:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1266:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1267:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1268:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1269:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1270:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1271:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1272:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1273:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1274:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usbh_enable()     (PRR1 &= (uint8_t)~(1 << PRUSBH))
1275:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usbh_disable()    (PRR1 |= (uint8_t)(1 << PRUSBH))
1276:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1277:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1278:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1279:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1280:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hsspi_enable()    (PRR1 &= (uint8_t)~(1 << PRHSSPI))
1281:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_hsspi_disable()   (PRR1 |= (uint8_t)(1 << PRHSSPI))
1282:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1283:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_sci_enable()      (PRR1 &= (uint8_t)~(1 << PRSCI))
1284:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_sci_disable()     (PRR1 |= (uint8_t)(1 << PRSCI))
1285:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1286:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_aes_enable()      (PRR1 &= (uint8_t)~(1 << PRAES))
1287:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_aes_disable()     (PRR1 |= (uint8_t)(1 << PRAES))
1288:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1289:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_kb_enable()       (PRR1 &= (uint8_t)~(1 << PRKB))
1290:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_kb_disable()      (PRR1 |= (uint8_t)(1 << PRKB))
1291:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1292:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable() \
1293:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
1294:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
1295:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
1296:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
1297:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1298:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable() \
1299:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** do{ \
1300:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
1301:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
1302:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** }while(0)
1303:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1304:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1305:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny4__) \
1306:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny5__) \
1307:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny9__) \
1308:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny10__) \
1309:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny13A__) \
1310:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1311:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
1312:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
1313:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1314:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1315:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1316:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1317:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)))
1318:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)))
1319:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1320:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1321:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny20__) \
1322:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny40__)
1323:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1324:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
1325:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
1326:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1327:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1328:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1329:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1330:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1331:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1332:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1333:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_enable()   (PRR &= (uint8_t)~(1 << PRSPI))
1334:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_spi_disable()  (PRR |= (uint8_t)(1 << PRSPI))
1335:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1336:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_enable()   (PRR &= (uint8_t)~(1 << PRTWI))
1337:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_twi_disable()  (PRR |= (uint8_t)(1 << PRTWI))
1338:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1339:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1
1340:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1<
1341:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1342:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #endif
1343:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1344:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1345:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #if defined(__AVR_AT90CAN32__) \
1346:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90CAN64__) \
1347:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90CAN128__) \
1348:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM1__) \
1349:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM2__) \
1350:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
1351:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
1352:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
1353:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
1354:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__) \
1355:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90SCR100__) \
1356:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB646__) \
1357:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
1358:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB82__) \
1359:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
1360:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__) \
1361:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
1362:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
1363:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
1364:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega128RFA1__) \
1365:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1284P__) \
1366:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega162__) \
1367:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega164A__) \
1368:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
1369:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165__) \
1370:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
1371:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
1372:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
1373:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
1374:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169__) \
1375:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
1376:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
1377:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
1378:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__) \
1379:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
1380:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) \
1381:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
1382:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
1383:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
1384:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
1385:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
1386:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
1387:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega328__) \
1388:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
1389:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
1390:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
1391:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
1392:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
1393:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
1394:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
1395:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
1396:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32HVB__) \
1397:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__) \
1398:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVB__) \
1399:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__) \
1400:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
1401:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__) \
1402:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U4__) \
1403:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U6__) \
1404:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48__) \
1405:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
1406:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega640__) \
1407:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
1408:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644__) \
1409:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
1410:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
1411:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__) \
1412:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
1413:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
1414:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
1415:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
1416:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
1417:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__) \
1418:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
1419:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
1420:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
1421:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
1422:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__) \
1423:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
1424:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
1425:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega8U2__) \
1426:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16U2__) \
1427:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__) \
1428:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
1429:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny167__) \
1430:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** || defined(__DOXYGEN__)
1431:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1432:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1433:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /** \addtogroup avr_power
1434:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1435:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** Some of the newer AVRs contain a System Clock Prescale Register (CLKPR) that
1436:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** allows you to decrease the system clock frequency and the power consumption
1437:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** when the need for processing power is low. Below are two macros and an
1438:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** enumerated type that can be used to interface to the Clock Prescale Register.
1439:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1440:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \note Not all AVR devices have a Clock Prescale Register. On those devices
1441:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** without a Clock Prescale Register, these macros are not available.
1442:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** */
1443:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1444:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1445:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /** \addtogroup avr_power
1446:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \code 
1447:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** typedef enum
1448:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** {
1449:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_1 = 0,
1450:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_2 = 1,
1451:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_4 = 2,
1452:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_8 = 3,
1453:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_16 = 4,
1454:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_32 = 5,
1455:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_64 = 6,
1456:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_128 = 7,
1457:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_256 = 8,
1458:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_1_rc = 15, // ATmega128RFA1 only
1459:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** } clock_div_t;
1460:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \endcode
1461:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** Clock prescaler setting enumerations.
1462:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1463:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** */
1464:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** typedef enum
1465:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** {
1466:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_1 = 0,
1467:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_2 = 1,
1468:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_4 = 2,
1469:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_8 = 3,
1470:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_16 = 4,
1471:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_32 = 5,
1472:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_64 = 6,
1473:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_128 = 7,
1474:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     clock_div_256 = 8
1475:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #if defined(__AVR_ATmega128RFA1__)
1476:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     , clock_div_1_rc = 15
1477:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** #endif
1478:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** } clock_div_t;
1479:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1480:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1481:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
1482:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1483:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** /** \addtogroup avr_power
1484:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** \code clock_prescale_set(x) \endcode
1485:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1486:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** Set the clock prescaler register select bits, selecting a system clock
1487:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** division setting. This function is inlined, even if compiler
1488:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** optimizations are disabled.
1489:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** 
1490:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** The type of x is clock_div_t.
1491:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** */
1492:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** void clock_prescale_set(clock_div_t __x)
1493:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h **** {
1494:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     uint8_t __tmp = _BV(CLKPCE);
1495:/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h ****     __asm__ __volatile__ (
 1353               		.loc 5 1495 0
 1354 0016 90E0      		ldi r25,0
 1355 0018 80E8      		ldi r24,lo8(-128)
 1356               	/* #APP */
 1357               	 ;  1495 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/avr/power.h" 1
 1358 001a 0FB6      		in __tmp_reg__,__SREG__
 1359 001c F894      		cli
 1360 001e 8093 6100 		sts 97, r24
 1361 0022 9093 6100 		sts 97, r25
 1362 0026 0FBE      		out __SREG__, __tmp_reg__
 1363               	 ;  0 "" 2
 1364               	/* #NOAPP */
 1365               	.LBE335:
 1366               	.LBE334:
 1367               	.LBE333:
 1368               	.LBE332:
 588:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_early_init();
 1369               		.loc 1 588 0
 1370 0028 0E94 0000 		call hook_early_init
 1371               	.LVL89:
 589:../../../../tmk_core/protocol/lufa/lufa.c ****     keyboard_setup();
 1372               		.loc 1 589 0
 1373 002c 0E94 0000 		call keyboard_setup
 1374               	.LVL90:
 1375               	.LBB336:
 1376               	.LBB337:
 575:../../../../tmk_core/protocol/lufa/lufa.c ****     USB_Disable();
 1377               		.loc 1 575 0
 1378 0030 0E94 0000 		call USB_Disable
 1379               	.LVL91:
 577:../../../../tmk_core/protocol/lufa/lufa.c ****     USB_Init();
 1380               		.loc 1 577 0
 1381 0034 0E94 0000 		call USB_Init
 1382               	.LVL92:
 1383               	.LBB338:
 1384               	.LBB339:
 1385               	.LBB340:
 1386               		.loc 4 113 0
 1387 0038 8091 E200 		lds r24,226
 1388 003c 8460      		ori r24,lo8(4)
 1389 003e 8093 E200 		sts 226,r24
 1390               	.LBE340:
 1391               	.LBE339:
 1392               	.LBE338:
 581:../../../../tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 1393               		.loc 1 581 0
 1394 0042 80E0      		ldi r24,lo8(gs(sendchar))
 1395 0044 90E0      		ldi r25,hi8(gs(sendchar))
 1396 0046 0E94 0000 		call print_set_sendchar
 1397               	.LVL93:
 1398               	.LBE337:
 1399               	.LBE336:
 591:../../../../tmk_core/protocol/lufa/lufa.c ****     sei();
 1400               		.loc 1 591 0
 1401               	/* #APP */
 1402               	 ;  591 "../../../../tmk_core/protocol/lufa/lufa.c" 1
 1403 004a 7894      		sei
 1404               	 ;  0 "" 2
 1405               	/* #NOAPP */
 1406               	.L149:
 594:../../../../tmk_core/protocol/lufa/lufa.c ****     while (USB_DeviceState != DEVICE_STATE_Configured) {
 1407               		.loc 1 594 0 discriminator 1
 1408 004c 8091 0000 		lds r24,USB_DeviceState
 1409 0050 8430      		cpi r24,lo8(4)
 1410 0052 01F4      		brne .L149
 601:../../../../tmk_core/protocol/lufa/lufa.c ****     print("USB configured.\n");
 1411               		.loc 1 601 0
 1412 0054 80E0      		ldi r24,lo8(__c.4676)
 1413 0056 90E0      		ldi r25,hi8(__c.4676)
 1414 0058 0E94 0000 		call xputs
 1415               	.LVL94:
 604:../../../../tmk_core/protocol/lufa/lufa.c ****     keyboard_init();
 1416               		.loc 1 604 0
 1417 005c 0E94 0000 		call keyboard_init
 1418               	.LVL95:
 605:../../../../tmk_core/protocol/lufa/lufa.c ****     host_set_driver(&lufa_driver);
 1419               		.loc 1 605 0
 1420 0060 80E0      		ldi r24,lo8(lufa_driver)
 1421 0062 90E0      		ldi r25,hi8(lufa_driver)
 1422 0064 0E94 0000 		call host_set_driver
 1423               	.LVL96:
 610:../../../../tmk_core/protocol/lufa/lufa.c ****     print("Keyboard start.\n");
 1424               		.loc 1 610 0
 1425 0068 80E0      		ldi r24,lo8(__c.4678)
 1426 006a 90E0      		ldi r25,hi8(__c.4678)
 1427 006c 0E94 0000 		call xputs
 1428               	.LVL97:
 611:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_late_init();
 1429               		.loc 1 611 0
 1430 0070 0E94 0000 		call hook_late_init
 1431               	.LVL98:
 1432 0074 00C0      		rjmp .L154
 1433               	.L151:
 614:../../../../tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1434               		.loc 1 614 0
 1435 0076 80E0      		ldi r24,lo8(__c.4680)
 1436 0078 90E0      		ldi r25,hi8(__c.4680)
 1437 007a 0E94 0000 		call xputs
 1438               	.LVL99:
 615:../../../../tmk_core/protocol/lufa/lufa.c ****             hook_usb_suspend_loop();
 1439               		.loc 1 615 0
 1440 007e 0E94 0000 		call hook_usb_suspend_loop
 1441               	.LVL100:
 1442               	.L154:
 613:../../../../tmk_core/protocol/lufa/lufa.c ****         while (USB_DeviceState == DEVICE_STATE_Suspended) {
 1443               		.loc 1 613 0 discriminator 1
 1444 0082 8091 0000 		lds r24,USB_DeviceState
 1445 0086 8530      		cpi r24,lo8(5)
 1446 0088 01F0      		breq .L151
 618:../../../../tmk_core/protocol/lufa/lufa.c ****         keyboard_task();
 1447               		.loc 1 618 0
 1448 008a 0E94 0000 		call keyboard_task
 1449               	.LVL101:
 623:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 1450               		.loc 1 623 0
 1451 008e 00C0      		rjmp .L154
 1452               		.cfi_endproc
 1453               	.LFE121:
 1455               		.section	.text.hook_usb_wakeup,"ax",@progbits
 1456               		.weak	hook_usb_wakeup
 1458               	hook_usb_wakeup:
 1459               	.LFB126:
 648:../../../../tmk_core/protocol/lufa/lufa.c ****     }
 649:../../../../tmk_core/protocol/lufa/lufa.c **** }
 650:../../../../tmk_core/protocol/lufa/lufa.c **** 
 651:../../../../tmk_core/protocol/lufa/lufa.c **** __attribute__((weak))
 652:../../../../tmk_core/protocol/lufa/lufa.c **** void hook_usb_wakeup(void)
 653:../../../../tmk_core/protocol/lufa/lufa.c **** {
 1460               		.loc 1 653 0
 1461               		.cfi_startproc
 1462               	/* prologue: function */
 1463               	/* frame size = 0 */
 1464               	/* stack size = 0 */
 1465               	.L__stack_usage = 0
 654:../../../../tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 1466               		.loc 1 654 0
 1467 0000 0C94 0000 		jmp suspend_wakeup_init
 1468               	.LVL102:
 1469               		.cfi_endproc
 1470               	.LFE126:
 1472               		.section	.text.EVENT_USB_Device_WakeUp,"ax",@progbits
 1473               	.global	EVENT_USB_Device_WakeUp
 1475               	EVENT_USB_Device_WakeUp:
 1476               	.LFB109:
 188:../../../../tmk_core/protocol/lufa/lufa.c **** {
 1477               		.loc 1 188 0
 1478               		.cfi_startproc
 1479               	/* prologue: function */
 1480               	/* frame size = 0 */
 1481               	/* stack size = 0 */
 1482               	.L__stack_usage = 0
 189:../../../../tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 1483               		.loc 1 189 0
 1484 0000 80E0      		ldi r24,lo8(__c.4578)
 1485 0002 90E0      		ldi r25,hi8(__c.4578)
 1486 0004 0E94 0000 		call xputs
 1487               	.LVL103:
 190:../../../../tmk_core/protocol/lufa/lufa.c ****     hook_usb_wakeup();
 1488               		.loc 1 190 0
 1489 0008 0C94 0000 		jmp hook_usb_wakeup
 1490               	.LVL104:
 1491               		.cfi_endproc
 1492               	.LFE109:
 1494               	.global	lufa_driver
 1495               		.section	.data.lufa_driver,"aw",@progbits
 1498               	lufa_driver:
 1499 0000 0000      		.word	gs(keyboard_leds)
 1500 0002 0000      		.word	gs(send_keyboard)
 1501 0004 0000      		.word	gs(send_mouse)
 1502 0006 0000      		.word	gs(send_system)
 1503 0008 0000      		.word	gs(send_consumer)
 1504               	.global	keyboard_protocol
 1505               		.section	.data.keyboard_protocol,"aw",@progbits
 1508               	keyboard_protocol:
 1509 0000 01        		.byte	1
 1510               	.global	keyboard_idle
 1511               		.section	.bss.keyboard_idle,"aw",@nobits
 1514               	keyboard_idle:
 1515 0000 00        		.zero	1
 1516               		.section	.progmem.data.__c.4560,"a",@progbits
 1519               	__c.4560:
 1520 0000 5B43 5D00 		.string	"[C]"
 1521               		.section	.progmem.data.__c.4565,"a",@progbits
 1524               	__c.4565:
 1525 0000 5B44 5D00 		.string	"[D]"
 1526               		.section	.progmem.data.__c.4570,"a",@progbits
 1529               	__c.4570:
 1530 0000 5B52 5D00 		.string	"[R]"
 1531               		.section	.progmem.data.__c.4574,"a",@progbits
 1534               	__c.4574:
 1535 0000 5B53 5D00 		.string	"[S]"
 1536               		.section	.progmem.data.__c.4578,"a",@progbits
 1539               	__c.4578:
 1540 0000 5B57 5D00 		.string	"[W]"
 1541               		.section	.bss.count.4584,"aw",@nobits
 1544               	count.4584:
 1545 0000 00        		.zero	1
 1546               		.section	.bss.console_flush,"aw",@nobits
 1549               	console_flush:
 1550 0000 00        		.zero	1
 1551               		.section	.bss.keyboard_report_sent,"aw",@nobits
 1554               	keyboard_report_sent:
 1555 0000 0000 0000 		.zero	8
 1555      0000 0000 
 1556               		.section	.bss.keyboard_led_stats,"aw",@nobits
 1559               	keyboard_led_stats:
 1560 0000 00        		.zero	1
 1561               		.section	.bss.timeouted.4650,"aw",@nobits
 1564               	timeouted.4650:
 1565 0000 00        		.zero	1
 1566               		.section	.progmem.data.__c.4676,"a",@progbits
 1569               	__c.4676:
 1570 0000 5553 4220 		.string	"USB configured.\n"
 1570      636F 6E66 
 1570      6967 7572 
 1570      6564 2E0A 
 1570      00
 1571               		.section	.progmem.data.__c.4678,"a",@progbits
 1574               	__c.4678:
 1575 0000 4B65 7962 		.string	"Keyboard start.\n"
 1575      6F61 7264 
 1575      2073 7461 
 1575      7274 2E0A 
 1575      00
 1576               		.section	.progmem.data.__c.4680,"a",@progbits
 1579               	__c.4680:
 1580 0000 5B73 5D00 		.string	"[s]"
 1581               		.text
 1582               	.Letext0:
 1583               		.file 6 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 1584               		.file 7 "../../../../tmk_core/common/report.h"
 1585               		.file 8 "../../../../tmk_core/common/host_driver.h"
 1586               		.file 9 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 1587               		.file 10 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType
 1588               		.file 11 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDC
 1589               		.file 12 "../../../../tmk_core/protocol/lufa/lufa.h"
 1590               		.file 13 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AV
 1591               		.file 14 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandard
 1592               		.file 15 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 1593               		.file 16 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/USBController_AVR
 1594               		.file 17 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointS
 1595               		.file 18 "../../../../tmk_core/common/action.h"
 1596               		.file 19 "../../../../tmk_core/common/suspend.h"
 1597               		.file 20 "../../../../tmk_core/common/avr/xprintf.h"
 1598               		.file 21 "../../../../tmk_core/common/print.h"
 1599               		.file 22 "../../../../tmk_core/common/keyboard.h"
 1600               		.file 23 "../../../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lufa.c
     /tmp/ccTtyJrR.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccTtyJrR.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccTtyJrR.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccTtyJrR.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccTtyJrR.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccTtyJrR.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccTtyJrR.s:13     .text.keyboard_leds:0000000000000000 keyboard_leds
     /tmp/ccTtyJrR.s:1559   .bss.keyboard_led_stats:0000000000000000 keyboard_led_stats
     /tmp/ccTtyJrR.s:31     .text.sendchar:0000000000000000 sendchar
     /tmp/ccTtyJrR.s:1549   .bss.console_flush:0000000000000000 console_flush
     /tmp/ccTtyJrR.s:1564   .bss.timeouted.4650:0000000000000000 timeouted.4650
     /tmp/ccTtyJrR.s:262    .text.send_consumer:0000000000000000 send_consumer
     /tmp/ccTtyJrR.s:376    .text.send_system:0000000000000000 send_system
     /tmp/ccTtyJrR.s:491    .text.send_mouse:0000000000000000 send_mouse
     /tmp/ccTtyJrR.s:574    .text.send_keyboard:0000000000000000 send_keyboard
     /tmp/ccTtyJrR.s:1554   .bss.keyboard_report_sent:0000000000000000 keyboard_report_sent
     /tmp/ccTtyJrR.s:685    .text.EVENT_USB_Device_Connect:0000000000000000 EVENT_USB_Device_Connect
     /tmp/ccTtyJrR.s:1519   .progmem.data.__c.4560:0000000000000000 __c.4560
     /tmp/ccTtyJrR.s:728    .text.EVENT_USB_Device_Disconnect:0000000000000000 EVENT_USB_Device_Disconnect
     /tmp/ccTtyJrR.s:1524   .progmem.data.__c.4565:0000000000000000 __c.4565
     /tmp/ccTtyJrR.s:750    .text.EVENT_USB_Device_Reset:0000000000000000 EVENT_USB_Device_Reset
     /tmp/ccTtyJrR.s:1529   .progmem.data.__c.4570:0000000000000000 __c.4570
     /tmp/ccTtyJrR.s:769    .text.EVENT_USB_Device_StartOfFrame:0000000000000000 EVENT_USB_Device_StartOfFrame
     /tmp/ccTtyJrR.s:1544   .bss.count.4584:0000000000000000 count.4584
     /tmp/ccTtyJrR.s:909    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 EVENT_USB_Device_ConfigurationChanged
     /tmp/ccTtyJrR.s:961    .text.EVENT_USB_Device_ControlRequest:0000000000000000 EVENT_USB_Device_ControlRequest
     /tmp/ccTtyJrR.s:1508   .data.keyboard_protocol:0000000000000000 keyboard_protocol
     /tmp/ccTtyJrR.s:1514   .bss.keyboard_idle:0000000000000000 keyboard_idle
     /tmp/ccTtyJrR.s:1226   .text.hook_early_init:0000000000000000 hook_early_init
     /tmp/ccTtyJrR.s:1241   .text.hook_late_init:0000000000000000 hook_late_init
     /tmp/ccTtyJrR.s:1256   .text.hook_usb_suspend_entry:0000000000000000 hook_usb_suspend_entry
     /tmp/ccTtyJrR.s:1271   .text.EVENT_USB_Device_Suspend:0000000000000000 EVENT_USB_Device_Suspend
     /tmp/ccTtyJrR.s:1534   .progmem.data.__c.4574:0000000000000000 __c.4574
     /tmp/ccTtyJrR.s:1293   .text.hook_usb_suspend_loop:0000000000000000 hook_usb_suspend_loop
     /tmp/ccTtyJrR.s:1323   .text.startup.main:0000000000000000 main
     /tmp/ccTtyJrR.s:1569   .progmem.data.__c.4676:0000000000000000 __c.4676
     /tmp/ccTtyJrR.s:1498   .data.lufa_driver:0000000000000000 lufa_driver
     /tmp/ccTtyJrR.s:1574   .progmem.data.__c.4678:0000000000000000 __c.4678
     /tmp/ccTtyJrR.s:1579   .progmem.data.__c.4680:0000000000000000 __c.4680
     /tmp/ccTtyJrR.s:1458   .text.hook_usb_wakeup:0000000000000000 hook_usb_wakeup
     /tmp/ccTtyJrR.s:1475   .text.EVENT_USB_Device_WakeUp:0000000000000000 EVENT_USB_Device_WakeUp
     /tmp/ccTtyJrR.s:1539   .progmem.data.__c.4578:0000000000000000 __c.4578

UNDEFINED SYMBOLS
USB_DeviceState
Endpoint_Write_Stream_LE
xputs
USB_IsInitialized
USB_Disable
USB_Init
__udivmodqi4
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_Write_Control_Stream_LE
Endpoint_ClearStatusStage
clear_keyboard
suspend_power_down
USB_Device_RemoteWakeupEnabled
suspend_wakeup_condition
USB_Device_SendRemoteWakeup
keyboard_setup
print_set_sendchar
keyboard_init
host_set_driver
keyboard_task
suspend_wakeup_init
__do_copy_data
__do_clear_bss
