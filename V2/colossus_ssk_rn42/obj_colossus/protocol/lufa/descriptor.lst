   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  12               	.global	CALLBACK_USB_GetDescriptor
  14               	CALLBACK_USB_GetDescriptor:
  15               	.LFB100:
  16               		.file 1 "../../../../tmk_core/protocol/lufa/descriptor.c"
   1:../../../../tmk_core/protocol/lufa/descriptor.c **** /* 
   2:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../../../tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:../../../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../../../tmk_core/protocol/lufa/descriptor.c ****  */
   7:../../../../tmk_core/protocol/lufa/descriptor.c **** 
   8:../../../../tmk_core/protocol/lufa/descriptor.c **** /*
   9:../../../../tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:../../../../tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  12:../../../../tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../../../tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:../../../../tmk_core/protocol/lufa/descriptor.c **** */
  15:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  16:../../../../tmk_core/protocol/lufa/descriptor.c **** /*
  17:../../../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  20:../../../../tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../../../tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:../../../../tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:../../../../tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:../../../../tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../../../tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:../../../../tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:../../../../tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  29:../../../../tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:../../../../tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:../../../../tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:../../../../tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:../../../../tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../../../tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:../../../../tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:../../../../tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:../../../../tmk_core/protocol/lufa/descriptor.c **** */
  38:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  39:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:../../../../tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  43:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  44:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:../../../../tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  49:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  61:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  65:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  75:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00),
  77:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Usage ID 0x00-0xFF */
  78:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF), /* needs 16 bit to indicate positive value */
  80:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:../../../../tmk_core/protocol/lufa/descriptor.c **** };
  85:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  86:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  89:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:../../../../tmk_core/protocol/lufa/descriptor.c **** 
  95:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 107:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 116:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 123:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:../../../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 131:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 134:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 135:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 136:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 139:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 144:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* System Power Down */
 146:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 152:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 165:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 166:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 167:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 170:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 176:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 182:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 187:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 188:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 189:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 192:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 204:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 214:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:../../../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:../../../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 224:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 225:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 226:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 231:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 233:../../../../tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:../../../../tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 238:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 240:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:../../../../tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 245:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:../../../../tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:../../../../tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 249:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 251:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 252:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:../../../../tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 257:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Config =
 258:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 259:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 261:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 264:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 267:../../../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 269:../../../../tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(100)
 270:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 271:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 272:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 273:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 274:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 275:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 277:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 279:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 282:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 284:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 288:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 290:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 291:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 293:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 295:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 301:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 302:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 304:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 306:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 311:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 312:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 313:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 314:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 315:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 318:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 320:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 323:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 325:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 329:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 331:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 332:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 334:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 336:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 342:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 343:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 345:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 347:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 352:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 353:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 354:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 355:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Extra
 356:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 357:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 360:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 362:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 365:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 367:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 371:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 373:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 374:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 376:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 378:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 384:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 385:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 387:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 389:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 394:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 395:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 396:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 397:../../../../tmk_core/protocol/lufa/descriptor.c ****      * Console
 398:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 399:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 402:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 404:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 407:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 409:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 413:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 415:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 416:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 417:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 418:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 420:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 426:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 427:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 429:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 431:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 436:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 437:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 439:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 441:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 446:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 447:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 448:../../../../tmk_core/protocol/lufa/descriptor.c ****     /*
 449:../../../../tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 450:../../../../tmk_core/protocol/lufa/descriptor.c ****      */
 451:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 454:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 456:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:../../../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 459:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 461:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:../../../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 465:../../../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 467:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 468:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 470:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 472:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:../../../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:../../../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:../../../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 478:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 479:../../../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:../../../../tmk_core/protocol/lufa/descriptor.c ****         {
 481:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 483:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:../../../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:../../../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:../../../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:../../../../tmk_core/protocol/lufa/descriptor.c ****         },
 488:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 489:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 490:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 491:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 492:../../../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 493:../../../../tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 494:../../../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 495:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 496:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 497:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 498:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 499:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 500:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 501:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 502:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 503:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 504:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 505:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 506:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 507:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 508:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 509:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 510:../../../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 511:../../../../tmk_core/protocol/lufa/descriptor.c **** {
 512:../../../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 513:../../../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 514:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 515:../../../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 516:../../../../tmk_core/protocol/lufa/descriptor.c **** };
 517:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 518:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 519:../../../../tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 520:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 521:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 522:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 523:../../../../tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 524:../../../../tmk_core/protocol/lufa/descriptor.c ****  */
 525:../../../../tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 526:../../../../tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 527:../../../../tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 528:../../../../tmk_core/protocol/lufa/descriptor.c **** {
  17               		.loc 1 528 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
 529:../../../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
 530:../../../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 531:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 532:../../../../tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 533:../../../../tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 534:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 535:../../../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
 536:../../../../tmk_core/protocol/lufa/descriptor.c ****     {
 537:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 538:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 539:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 540:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 541:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 542:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 543:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 544:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 545:../../../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 546:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
 547:../../../../tmk_core/protocol/lufa/descriptor.c ****             {
 548:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 549:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 550:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 551:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 552:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 553:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 554:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 555:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 556:../../../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 557:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 558:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 559:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 560:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 561:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 562:../../../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 563:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 564:../../../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 565:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 566:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 567:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 568:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 569:../../../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 570:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 571:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 572:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 573:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 574:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 575:../../../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 576:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 577:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 578:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 579:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 580:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 581:../../../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 582:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 583:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 584:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 585:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 586:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 587:../../../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 588:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 589:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 590:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 591:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 592:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 593:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 594:../../../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 595:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 596:../../../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 597:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 598:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 599:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 600:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 601:../../../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 602:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 603:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 604:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 605:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 606:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 607:../../../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 608:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 609:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 610:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 611:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 612:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 613:../../../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 614:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 615:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 616:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 617:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 618:../../../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 619:../../../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 620:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 621:../../../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 622:../../../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 623:../../../../tmk_core/protocol/lufa/descriptor.c **** #endif
 624:../../../../tmk_core/protocol/lufa/descriptor.c ****             }
 625:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
 626:../../../../tmk_core/protocol/lufa/descriptor.c ****     }
 627:../../../../tmk_core/protocol/lufa/descriptor.c **** 
 628:../../../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 629:../../../../tmk_core/protocol/lufa/descriptor.c ****     return Size;
 630:../../../../tmk_core/protocol/lufa/descriptor.c **** }
  24               		.loc 1 630 0
  25 0000 292F      		mov r18,r25
  26 0002 3327      		clr r19
 535:../../../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  27               		.loc 1 535 0
  28 0004 2330      		cpi r18,3
  29 0006 3105      		cpc r19,__zero_reg__
  30 0008 01F0      		breq .L5
  31 000a 04F4      		brge .L8
  32 000c 2130      		cpi r18,1
  33 000e 3105      		cpc r19,__zero_reg__
  34 0010 01F4      		brne .+2
  35 0012 00C0      		rjmp .L12
  36 0014 2230      		cpi r18,2
  37 0016 3105      		cpc r19,__zero_reg__
  38 0018 01F0      		breq .+2
  39 001a 00C0      		rjmp .L15
  40 001c 00C0      		rjmp .L4
  41               	.L8:
  42 001e 2132      		cpi r18,33
  43 0020 3105      		cpc r19,__zero_reg__
  44 0022 01F0      		breq .L6
  45 0024 2232      		cpi r18,34
  46 0026 3105      		cpc r19,__zero_reg__
  47 0028 01F0      		breq .L7
  48 002a 00C0      		rjmp .L15
  49               	.L4:
  50               	.LVL1:
 543:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  51               		.loc 1 543 0
  52 002c E4E7      		ldi r30,lo8(116)
  53 002e F0E0      		ldi r31,0
 542:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  54               		.loc 1 542 0
  55 0030 80E0      		ldi r24,lo8(ConfigurationDescriptor)
  56 0032 90E0      		ldi r25,hi8(ConfigurationDescriptor)
  57               	.LVL2:
 544:../../../../tmk_core/protocol/lufa/descriptor.c ****             break;
  58               		.loc 1 544 0
  59 0034 00C0      		rjmp .L3
  60               	.LVL3:
  61               	.L5:
  62               		.loc 1 630 0
  63 0036 9927      		clr r25
  64               	.LVL4:
 546:../../../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  65               		.loc 1 546 0
  66 0038 8130      		cpi r24,1
  67 003a 9105      		cpc r25,__zero_reg__
  68 003c 01F0      		breq .L10
  69 003e 8230      		cpi r24,2
  70 0040 9105      		cpc r25,__zero_reg__
  71 0042 01F0      		breq .L11
  72 0044 892B      		or r24,r25
  73 0046 01F0      		breq .+2
  74 0048 00C0      		rjmp .L15
  75               	.LVL5:
  76               	.LBB2:
 550:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  77               		.loc 1 550 0
  78 004a E0E0      		ldi r30,lo8(LanguageString)
  79 004c F0E0      		ldi r31,hi8(LanguageString)
  80               	/* #APP */
  81               	 ;  550 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
  82 004e E491      		lpm r30, Z
  83               		
  84               	 ;  0 "" 2
  85               	.LVL6:
  86               	/* #NOAPP */
  87               	.LBE2:
  88 0050 F0E0      		ldi r31,0
  89               	.LVL7:
 549:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
  90               		.loc 1 549 0
  91 0052 80E0      		ldi r24,lo8(LanguageString)
  92 0054 90E0      		ldi r25,hi8(LanguageString)
 551:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
  93               		.loc 1 551 0
  94 0056 00C0      		rjmp .L3
  95               	.LVL8:
  96               	.L10:
  97               	.LBB3:
 554:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  98               		.loc 1 554 0
  99 0058 E0E0      		ldi r30,lo8(ManufacturerString)
 100 005a F0E0      		ldi r31,hi8(ManufacturerString)
 101               	/* #APP */
 102               	 ;  554 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
 103 005c E491      		lpm r30, Z
 104               		
 105               	 ;  0 "" 2
 106               	.LVL9:
 107               	/* #NOAPP */
 108               	.LBE3:
 109 005e F0E0      		ldi r31,0
 110               	.LVL10:
 553:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 111               		.loc 1 553 0
 112 0060 80E0      		ldi r24,lo8(ManufacturerString)
 113 0062 90E0      		ldi r25,hi8(ManufacturerString)
 555:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 114               		.loc 1 555 0
 115 0064 00C0      		rjmp .L3
 116               	.LVL11:
 117               	.L11:
 118               	.LBB4:
 558:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 119               		.loc 1 558 0
 120 0066 E0E0      		ldi r30,lo8(ProductString)
 121 0068 F0E0      		ldi r31,hi8(ProductString)
 122               	/* #APP */
 123               	 ;  558 "../../../../tmk_core/protocol/lufa/descriptor.c" 1
 124 006a E491      		lpm r30, Z
 125               		
 126               	 ;  0 "" 2
 127               	.LVL12:
 128               	/* #NOAPP */
 129               	.LBE4:
 130 006c F0E0      		ldi r31,0
 131               	.LVL13:
 557:../../../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 132               		.loc 1 557 0
 133 006e 80E0      		ldi r24,lo8(ProductString)
 134 0070 90E0      		ldi r25,hi8(ProductString)
 559:../../../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 135               		.loc 1 559 0
 136 0072 00C0      		rjmp .L3
 137               	.LVL14:
 138               	.L6:
 139 0074 6430      		cpi r22,lo8(4)
 140 0076 00F4      		brsh .L15
 141 0078 E62F      		mov r30,r22
 142 007a F0E0      		ldi r31,0
 143 007c EE0F      		lsl r30
 144 007e FF1F      		rol r31
 145 0080 E050      		subi r30,lo8(-(CSWTCH.2))
 146 0082 F040      		sbci r31,hi8(-(CSWTCH.2))
 147 0084 8081      		ld r24,Z
 148 0086 9181      		ldd r25,Z+1
 149               	.LVL15:
 150 0088 E9E0      		ldi r30,lo8(9)
 151 008a F0E0      		ldi r31,0
 152 008c 00C0      		rjmp .L3
 153               	.LVL16:
 154               	.L7:
 155 008e 6430      		cpi r22,lo8(4)
 156 0090 00F4      		brsh .L15
 157 0092 E62F      		mov r30,r22
 158 0094 F0E0      		ldi r31,0
 159 0096 DF01      		movw r26,r30
 160 0098 AA0F      		lsl r26
 161 009a BB1F      		rol r27
 162               	.LVL17:
 163 009c A050      		subi r26,lo8(-(CSWTCH.4))
 164 009e B040      		sbci r27,hi8(-(CSWTCH.4))
 165 00a0 8D91      		ld r24,X+
 166 00a2 9C91      		ld r25,X
 167               		.loc 1 630 0
 168 00a4 E050      		subi r30,lo8(-(CSWTCH.5))
 169 00a6 F040      		sbci r31,hi8(-(CSWTCH.5))
 170 00a8 E081      		ld r30,Z
 171 00aa F0E0      		ldi r31,0
 172 00ac 00C0      		rjmp .L3
 173               	.LVL18:
 174               	.L12:
 539:../../../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 175               		.loc 1 539 0
 176 00ae E2E1      		ldi r30,lo8(18)
 177 00b0 F0E0      		ldi r31,0
 538:../../../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 178               		.loc 1 538 0
 179 00b2 80E0      		ldi r24,lo8(DeviceDescriptor)
 180 00b4 90E0      		ldi r25,hi8(DeviceDescriptor)
 181               	.LVL19:
 182 00b6 00C0      		rjmp .L3
 183               	.L15:
 184 00b8 E0E0      		ldi r30,0
 185 00ba F0E0      		ldi r31,0
 186 00bc 80E0      		ldi r24,0
 187 00be 90E0      		ldi r25,0
 188               	.LVL20:
 189               	.L3:
 628:../../../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 190               		.loc 1 628 0
 191 00c0 DA01      		movw r26,r20
 192 00c2 8D93      		st X+,r24
 193 00c4 9C93      		st X,r25
 194               		.loc 1 630 0
 195 00c6 CF01      		movw r24,r30
 196               	.LVL21:
 197 00c8 0895      		ret
 198               		.cfi_endproc
 199               	.LFE100:
 201               	.global	ProductString
 202               		.section	.progmem.data.ProductString,"a",@progbits
 205               	ProductString:
 206 0000 1C        		.byte	28
 207 0001 03        		.byte	3
 208 0002 4D00      		.string	"M"
 209 0004 6F00      		.string	"o"
 210 0006 6400      		.string	"d"
 211 0008 6500      		.string	"e"
 212 000a 6C00      		.string	"l"
 213 000c 4D00      		.string	"M"
 214 000e 5300      		.string	"S"
 215 0010 5300      		.string	"S"
 216 0012 4B00      		.string	"K"
 217 0014 5600      		.string	"V"
 218 0016 3200      		.string	"2"
 219 0018 2E00      		.string	"."
 220 001a 3000      		.string	"0"
 221 001c 00        		.string	""
 222 001d 00        		.string	""
 223               	.global	ManufacturerString
 224               		.section	.progmem.data.ManufacturerString,"a",@progbits
 227               	ManufacturerString:
 228 0000 1A        		.byte	26
 229 0001 03        		.byte	3
 230 0002 5000      		.string	"P"
 231 0004 6800      		.string	"h"
 232 0006 6F00      		.string	"o"
 233 0008 7300      		.string	"s"
 234 000a 7000      		.string	"p"
 235 000c 6800      		.string	"h"
 236 000e 6F00      		.string	"o"
 237 0010 7200      		.string	"r"
 238 0012 4700      		.string	"G"
 239 0014 6C00      		.string	"l"
 240 0016 6F00      		.string	"o"
 241 0018 7700      		.string	"w"
 242 001a 00        		.string	""
 243 001b 00        		.string	""
 244               	.global	LanguageString
 245               		.section	.progmem.data.LanguageString,"a",@progbits
 248               	LanguageString:
 249 0000 04        		.byte	4
 250 0001 03        		.byte	3
 251 0002 0904      		.word	1033
 252               	.global	ConfigurationDescriptor
 253               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 256               	ConfigurationDescriptor:
 257 0000 09        		.byte	9
 258 0001 02        		.byte	2
 259 0002 7400      		.word	116
 260 0004 04        		.byte	4
 261 0005 01        		.byte	1
 262 0006 00        		.byte	0
 263 0007 A0        		.byte	-96
 264 0008 32        		.byte	50
 265 0009 09        		.byte	9
 266 000a 04        		.byte	4
 267 000b 00        		.byte	0
 268 000c 00        		.byte	0
 269 000d 01        		.byte	1
 270 000e 03        		.byte	3
 271 000f 01        		.byte	1
 272 0010 01        		.byte	1
 273 0011 00        		.byte	0
 274 0012 09        		.byte	9
 275 0013 21        		.byte	33
 276 0014 1101      		.word	273
 277 0016 00        		.byte	0
 278 0017 01        		.byte	1
 279 0018 22        		.byte	34
 280 0019 4000      		.word	64
 281 001b 07        		.byte	7
 282 001c 05        		.byte	5
 283 001d 81        		.byte	-127
 284 001e 03        		.byte	3
 285 001f 0800      		.word	8
 286 0021 0A        		.byte	10
 287 0022 09        		.byte	9
 288 0023 04        		.byte	4
 289 0024 01        		.byte	1
 290 0025 00        		.byte	0
 291 0026 01        		.byte	1
 292 0027 03        		.byte	3
 293 0028 01        		.byte	1
 294 0029 02        		.byte	2
 295 002a 00        		.byte	0
 296 002b 09        		.byte	9
 297 002c 21        		.byte	33
 298 002d 1101      		.word	273
 299 002f 00        		.byte	0
 300 0030 01        		.byte	1
 301 0031 22        		.byte	34
 302 0032 4D00      		.word	77
 303 0034 07        		.byte	7
 304 0035 05        		.byte	5
 305 0036 82        		.byte	-126
 306 0037 03        		.byte	3
 307 0038 0800      		.word	8
 308 003a 0A        		.byte	10
 309 003b 09        		.byte	9
 310 003c 04        		.byte	4
 311 003d 02        		.byte	2
 312 003e 00        		.byte	0
 313 003f 01        		.byte	1
 314 0040 03        		.byte	3
 315 0041 00        		.byte	0
 316 0042 00        		.byte	0
 317 0043 00        		.byte	0
 318 0044 09        		.byte	9
 319 0045 21        		.byte	33
 320 0046 1101      		.word	273
 321 0048 00        		.byte	0
 322 0049 01        		.byte	1
 323 004a 22        		.byte	34
 324 004b 3600      		.word	54
 325 004d 07        		.byte	7
 326 004e 05        		.byte	5
 327 004f 83        		.byte	-125
 328 0050 03        		.byte	3
 329 0051 0800      		.word	8
 330 0053 0A        		.byte	10
 331 0054 09        		.byte	9
 332 0055 04        		.byte	4
 333 0056 03        		.byte	3
 334 0057 00        		.byte	0
 335 0058 02        		.byte	2
 336 0059 03        		.byte	3
 337 005a 00        		.byte	0
 338 005b 00        		.byte	0
 339 005c 00        		.byte	0
 340 005d 09        		.byte	9
 341 005e 21        		.byte	33
 342 005f 1101      		.word	273
 343 0061 00        		.byte	0
 344 0062 01        		.byte	1
 345 0063 22        		.byte	34
 346 0064 2200      		.word	34
 347 0066 07        		.byte	7
 348 0067 05        		.byte	5
 349 0068 84        		.byte	-124
 350 0069 03        		.byte	3
 351 006a 2000      		.word	32
 352 006c 01        		.byte	1
 353 006d 07        		.byte	7
 354 006e 05        		.byte	5
 355 006f 04        		.byte	4
 356 0070 03        		.byte	3
 357 0071 2000      		.word	32
 358 0073 01        		.byte	1
 359               	.global	DeviceDescriptor
 360               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 363               	DeviceDescriptor:
 364 0000 12        		.byte	18
 365 0001 01        		.byte	1
 366 0002 1001      		.word	272
 367 0004 00        		.byte	0
 368 0005 00        		.byte	0
 369 0006 00        		.byte	0
 370 0007 08        		.byte	8
 371 0008 EDFE      		.word	-275
 372 000a 6060      		.word	24672
 373 000c 0100      		.word	1
 374 000e 01        		.byte	1
 375 000f 02        		.byte	2
 376 0010 00        		.byte	0
 377 0011 01        		.byte	1
 378               	.global	ConsoleReport
 379               		.section	.progmem.data.ConsoleReport,"a",@progbits
 382               	ConsoleReport:
 383 0000 06        		.byte	6
 384 0001 31        		.byte	49
 385 0002 FF        		.byte	-1
 386 0003 09        		.byte	9
 387 0004 74        		.byte	116
 388 0005 A1        		.byte	-95
 389 0006 01        		.byte	1
 390 0007 09        		.byte	9
 391 0008 75        		.byte	117
 392 0009 15        		.byte	21
 393 000a 00        		.byte	0
 394 000b 26        		.byte	38
 395 000c FF        		.byte	-1
 396 000d 00        		.byte	0
 397 000e 95        		.byte	-107
 398 000f 20        		.byte	32
 399 0010 75        		.byte	117
 400 0011 08        		.byte	8
 401 0012 81        		.byte	-127
 402 0013 02        		.byte	2
 403 0014 09        		.byte	9
 404 0015 76        		.byte	118
 405 0016 15        		.byte	21
 406 0017 00        		.byte	0
 407 0018 26        		.byte	38
 408 0019 FF        		.byte	-1
 409 001a 00        		.byte	0
 410 001b 95        		.byte	-107
 411 001c 20        		.byte	32
 412 001d 75        		.byte	117
 413 001e 08        		.byte	8
 414 001f 91        		.byte	-111
 415 0020 02        		.byte	2
 416 0021 C0        		.byte	-64
 417               	.global	ExtrakeyReport
 418               		.section	.progmem.data.ExtrakeyReport,"a",@progbits
 421               	ExtrakeyReport:
 422 0000 05        		.byte	5
 423 0001 01        		.byte	1
 424 0002 09        		.byte	9
 425 0003 80        		.byte	-128
 426 0004 A1        		.byte	-95
 427 0005 01        		.byte	1
 428 0006 85        		.byte	-123
 429 0007 02        		.byte	2
 430 0008 16        		.byte	22
 431 0009 01        		.byte	1
 432 000a 00        		.byte	0
 433 000b 26        		.byte	38
 434 000c B7        		.byte	-73
 435 000d 00        		.byte	0
 436 000e 1A        		.byte	26
 437 000f 01        		.byte	1
 438 0010 00        		.byte	0
 439 0011 2A        		.byte	42
 440 0012 B7        		.byte	-73
 441 0013 00        		.byte	0
 442 0014 75        		.byte	117
 443 0015 10        		.byte	16
 444 0016 95        		.byte	-107
 445 0017 01        		.byte	1
 446 0018 81        		.byte	-127
 447 0019 00        		.byte	0
 448 001a C0        		.byte	-64
 449 001b 05        		.byte	5
 450 001c 0C        		.byte	12
 451 001d 09        		.byte	9
 452 001e 01        		.byte	1
 453 001f A1        		.byte	-95
 454 0020 01        		.byte	1
 455 0021 85        		.byte	-123
 456 0022 03        		.byte	3
 457 0023 16        		.byte	22
 458 0024 01        		.byte	1
 459 0025 00        		.byte	0
 460 0026 26        		.byte	38
 461 0027 9C        		.byte	-100
 462 0028 02        		.byte	2
 463 0029 1A        		.byte	26
 464 002a 01        		.byte	1
 465 002b 00        		.byte	0
 466 002c 2A        		.byte	42
 467 002d 9C        		.byte	-100
 468 002e 02        		.byte	2
 469 002f 75        		.byte	117
 470 0030 10        		.byte	16
 471 0031 95        		.byte	-107
 472 0032 01        		.byte	1
 473 0033 81        		.byte	-127
 474 0034 00        		.byte	0
 475 0035 C0        		.byte	-64
 476               	.global	MouseReport
 477               		.section	.progmem.data.MouseReport,"a",@progbits
 480               	MouseReport:
 481 0000 05        		.byte	5
 482 0001 01        		.byte	1
 483 0002 09        		.byte	9
 484 0003 02        		.byte	2
 485 0004 A1        		.byte	-95
 486 0005 01        		.byte	1
 487 0006 09        		.byte	9
 488 0007 01        		.byte	1
 489 0008 A1        		.byte	-95
 490 0009 00        		.byte	0
 491 000a 05        		.byte	5
 492 000b 09        		.byte	9
 493 000c 19        		.byte	25
 494 000d 01        		.byte	1
 495 000e 29        		.byte	41
 496 000f 05        		.byte	5
 497 0010 15        		.byte	21
 498 0011 00        		.byte	0
 499 0012 25        		.byte	37
 500 0013 01        		.byte	1
 501 0014 95        		.byte	-107
 502 0015 05        		.byte	5
 503 0016 75        		.byte	117
 504 0017 01        		.byte	1
 505 0018 81        		.byte	-127
 506 0019 02        		.byte	2
 507 001a 95        		.byte	-107
 508 001b 01        		.byte	1
 509 001c 75        		.byte	117
 510 001d 03        		.byte	3
 511 001e 81        		.byte	-127
 512 001f 01        		.byte	1
 513 0020 05        		.byte	5
 514 0021 01        		.byte	1
 515 0022 09        		.byte	9
 516 0023 30        		.byte	48
 517 0024 09        		.byte	9
 518 0025 31        		.byte	49
 519 0026 15        		.byte	21
 520 0027 81        		.byte	-127
 521 0028 25        		.byte	37
 522 0029 7F        		.byte	127
 523 002a 95        		.byte	-107
 524 002b 02        		.byte	2
 525 002c 75        		.byte	117
 526 002d 08        		.byte	8
 527 002e 81        		.byte	-127
 528 002f 06        		.byte	6
 529 0030 09        		.byte	9
 530 0031 38        		.byte	56
 531 0032 15        		.byte	21
 532 0033 81        		.byte	-127
 533 0034 25        		.byte	37
 534 0035 7F        		.byte	127
 535 0036 95        		.byte	-107
 536 0037 01        		.byte	1
 537 0038 75        		.byte	117
 538 0039 08        		.byte	8
 539 003a 81        		.byte	-127
 540 003b 06        		.byte	6
 541 003c 05        		.byte	5
 542 003d 0C        		.byte	12
 543 003e 0A        		.byte	10
 544 003f 38        		.byte	56
 545 0040 02        		.byte	2
 546 0041 15        		.byte	21
 547 0042 81        		.byte	-127
 548 0043 25        		.byte	37
 549 0044 7F        		.byte	127
 550 0045 95        		.byte	-107
 551 0046 01        		.byte	1
 552 0047 75        		.byte	117
 553 0048 08        		.byte	8
 554 0049 81        		.byte	-127
 555 004a 06        		.byte	6
 556 004b C0        		.byte	-64
 557 004c C0        		.byte	-64
 558               	.global	KeyboardReport
 559               		.section	.progmem.data.KeyboardReport,"a",@progbits
 562               	KeyboardReport:
 563 0000 05        		.byte	5
 564 0001 01        		.byte	1
 565 0002 09        		.byte	9
 566 0003 06        		.byte	6
 567 0004 A1        		.byte	-95
 568 0005 01        		.byte	1
 569 0006 05        		.byte	5
 570 0007 07        		.byte	7
 571 0008 19        		.byte	25
 572 0009 E0        		.byte	-32
 573 000a 29        		.byte	41
 574 000b E7        		.byte	-25
 575 000c 15        		.byte	21
 576 000d 00        		.byte	0
 577 000e 25        		.byte	37
 578 000f 01        		.byte	1
 579 0010 95        		.byte	-107
 580 0011 08        		.byte	8
 581 0012 75        		.byte	117
 582 0013 01        		.byte	1
 583 0014 81        		.byte	-127
 584 0015 02        		.byte	2
 585 0016 95        		.byte	-107
 586 0017 01        		.byte	1
 587 0018 75        		.byte	117
 588 0019 08        		.byte	8
 589 001a 81        		.byte	-127
 590 001b 01        		.byte	1
 591 001c 05        		.byte	5
 592 001d 08        		.byte	8
 593 001e 19        		.byte	25
 594 001f 01        		.byte	1
 595 0020 29        		.byte	41
 596 0021 05        		.byte	5
 597 0022 95        		.byte	-107
 598 0023 05        		.byte	5
 599 0024 75        		.byte	117
 600 0025 01        		.byte	1
 601 0026 91        		.byte	-111
 602 0027 02        		.byte	2
 603 0028 95        		.byte	-107
 604 0029 01        		.byte	1
 605 002a 75        		.byte	117
 606 002b 03        		.byte	3
 607 002c 91        		.byte	-111
 608 002d 01        		.byte	1
 609 002e 05        		.byte	5
 610 002f 07        		.byte	7
 611 0030 19        		.byte	25
 612 0031 00        		.byte	0
 613 0032 29        		.byte	41
 614 0033 FF        		.byte	-1
 615 0034 15        		.byte	21
 616 0035 00        		.byte	0
 617 0036 26        		.byte	38
 618 0037 FF        		.byte	-1
 619 0038 00        		.byte	0
 620 0039 95        		.byte	-107
 621 003a 06        		.byte	6
 622 003b 75        		.byte	117
 623 003c 08        		.byte	8
 624 003d 81        		.byte	-127
 625 003e 00        		.byte	0
 626 003f C0        		.byte	-64
 627               		.section	.rodata.CSWTCH.2,"a",@progbits
 630               	CSWTCH.2:
 631 0000 0000      		.word	ConfigurationDescriptor+18
 632 0002 0000      		.word	ConfigurationDescriptor+43
 633 0004 0000      		.word	ConfigurationDescriptor+68
 634 0006 0000      		.word	ConfigurationDescriptor+93
 635               		.section	.rodata.CSWTCH.4,"a",@progbits
 638               	CSWTCH.4:
 639 0000 0000      		.word	KeyboardReport
 640 0002 0000      		.word	MouseReport
 641 0004 0000      		.word	ExtrakeyReport
 642 0006 0000      		.word	ConsoleReport
 643               		.section	.rodata.CSWTCH.5,"a",@progbits
 646               	CSWTCH.5:
 647 0000 40        		.byte	64
 648 0001 4D        		.byte	77
 649 0002 36        		.byte	54
 650 0003 22        		.byte	34
 651               		.text
 652               	.Letext0:
 653               		.file 2 "/usr/lib64/gcc/avr/4.7.1/../../../../avr/include/stdint.h"
 654               		.file 3 "/usr/lib64/gcc/avr/4.7.1/include/stddef.h"
 655               		.file 4 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.
 656               		.file 5 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDCl
 657               		.file 6 "../../../../tmk_core/protocol/lufa/descriptor.h"
 658               		.file 7 "../../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 descriptor.c
     /tmp/cciYzjA8.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cciYzjA8.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cciYzjA8.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cciYzjA8.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cciYzjA8.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cciYzjA8.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cciYzjA8.s:14     .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor
     /tmp/cciYzjA8.s:256    .progmem.data.ConfigurationDescriptor:0000000000000000 ConfigurationDescriptor
     /tmp/cciYzjA8.s:248    .progmem.data.LanguageString:0000000000000000 LanguageString
     /tmp/cciYzjA8.s:227    .progmem.data.ManufacturerString:0000000000000000 ManufacturerString
     /tmp/cciYzjA8.s:205    .progmem.data.ProductString:0000000000000000 ProductString
     /tmp/cciYzjA8.s:630    .rodata.CSWTCH.2:0000000000000000 CSWTCH.2
     /tmp/cciYzjA8.s:638    .rodata.CSWTCH.4:0000000000000000 CSWTCH.4
     /tmp/cciYzjA8.s:646    .rodata.CSWTCH.5:0000000000000000 CSWTCH.5
     /tmp/cciYzjA8.s:363    .progmem.data.DeviceDescriptor:0000000000000000 DeviceDescriptor
     /tmp/cciYzjA8.s:382    .progmem.data.ConsoleReport:0000000000000000 ConsoleReport
     /tmp/cciYzjA8.s:421    .progmem.data.ExtrakeyReport:0000000000000000 ExtrakeyReport
     /tmp/cciYzjA8.s:480    .progmem.data.MouseReport:0000000000000000 MouseReport
     /tmp/cciYzjA8.s:562    .progmem.data.KeyboardReport:0000000000000000 KeyboardReport

UNDEFINED SYMBOLS
__do_copy_data
